<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Gateway-Tests" resourceRoot="" soapui-version="4.6.4" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="MerchantServiceImplServiceSoapBinding" type="wsdl" bindingName="{http://soap.merchant.api.web.phoenix.bpc.ru/}MerchantServiceImplServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="https://3dsec.sberbank.ru/payment/webservices/merchant-ws?wsdl" id="b630e263-5676-40c5-bba2-f546034faf3a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://3dsec.sberbank.ru/payment/webservices/merchant-ws?wsdl"><con:part><con:url>https://3dsec.sberbank.ru/payment/webservices/merchant-ws?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="MerchantServiceImplService" targetNamespace="http://soap.merchant.api.web.phoenix.bpc.ru/" xmlns:ns1="http://engine.paymentgate.ru/webservices/merchant" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://soap.merchant.api.web.phoenix.bpc.ru/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:import location="https://3dsec.sberbank.ru/payment/webservices/merchant-ws?wsdl=MerchantService.wsdl" namespace="http://engine.paymentgate.ru/webservices/merchant"></wsdl:import>
  <wsdl:binding name="MerchantServiceImplServiceSoapBinding" type="ns1:MerchantService">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getLastOrders">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getLastOrders">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLastOrdersResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyEnrollment">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="verifyEnrollment">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="verifyEnrollmentResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="paymentOrderBinding">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="paymentOrderBinding">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="paymentOrderBindingResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="bindCard">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="bindCard">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="bindCardResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseOrder">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="reverseOrder">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="reverseOrderResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="paymentOrderOtherWay">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="paymentOrderOtherWay">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="paymentOrderOtherWayResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="checkAuthenticate">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="checkAuthenticate">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkAuthenticateResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="extendBinding">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="extendBinding">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="extendBindingResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="paymentOrder">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="paymentOrder">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="paymentOrderResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addParams">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="addParams">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="addParamsResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOrderStatus">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getOrderStatus">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrderStatusResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unBindCard">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="unBindCard">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="unBindCardResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="depositOrder">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="depositOrder">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="depositOrderResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerOrderPreAuth">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="registerOrderPreAuth">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="registerOrderPreAuthResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOrderStatusExtended">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getOrderStatusExtended">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrderStatusExtendedResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBindings">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="getBindings">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getBindingsResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="refundOrder">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="refundOrder">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="refundOrderResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerOrder">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="registerOrder">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="registerOrderResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="finishThreeDs">
      <soap:operation soapAction="" style="rpc"/>
      <wsdl:input name="finishThreeDs">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:input>
      <wsdl:output name="finishThreeDsResponse">
        <soap:body namespace="http://engine.paymentgate.ru/webservices/merchant" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MerchantServiceImplService">
    <wsdl:port binding="tns:MerchantServiceImplServiceSoapBinding" name="MerchantServiceImplPort">
      <soap:address location="https://3dsec.sberbank.ru/payment/webservices/merchant-ws"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>https://3dsec.sberbank.ru/payment/webservices/merchant-ws?wsdl=MerchantService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="MerchantService" targetNamespace="http://engine.paymentgate.ru/webservices/merchant" xmlns:ns1="http://engine.paymentgate.ru/webservices/merchant" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema targetNamespace="http://engine.paymentgate.ru/webservices/merchant" version="1.0" xmlns:tns="http://engine.paymentgate.ru/webservices/merchant" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="orderInfo">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="params" type="tns:serviceParam"/>
        </xs:sequence>
        <xs:attribute name="ordernumber" type="xs:string"/>
        <xs:attribute name="amount" type="xs:long" use="required"/>
        <xs:attribute name="approvedAmount" type="xs:long" use="required"/>
        <xs:attribute name="depositedAmount" type="xs:long" use="required"/>
        <xs:attribute name="currencyCode" type="xs:short" use="required"/>
        <xs:attribute name="state" type="tns:transactionState"/>
        <xs:attribute name="fraudLevel" type="xs:int" use="required"/>
        <xs:attribute name="cardholder" type="xs:string"/>
        <xs:attribute name="panMasked" type="xs:string"/>
        <xs:attribute name="ip" type="xs:string"/>
        <xs:attribute name="actionCode" type="xs:string"/>
        <xs:attribute name="date" type="xs:dateTime"/>
        <xs:attribute name="bankName" type="xs:string"/>
        <xs:attribute name="approvalCode" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="serviceParam">
        <xs:sequence/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType abstract="true" name="abstractCollection">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType abstract="true" name="abstractList">
        <xs:complexContent>
          <xs:extension base="tns:abstractCollection">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="arrayList">
        <xs:complexContent>
          <xs:extension base="tns:abstractList">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="orderAddendumList">
        <xs:complexContent>
          <xs:extension base="tns:arrayList">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="verifyEnrollmentResponse">
        <xs:sequence/>
        <xs:attribute name="isEnrolled" type="xs:string"/>
        <xs:attribute name="emitterName" type="xs:string"/>
        <xs:attribute name="emitterCountryCode" type="xs:string"/>
        <xs:attribute name="errorMessage" type="xs:string"/>
        <xs:attribute name="errorCode" type="xs:int" use="required"/>
      </xs:complexType>
      <xs:complexType name="paymentOrderBindingParams">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="params" type="tns:serviceParam"/>
        </xs:sequence>
        <xs:attribute name="mdOrder" type="xs:string"/>
        <xs:attribute name="bindingId" type="xs:string"/>
        <xs:attribute name="language" type="xs:string"/>
        <xs:attribute name="ip" type="xs:string"/>
        <xs:attribute name="cvc" type="xs:string"/>
        <xs:attribute name="email" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="paymentOrderResult">
        <xs:sequence/>
        <xs:attribute name="errorCode" type="xs:int" use="required"/>
        <xs:attribute name="errorMessage" type="xs:string"/>
        <xs:attribute name="info" type="xs:string"/>
        <xs:attribute name="redirect" type="xs:string"/>
        <xs:attribute name="acsUrl" type="xs:string"/>
        <xs:attribute name="paReq" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="orderResult">
        <xs:sequence/>
        <xs:attribute name="errorCode" type="xs:int" use="required"/>
        <xs:attribute name="errorMessage" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="abstractServiceRequest">
        <xs:sequence/>
        <xs:attribute name="language" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="reversalOrderParams">
        <xs:complexContent>
          <xs:extension base="tns:abstractServiceRequest">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="params" type="tns:serviceParam"/>
            </xs:sequence>
            <xs:attribute name="orderId" type="xs:string"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="paymentOrderOtherWayParams">
        <xs:complexContent>
          <xs:extension base="tns:abstractServiceRequest">
            <xs:sequence/>
            <xs:attribute name="orderId" type="xs:string"/>
            <xs:attribute name="paymentWay" type="xs:string"/>
            <xs:attribute name="ip" type="xs:string"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="paymentOrderOtherWayResult">
        <xs:sequence/>
        <xs:attribute name="errorCode" type="xs:int" use="required"/>
        <xs:attribute name="errorMessage" type="xs:string"/>
        <xs:attribute name="info" type="xs:string"/>
        <xs:attribute name="redirect" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="loginParams">
        <xs:complexContent>
          <xs:extension base="tns:abstractServiceRequest">
            <xs:sequence/>
            <xs:attribute name="login" type="xs:string"/>
            <xs:attribute name="password" type="xs:string"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="extendBindingRequest">
        <xs:complexContent>
          <xs:extension base="tns:abstractServiceRequest">
            <xs:sequence/>
            <xs:attribute name="bindingId" type="xs:string"/>
            <xs:attribute name="newExpiry" type="xs:string"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="abstractServiceResponse">
        <xs:sequence/>
        <xs:attribute name="errorCode" type="xs:string"/>
        <xs:attribute name="errorMessage" type="xs:string"/>
        <xs:attribute name="userMessage" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="extendBindingResponse">
        <xs:complexContent>
          <xs:extension base="tns:abstractServiceResponse">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="paymentOrderParams">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="params" type="tns:serviceParam"/>
        </xs:sequence>
        <xs:attribute name="orderId" type="xs:string"/>
        <xs:attribute name="year" type="xs:string"/>
        <xs:attribute name="month" type="xs:string"/>
        <xs:attribute name="pan" type="xs:string"/>
        <xs:attribute name="cvc" type="xs:string"/>
        <xs:attribute name="cardholderName" type="xs:string"/>
        <xs:attribute name="language" type="xs:string"/>
        <xs:attribute name="ip" type="xs:string"/>
        <xs:attribute name="email" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="addParamsRequest">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="params" type="tns:serviceParam"/>
        </xs:sequence>
        <xs:attribute name="orderId" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="orderStatusRequest">
        <xs:sequence/>
        <xs:attribute name="orderId" type="xs:string"/>
        <xs:attribute name="language" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="orderStatusResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="params" type="tns:serviceParam"/>
          <xs:element minOccurs="0" name="orderBundle" type="tns:orderBundle"/>
        </xs:sequence>
        <xs:attribute name="orderStatus" type="xs:int" use="required"/>
        <xs:attribute name="errorCode" type="xs:int" use="required"/>
        <xs:attribute name="errorMessage" type="xs:string"/>
        <xs:attribute name="orderNumber" type="xs:string"/>
        <xs:attribute name="pan" type="xs:string"/>
        <xs:attribute name="expiration" type="xs:string"/>
        <xs:attribute name="cardholderName" type="xs:string"/>
        <xs:attribute name="amount" type="xs:int" use="required"/>
        <xs:attribute name="currency" type="xs:string"/>
        <xs:attribute name="approvalCode" type="xs:string"/>
        <xs:attribute name="authCode" type="xs:int" use="required"/>
        <xs:attribute name="ip" type="xs:string"/>
        <xs:attribute name="date" type="xs:dateTime"/>
        <xs:attribute name="orderDescription" type="xs:string"/>
        <xs:attribute name="merchantLogin" type="xs:string"/>
        <xs:attribute name="actionCodeDescription" type="xs:string"/>
        <xs:attribute name="clientId" type="xs:string"/>
        <xs:attribute name="bindingId" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="orderBundle">
        <xs:sequence>
          <xs:element minOccurs="0" name="orderCreationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="customerDetails" type="tns:customerDetails"/>
          <xs:element name="cartItems" type="tns:cartItems"/>
          <xs:element minOccurs="0" name="loyalties" type="tns:loyalties"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="customerDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="email" type="xs:string"/>
          <xs:element minOccurs="0" name="phone" type="xs:string"/>
          <xs:element minOccurs="0" name="contact" type="xs:string"/>
          <xs:element minOccurs="0" name="deliveryInfo" type="tns:deliveryInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deliveryInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="deliveryType" type="xs:string"/>
          <xs:element name="country" type="xs:string"/>
          <xs:element name="city" type="xs:string"/>
          <xs:element name="postAddress" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cartItems">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="items" nillable="true" type="tns:item"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="item">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="itemDetails" type="tns:itemDetails"/>
          <xs:element name="quantity" type="tns:quantity"/>
          <xs:element name="itemAmount" type="xs:long"/>
          <xs:element minOccurs="0" name="itemCurrency" type="xs:int"/>
          <xs:element name="itemCode" type="xs:string"/>
          <xs:element minOccurs="0" name="discount" type="tns:discount"/>
          <xs:element minOccurs="0" name="agentInterest" type="tns:agentInterest"/>
        </xs:sequence>
        <xs:attribute name="positionId" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="itemDetails">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="itemDetailsParams" nillable="true" type="tns:itemDetailsParam"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="itemDetailsParam">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="name" type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="quantity">
        <xs:simpleContent>
          <xs:extension base="xs:float">
            <xs:attribute name="measure" type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="discount">
        <xs:sequence>
          <xs:element minOccurs="0" name="discountType" type="xs:string"/>
          <xs:element minOccurs="0" name="discountValue" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agentInterest">
        <xs:sequence>
          <xs:element minOccurs="0" name="interestType" type="xs:string"/>
          <xs:element minOccurs="0" name="interestValue" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="loyalties">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="loyalties" nillable="true" type="tns:loyalty"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="loyalty">
        <xs:sequence>
          <xs:element name="bonusAmountForDebit" type="xs:long"/>
          <xs:element name="bonusAmountForCredit" type="xs:long"/>
        </xs:sequence>
        <xs:attribute name="loyaltyProgramName" type="xs:string"/>
        <xs:attribute name="positionId" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="orderParams">
        <xs:sequence>
          <xs:element minOccurs="0" name="returnUrl" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="params" type="tns:serviceParam"/>
          <xs:element minOccurs="0" name="clientId" type="xs:string"/>
          <xs:element minOccurs="0" name="orderBundle" type="tns:orderBundle"/>
        </xs:sequence>
        <xs:attribute name="merchantOrderNumber" type="xs:string"/>
        <xs:attribute name="description" type="xs:string"/>
        <xs:attribute name="amount" type="xs:int"/>
        <xs:attribute name="currency" type="xs:string"/>
        <xs:attribute name="language" type="xs:string"/>
        <xs:attribute name="pageView" type="tns:pageViewEnum"/>
        <xs:attribute name="sessionTimeoutSecs" type="xs:int"/>
      </xs:complexType>
      <xs:complexType name="registerOrderResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="formUrl" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="orderId" type="xs:string"/>
        <xs:attribute name="errorCode" type="xs:int" use="required"/>
        <xs:attribute name="errorMessage" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="depositOrderParams">
        <xs:complexContent>
          <xs:extension base="tns:abstractServiceRequest">
            <xs:sequence>
              <xs:element minOccurs="0" name="depositItems" type="tns:cartItems"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="params" type="tns:serviceParam"/>
            </xs:sequence>
            <xs:attribute name="orderId" type="xs:string"/>
            <xs:attribute name="depositAmount" type="xs:int"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getOrderStatusExtendedRequest">
        <xs:complexContent>
          <xs:extension base="tns:orderStatusRequest">
            <xs:sequence>
              <xs:element minOccurs="0" name="merchantOrderNumber" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getOrderStatusExtendedResponse">
        <xs:complexContent>
          <xs:extension base="tns:abstractServiceResponse">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="merchantOrderParams" type="tns:serviceParam"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:serviceParam"/>
              <xs:element minOccurs="0" name="cardAuthInfo" type="tns:cardAuthInfo"/>
              <xs:element minOccurs="0" name="bindingInfo" type="tns:cardBindingInfo"/>
              <xs:element minOccurs="0" name="authDateTime" type="xs:dateTime"/>
              <xs:element minOccurs="0" name="terminalId" type="xs:string"/>
              <xs:element minOccurs="0" name="authRefNum" type="xs:string"/>
              <xs:element minOccurs="0" name="paymentAmountInfo" type="tns:paymentAmountInfo"/>
              <xs:element minOccurs="0" name="bankInfo" type="tns:bankInfo"/>
              <xs:element minOccurs="0" name="orderBundle" type="tns:orderBundle"/>
            </xs:sequence>
            <xs:attribute name="orderNumber" type="xs:string"/>
            <xs:attribute name="orderStatus" type="xs:int"/>
            <xs:attribute name="actionCode" type="xs:int"/>
            <xs:attribute name="actionCodeDescription" type="xs:string"/>
            <xs:attribute name="amount" type="xs:int"/>
            <xs:attribute name="currency" type="xs:string"/>
            <xs:attribute name="date" type="xs:dateTime"/>
            <xs:attribute name="orderDescription" type="xs:string"/>
            <xs:attribute name="ip" type="xs:string"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="cardAuthInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="secureAuthInfo" type="tns:secureAuthInfo"/>
        </xs:sequence>
        <xs:attribute name="maskedPan" type="xs:string"/>
        <xs:attribute name="expiration" type="xs:string"/>
        <xs:attribute name="cardholderName" type="xs:string"/>
        <xs:attribute name="approvalCode" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="secureAuthInfo">
        <xs:sequence>
          <xs:element name="eci" type="xs:int"/>
          <xs:element minOccurs="0" name="threeDSInfo" type="tns:threeDSInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="threeDSInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="cavv" type="xs:string"/>
          <xs:element minOccurs="0" name="xid" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cardBindingInfo">
        <xs:sequence/>
        <xs:attribute name="clientId" type="xs:string"/>
        <xs:attribute name="bindingId" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="paymentAmountInfo">
        <xs:sequence/>
        <xs:attribute name="paymentState" type="tns:transactionState"/>
        <xs:attribute name="approvedAmount" type="xs:int" use="required"/>
        <xs:attribute name="depositedAmount" type="xs:int" use="required"/>
        <xs:attribute name="refundedAmount" type="xs:int" use="required"/>
      </xs:complexType>
      <xs:complexType name="bankInfo">
        <xs:sequence/>
        <xs:attribute name="bankName" type="xs:string"/>
        <xs:attribute name="bankCountryCode" type="xs:string"/>
        <xs:attribute name="bankCountryName" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="refundOrderParams">
        <xs:complexContent>
          <xs:extension base="tns:abstractServiceRequest">
            <xs:sequence>
              <xs:element minOccurs="0" name="refundItems" type="tns:cartItems"/>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="params" type="tns:serviceParam"/>
            </xs:sequence>
            <xs:attribute name="orderId" type="xs:string"/>
            <xs:attribute name="refundAmount" type="xs:int"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getBindingsRequest">
        <xs:sequence/>
        <xs:attribute name="clientId" type="xs:string"/>
        <xs:attribute name="bindingId" type="xs:string"/>
        <xs:attribute name="showExpired" type="xs:boolean" use="required"/>
        <xs:attribute name="language" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getBindingsResponse">
        <xs:complexContent>
          <xs:extension base="tns:abstractServiceResponse">
            <xs:sequence>
              <xs:element name="bindings">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="binding" type="tns:binding"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="binding">
        <xs:sequence/>
        <xs:attribute name="bindingId" type="xs:string"/>
        <xs:attribute name="maskedPan" type="xs:string"/>
        <xs:attribute name="expiryDate" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="finishThreeDSRequest">
        <xs:complexContent>
          <xs:extension base="tns:abstractServiceRequest">
            <xs:sequence/>
            <xs:attribute name="md" type="xs:string" use="required"/>
            <xs:attribute name="paRes" type="xs:string" use="required"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="finishThreeDSResponse">
        <xs:sequence/>
        <xs:attribute name="errorMessage" type="xs:string"/>
        <xs:attribute name="errorCode" type="xs:int" use="required"/>
        <xs:attribute name="returnUrl" type="xs:string"/>
      </xs:complexType>
      <xs:simpleType name="transactionState">
        <xs:restriction base="xs:string">
          <xs:enumeration value="CREATED"/>
          <xs:enumeration value="APPROVED"/>
          <xs:enumeration value="DECLINED"/>
          <xs:enumeration value="REVERSED"/>
          <xs:enumeration value="DEPOSITED"/>
          <xs:enumeration value="REFUNDED"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="pageViewEnum">
        <xs:restriction base="xs:string">
          <xs:enumeration value="MOBILE"/>
          <xs:enumeration value="DESKTOP"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType final="#all" name="orderInfoArray">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="tns:orderInfo"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="paymentOrderOtherWayResponse">
    <wsdl:part name="return" type="ns1:paymentOrderOtherWayResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLastOrders">
    <wsdl:part name="from" type="xsd:dateTime"></wsdl:part>
    <wsdl:part name="to" type="xsd:dateTime"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="depositOrder">
    <wsdl:part name="order" type="ns1:depositOrderParams"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrderStatusResponse">
    <wsdl:part name="return" type="ns1:orderStatusResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reverseOrder">
    <wsdl:part name="order" type="ns1:reversalOrderParams"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="verifyEnrollment">
    <wsdl:part name="pan" type="xsd:string"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLastOrdersResponse">
    <wsdl:part name="return" type="ns1:orderInfoArray"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unBindCardResponse">
    <wsdl:part name="return" type="ns1:orderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="refundOrder">
    <wsdl:part name="order" type="ns1:refundOrderParams"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrderStatusExtendedResponse">
    <wsdl:part name="return" type="ns1:getOrderStatusExtendedResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="registerOrderPreAuthResponse">
    <wsdl:part name="return" type="ns1:registerOrderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBindings">
    <wsdl:part name="request" type="ns1:getBindingsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reverseOrderResponse">
    <wsdl:part name="return" type="ns1:orderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="registerOrderResponse">
    <wsdl:part name="return" type="ns1:registerOrderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="unBindCard">
    <wsdl:part name="bindingId" type="xsd:string"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="paymentOrderBindingResponse">
    <wsdl:part name="return" type="ns1:paymentOrderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="refundOrderResponse">
    <wsdl:part name="return" type="ns1:orderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrderStatusExtended">
    <wsdl:part name="order" type="ns1:getOrderStatusExtendedRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrderStatus">
    <wsdl:part name="order" type="ns1:orderStatusRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bindCard">
    <wsdl:part name="bindingId" type="xsd:string"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="paymentOrder">
    <wsdl:part name="order" type="ns1:paymentOrderParams"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="finishThreeDsResponse">
    <wsdl:part name="return" type="ns1:finishThreeDSResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="finishThreeDs">
    <wsdl:part name="request" type="ns1:finishThreeDSRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="registerOrderPreAuth">
    <wsdl:part name="order" type="ns1:orderParams"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="depositOrderResponse">
    <wsdl:part name="return" type="ns1:orderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="registerOrder">
    <wsdl:part name="order" type="ns1:orderParams"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkAuthenticateResponse">
    <wsdl:part name="return" type="ns1:orderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bindCardResponse">
    <wsdl:part name="return" type="ns1:orderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="paymentOrderResponse">
    <wsdl:part name="return" type="ns1:paymentOrderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="extendBinding">
    <wsdl:part name="request" type="ns1:extendBindingRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="paymentOrderBinding">
    <wsdl:part name="order" type="ns1:paymentOrderBindingParams"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="extendBindingResponse">
    <wsdl:part name="return" type="ns1:extendBindingResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addParams">
    <wsdl:part name="request" type="ns1:addParamsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="paymentOrderOtherWay">
    <wsdl:part name="order" type="ns1:paymentOrderOtherWayParams"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkAuthenticate">
    <wsdl:part name="login" type="ns1:loginParams"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addParamsResponse">
    <wsdl:part name="return" type="ns1:orderResult"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getBindingsResponse">
    <wsdl:part name="return" type="ns1:getBindingsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="verifyEnrollmentResponse">
    <wsdl:part name="return" type="ns1:verifyEnrollmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="MerchantService">
    <wsdl:operation name="getLastOrders">
      <wsdl:input message="ns1:getLastOrders" name="getLastOrders"></wsdl:input>
      <wsdl:output message="ns1:getLastOrdersResponse" name="getLastOrdersResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyEnrollment">
      <wsdl:input message="ns1:verifyEnrollment" name="verifyEnrollment"></wsdl:input>
      <wsdl:output message="ns1:verifyEnrollmentResponse" name="verifyEnrollmentResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="paymentOrderBinding">
      <wsdl:input message="ns1:paymentOrderBinding" name="paymentOrderBinding"></wsdl:input>
      <wsdl:output message="ns1:paymentOrderBindingResponse" name="paymentOrderBindingResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="bindCard">
      <wsdl:input message="ns1:bindCard" name="bindCard"></wsdl:input>
      <wsdl:output message="ns1:bindCardResponse" name="bindCardResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reverseOrder">
      <wsdl:input message="ns1:reverseOrder" name="reverseOrder"></wsdl:input>
      <wsdl:output message="ns1:reverseOrderResponse" name="reverseOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="paymentOrderOtherWay">
      <wsdl:input message="ns1:paymentOrderOtherWay" name="paymentOrderOtherWay"></wsdl:input>
      <wsdl:output message="ns1:paymentOrderOtherWayResponse" name="paymentOrderOtherWayResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="checkAuthenticate">
      <wsdl:input message="ns1:checkAuthenticate" name="checkAuthenticate"></wsdl:input>
      <wsdl:output message="ns1:checkAuthenticateResponse" name="checkAuthenticateResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="extendBinding">
      <wsdl:input message="ns1:extendBinding" name="extendBinding"></wsdl:input>
      <wsdl:output message="ns1:extendBindingResponse" name="extendBindingResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="paymentOrder">
      <wsdl:input message="ns1:paymentOrder" name="paymentOrder"></wsdl:input>
      <wsdl:output message="ns1:paymentOrderResponse" name="paymentOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addParams">
      <wsdl:input message="ns1:addParams" name="addParams"></wsdl:input>
      <wsdl:output message="ns1:addParamsResponse" name="addParamsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="unBindCard">
      <wsdl:input message="ns1:unBindCard" name="unBindCard"></wsdl:input>
      <wsdl:output message="ns1:unBindCardResponse" name="unBindCardResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOrderStatus">
      <wsdl:input message="ns1:getOrderStatus" name="getOrderStatus"></wsdl:input>
      <wsdl:output message="ns1:getOrderStatusResponse" name="getOrderStatusResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerOrderPreAuth">
      <wsdl:input message="ns1:registerOrderPreAuth" name="registerOrderPreAuth"></wsdl:input>
      <wsdl:output message="ns1:registerOrderPreAuthResponse" name="registerOrderPreAuthResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="depositOrder">
      <wsdl:input message="ns1:depositOrder" name="depositOrder"></wsdl:input>
      <wsdl:output message="ns1:depositOrderResponse" name="depositOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOrderStatusExtended">
      <wsdl:input message="ns1:getOrderStatusExtended" name="getOrderStatusExtended"></wsdl:input>
      <wsdl:output message="ns1:getOrderStatusExtendedResponse" name="getOrderStatusExtendedResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="refundOrder">
      <wsdl:input message="ns1:refundOrder" name="refundOrder"></wsdl:input>
      <wsdl:output message="ns1:refundOrderResponse" name="refundOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getBindings">
      <wsdl:input message="ns1:getBindings" name="getBindings"></wsdl:input>
      <wsdl:output message="ns1:getBindingsResponse" name="getBindingsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerOrder">
      <wsdl:input message="ns1:registerOrder" name="registerOrder"></wsdl:input>
      <wsdl:output message="ns1:registerOrderResponse" name="registerOrderResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="finishThreeDs">
      <wsdl:input message="ns1:finishThreeDs" name="finishThreeDs"></wsdl:input>
      <wsdl:output message="ns1:finishThreeDsResponse" name="finishThreeDsResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:endpoint>https://test.paymentgate.ru/testpayment/webservices/merchant-ws</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="bindCard" bindingOperationName="bindCard" type="Request-Response" outputName="bindCardResponse" inputName="bindCard" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="e9555fae-952a-4eec-9b64-612a0529e115"><con:settings/><con:call name="Request 1" id="a171b2b6-4b65-408e-a8f2-13a19d07b455"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:bindCard>
         <bindingId>?</bindingId>
      </mer:bindCard>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/bindCard"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="checkAuthenticate" bindingOperationName="checkAuthenticate" type="Request-Response" outputName="checkAuthenticateResponse" inputName="checkAuthenticate" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="3e68fa28-c54f-4d89-b890-52a7f2028880"><con:settings/><con:call name="Request 1" id="834fb57b-3da8-4bfc-9706-f8bc8385e9e1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:checkAuthenticate>
         <login language="?" login="?" password="?"/>
      </mer:checkAuthenticate>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/checkAuthenticate"/></con:call></con:operation><con:operation isOneWay="false" action="" name="depositOrder" bindingOperationName="depositOrder" type="Request-Response" outputName="depositOrderResponse" inputName="depositOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f78fa855-e729-4961-961f-39b96c1e72ca"><con:settings/><con:call name="Request 1" id="a7962ce9-da3a-4a8a-863f-1fc17969577d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:depositOrder>
         <order language="?" orderId="?" depositAmount="?">
            <!--Optional:-->
            <depositItems>
               <!--Zero or more repetitions:-->
               <items positionId="?">
                  <name>?</name>
                  <!--Optional:-->
                  <itemDetails>
                     <!--Zero or more repetitions:-->
                     <itemDetailsParams name="?">?</itemDetailsParams>
                  </itemDetails>
                  <quantity measure="?">?</quantity>
                  <itemAmount>?</itemAmount>
                  <itemCurrency>?</itemCurrency>
                  <itemCode>?</itemCode>
                  <!--Optional:-->
                  <discount>
                     <!--Optional:-->
                     <discountType>?</discountType>
                     <!--Optional:-->
                     <discountValue>?</discountValue>
                  </discount>
                  <!--Optional:-->
                  <agentInterest>
                     <!--Optional:-->
                     <interestType>?</interestType>
                     <!--Optional:-->
                     <interestValue>?</interestValue>
                  </agentInterest>
               </items>
            </depositItems>
            <!--Zero or more repetitions:-->
            <params name="?" value="?"/>
         </order>
      </mer:depositOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/depositOrder"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="extendBinding" bindingOperationName="extendBinding" type="Request-Response" outputName="extendBindingResponse" inputName="extendBinding" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4a0889a7-bb62-42a6-a914-1ca558a51c18"><con:settings/><con:call name="Request 1" id="9ce8dbc6-c361-4833-a943-a44b80e7cf51"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:extendBinding>
         <request language="?" bindingId="?" newExpiry="?"/>
      </mer:extendBinding>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/extendBinding"/></con:call></con:operation><con:operation isOneWay="false" action="" name="finishThreeDs" bindingOperationName="finishThreeDs" type="Request-Response" outputName="finishThreeDsResponse" inputName="finishThreeDs" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="48edbf24-ee3d-454b-b41d-132efc50443f"><con:settings/><con:call name="Request 1" id="d7248319-39d7-4559-99e0-87913896b730"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:finishThreeDs>
         <request md="?" paRes="?" language="?"/>
      </mer:finishThreeDs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/finishThreeDs"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getBindings" bindingOperationName="getBindings" type="Request-Response" outputName="getBindingsResponse" inputName="getBindings" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ca3c2a8b-7096-476a-b531-3058e586ea6f"><con:settings/><con:call name="Request 1" id="852e8f74-e80a-4879-b42a-2bce1bd51ff4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:getBindings>
         <request showExpired="?" clientId="?" bindingId="?" language="?"/>
      </mer:getBindings>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/getBindings"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getLastOrders" bindingOperationName="getLastOrders" type="Request-Response" outputName="getLastOrdersResponse" inputName="getLastOrders" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="16c5476c-bcc5-4cf3-9d3b-09ef90744ccf"><con:settings/><con:call name="Request 1" id="f5fe5756-991d-49cc-9346-8ac7c6ac7c2e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:getLastOrders>
         <from>?</from>
         <to>?</to>
      </mer:getLastOrders>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/getLastOrders"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getOrderStatus" bindingOperationName="getOrderStatus" type="Request-Response" outputName="getOrderStatusResponse" inputName="getOrderStatus" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="bd347a4d-f6b6-4cd9-8bb8-1b8bb07e5284"><con:settings/><con:call name="Request 1" id="e2f91014-84cb-4299-9b70-5e67a919f095"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:getOrderStatus>
         <order orderId="?" language="?"/>
      </mer:getOrderStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/getOrderStatus"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getOrderStatusExtended" bindingOperationName="getOrderStatusExtended" type="Request-Response" outputName="getOrderStatusExtendedResponse" inputName="getOrderStatusExtended" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1efb2a4c-1590-4ecb-9fd3-c9407f051242"><con:settings/><con:call name="Request 1" id="9450720d-dd18-4782-84e6-b061617143d8"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:getOrderStatusExtended>
         <order orderId="?" language="?">
            </order>
      </mer:getOrderStatusExtended>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/getOrderStatusExtended"/></con:call></con:operation><con:operation isOneWay="false" action="" name="paymentOrder" bindingOperationName="paymentOrder" type="Request-Response" outputName="paymentOrderResponse" inputName="paymentOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="da4e8813-851a-4238-a924-f471f9b11c20"><con:settings/><con:call name="Request 1" id="2a2aad00-f8ee-4feb-91a8-94084352aebc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:paymentOrder>
         <order orderId="?" year="?" month="?" pan="?" cvc="?" cardholderName="?" language="?" ip="?" email="?">
            <!--Zero or more repetitions:-->
            <params name="?" value="?"/>
         </order>
      </mer:paymentOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/paymentOrder"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="paymentOrderBinding" bindingOperationName="paymentOrderBinding" type="Request-Response" outputName="paymentOrderBindingResponse" inputName="paymentOrderBinding" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a90ae230-bad8-4cc3-94f7-adb6bcf14a02"><con:settings/><con:call name="Request 1" id="064ecb2b-b23e-46fa-98e8-16e8a1e1f450"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:paymentOrderBinding>
         <order mdOrder="?" bindingId="?" language="?" ip="?" cvc="?" email="?">
            </order>
      </mer:paymentOrderBinding>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/paymentOrderBinding"/></con:call></con:operation><con:operation isOneWay="false" action="" name="paymentOrderOtherWay" bindingOperationName="paymentOrderOtherWay" type="Request-Response" outputName="paymentOrderOtherWayResponse" inputName="paymentOrderOtherWay" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="65f81736-1aca-4c8e-ae04-c286c253d6b3"><con:settings/><con:call name="Request 1" id="2a43069d-a8e1-4216-a6d1-4087bf6bb853"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:paymentOrderOtherWay>
         <order language="?" orderId="?" paymentWay="?" ip="?"/>
      </mer:paymentOrderOtherWay>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/paymentOrderOtherWay"/></con:call></con:operation><con:operation isOneWay="false" action="" name="refundOrder" bindingOperationName="refundOrder" type="Request-Response" outputName="refundOrderResponse" inputName="refundOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="af82911f-1f13-4715-81b4-c5b0fdd84a0c"><con:settings/><con:call name="Request 1" id="2f5e516c-4deb-4d38-9342-062303bc49c0"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:refundOrder>
         <order language="?" orderId="?" refundAmount="?">
            </order>
      </mer:refundOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/refundOrder"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="registerOrder" bindingOperationName="registerOrder" type="Request-Response" outputName="registerOrderResponse" inputName="registerOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="dbb2951f-e393-48e8-8095-15ec9d871c3f"><con:settings/><con:call name="Request 1" id="ca441d4a-c9f9-4384-a321-d3c8b06563d7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:registerOrder>
         <order merchantOrderNumber="?" description="?" amount="?" currency="?" language="?" pageView="?" sessionTimeoutSecs="?">
            <!--Optional:-->
            <returnUrl>?</returnUrl>
            <!--Zero or more repetitions:-->
            <params name="?" value="?"/>
            <!--Optional:-->
            <clientId>?</clientId>
            <!--Optional:-->
            <orderBundle>
               <!--Optional:-->
               <orderCreationDate>?</orderCreationDate>
               <!--Optional:-->
               <customerDetails>
                  <!--Optional:-->
                  <email>?</email>
                  <!--Optional:-->
                  <phone>?</phone>
                  <!--Optional:-->
                  <contact>?</contact>
                  <!--Optional:-->
                  <deliveryInfo>
                     <!--Optional:-->
                     <deliveryType>?</deliveryType>
                     <country>?</country>
                     <city>?</city>
                     <postAddress>?</postAddress>
                  </deliveryInfo>
               </customerDetails>
               <cartItems>
                  <!--Zero or more repetitions:-->
                  <items positionId="?">
                     <name>?</name>
                     <!--Optional:-->
                     <itemDetails>
                        <!--Zero or more repetitions:-->
                        <itemDetailsParams name="?">?</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="?">?</quantity>
                     <itemAmount>?</itemAmount>
                     <itemCurrency>?</itemCurrency>
                     <itemCode>?</itemCode>
                     <!--Optional:-->
                     <discount>
                        <!--Optional:-->
                        <discountType>?</discountType>
                        <!--Optional:-->
                        <discountValue>?</discountValue>
                     </discount>
                     <!--Optional:-->
                     <agentInterest>
                        <!--Optional:-->
                        <interestType>?</interestType>
                        <!--Optional:-->
                        <interestValue>?</interestValue>
                     </agentInterest>
                  </items>
               </cartItems>
               <!--Optional:-->
               <loyalties>
                  <!--Zero or more repetitions:-->
                  <loyalties loyaltyProgramName="?" positionId="?">
                     <bonusAmountForDebit>?</bonusAmountForDebit>
                     <bonusAmountForCredit>?</bonusAmountForCredit>
                  </loyalties>
               </loyalties>
            </orderBundle>
         </order>
      </mer:registerOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/registerOrder"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 2" id="8130c099-11c5-4167-8344-6d13a9a3f760"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://test.paymentgate.ru/testpayment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
<mer:registerOrder>
<order merchantOrderNumber="3463422256ygbxty236" description="проверка связок" amount="66600" currency="810" language="ru" pageView="?" sessionTimeoutSecs="160">
<returnUrl>ya.ru</returnUrl>
<!-Zero or more repetitions:->
<params name="?" value="?"/>
<!-Optional:->
<clientId>12345</clientId>
</order>
</mer:registerOrder>
</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/registerOrder"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="registerOrderPreAuth" bindingOperationName="registerOrderPreAuth" type="Request-Response" outputName="registerOrderPreAuthResponse" inputName="registerOrderPreAuth" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="9bb2c431-2cbb-4e3c-9920-764a26d42339"><con:settings/><con:call name="Request 1" id="70b9592c-d236-4f32-bedc-27067236ac21"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:registerOrderPreAuth>
         <order merchantOrderNumber="?" description="?" amount="?" currency="?" language="?" pageView="?" sessionTimeoutSecs="?">
            </order>
      </mer:registerOrderPreAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/registerOrderPreAuth"/></con:call></con:operation><con:operation isOneWay="false" action="" name="reverseOrder" bindingOperationName="reverseOrder" type="Request-Response" outputName="reverseOrderResponse" inputName="reverseOrder" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="881b8c17-3831-4c11-916f-f6cf5db0eb60"><con:settings/><con:call name="Request 1" id="6edae506-deb4-4850-881a-222c7d4dfd13"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:reverseOrder>
         <order language="?" orderId="?">
            </order>
      </mer:reverseOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/reverseOrder"/></con:call></con:operation><con:operation isOneWay="false" action="" name="unBindCard" bindingOperationName="unBindCard" type="Request-Response" outputName="unBindCardResponse" inputName="unBindCard" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f4c2b878-72ca-4a95-9b6a-f7eb0cc35ccf"><con:settings/><con:call name="Request 1" id="cb50ac37-a762-424f-9fee-690bbd1538a8"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:unBindCard>
         <bindingId>?</bindingId>
      </mer:unBindCard>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/unBindCard"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="verifyEnrollment" bindingOperationName="verifyEnrollment" type="Request-Response" outputName="verifyEnrollmentResponse" inputName="verifyEnrollment" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f86e0e0f-0305-4fb0-a119-b88ee8ec69f3"><con:settings/><con:call name="Request 1" id="465f2df8-1740-4eee-8b9e-b49abcefd40c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:verifyEnrollment>
         <pan>?</pan>
      </mer:verifyEnrollment>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/verifyEnrollment"/></con:call></con:operation><con:operation isOneWay="false" action="" name="addParams" bindingOperationName="addParams" type="Request-Response" outputName="addParamsResponse" inputName="addParams" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="438f338d-dff3-49d7-a32b-e1d42ebb253b"><con:settings/><con:call name="Request 1" id="f3eefb64-d0b6-4c89-9dce-7db6d8f868ee"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:addParams>
         <request orderId="?">
            </request>
      </mer:addParams>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://soap.merchant.api.web.phoenix.bpc.ru/MerchantService/addParams"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AlfaRestApi" type="rest" basePath="" id="4dce7dd0-377c-43dd-82cc-b7c8accb559c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://3dsec.sberbank.ru/payment/rest</con:endpoint><con:endpoint>https://test.paymentgate.ru/devpayment/rest</con:endpoint><con:endpoint>https://test.paymentgate.ru/testpayment/rest</con:endpoint></con:endpoints><con:resource name="Reverse" path="reverse.do" id="1bdbce1b-07b5-40ea-b5c7-291a6c916dd5"><con:settings/><con:parameters><con:parameter><con:name>amount</con:name><con:value>100</con:value><con:style>QUERY</con:style><con:default>100</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>currency</con:name><con:value>810</con:value><con:style>QUERY</con:style><con:default>810</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>language</con:name><con:value>ru</con:value><con:style>QUERY</con:style><con:default>ru</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>orderId</con:name><con:value>e5b59d3d-746b-4828-9da4-06f126e01b68 </con:value><con:style>QUERY</con:style><con:default>e5b59d3d-746b-4828-9da4-06f126e01b68 </con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>testPwd</con:value><con:style>QUERY</con:style><con:default>testPwd</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userName</con:name><con:value>testtest</con:value><con:style>QUERY</con:style><con:default>testtest</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="7991991f-830b-4692-a010-df7e5a15652a"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="099230c5-4961-4c18-8acf-cc6a9d6a5887"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Refund" path="/refund.do" id="668badc4-efa3-414d-b776-6403e3ec4696"><con:settings/><con:parameters><con:parameter><con:name>amount</con:name><con:value>500</con:value><con:style>QUERY</con:style><con:default>500</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>currency</con:name><con:value>810</con:value><con:style>QUERY</con:style><con:default>810</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>language</con:name><con:value>ru</con:value><con:style>QUERY</con:style><con:default>ru</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>orderId</con:name><con:value>5e97e3fd-1d20-4b4b-a542-f5995f5e8208 </con:value><con:style>QUERY</con:style><con:default>5e97e3fd-1d20-4b4b-a542-f5995f5e8208 </con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>testPwd</con:value><con:style>QUERY</con:style><con:default>testPwd</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userName</con:name><con:value>testtest</con:value><con:style>QUERY</con:style><con:default>testtest</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="ea5f7357-0940-47d6-8676-cca6e61ed190"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="ef9d773c-02d6-47d7-a4b5-9f7730a6e9b0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="amount" value="500" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="getOrderStatus" path="getOrderStatus.do" id="a70541fb-961b-4654-b5be-f0166b79b882"><con:settings/><con:parameters><con:parameter><con:name>language</con:name><con:value>ru</con:value><con:style>QUERY</con:style><con:default>ru</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>orderId</con:name><con:value>5e97e3fd-1d20-4b4b-a542-f5995f5e8208 </con:value><con:style>QUERY</con:style><con:default>5e97e3fd-1d20-4b4b-a542-f5995f5e8208 </con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>testPwd</con:value><con:style>QUERY</con:style><con:default>testPwd</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userName</con:name><con:value>testtest</con:value><con:style>QUERY</con:style><con:default>testtest</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="88265b98-28c8-4541-bf99-727b5d30d113"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="c2337bc3-8612-47a2-b863-567cd092553f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userName" value="test"/>
  <con:entry key="language" value="ru"/>
  <con:entry key="orderId" value="31aa2b05-8827-4207-b388-f0bcc70583c6"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="getOrderStatusExtended" path="getOrderStatusExtended.do" id="ae4b1dd6-5e47-4bf7-b806-fb741c89df63"><con:settings/><con:parameters><con:parameter><con:name>userName</con:name><con:value>login</con:value><con:style>QUERY</con:style><con:default>login</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>password</con:value><con:style>QUERY</con:style><con:default>password</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>orderId</con:name><con:value>285b2973-4d02-4980-a54e-57c4d0d2xxx9</con:value><con:style>QUERY</con:style><con:default>285b2973-4d02-4980-a54e-57c4d0d2xxx9</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>language</con:name><con:value>ru</con:value><con:style>QUERY</con:style><con:default>ru</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="96a1f299-1fd8-45e0-a775-d3b2291ce79d"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="4d815afe-ffd3-4ea2-aa9a-7566a2a9d2bb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userName" value="test"/>
  <con:entry key="password" value="testPwd"/>
  <con:entry key="orderId" value="31aa2b05-8827-4207-b388-f0bcc70583c6"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="isEnrollment" path="verifyEnrollment.do" id="87b63511-a6a0-49b0-a09a-5f68a6c44753"><con:settings/><con:parameters><con:parameter><con:name>userName</con:name><con:value>api</con:value><con:style>QUERY</con:style><con:default>api</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>***</con:value><con:style>QUERY</con:style><con:default>***</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>pan</con:name><con:value>4111111111111111]</con:value><con:style>QUERY</con:style><con:default>4111111111111111]</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="7896d433-91af-4268-b804-7ec0f63af367"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="9d2e4dcb-4fcb-424e-be00-682017d9544f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userName" value="test"/>
  <con:entry key="password" value="testPwd"/>
  <con:entry key="pan" value="4111111111111111"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="preAuth" path="/registerPreAuth.do" id="469ab232-06e3-498f-a568-7cfd6fe8fb40"><con:settings/><con:parameters><con:parameter required="true"><con:name>amount</con:name><con:value>100</con:value><con:style>QUERY</con:style><con:default>100</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>currency</con:name><con:value>810</con:value><con:style>QUERY</con:style><con:default>810</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>language</con:name><con:value>ru</con:value><con:style>QUERY</con:style><con:default>ru</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>orderNumber</con:name><con:value>87654321</con:value><con:style>QUERY</con:style><con:default>87654321</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>testPwd </con:value><con:style>QUERY</con:style><con:default>testPwd </con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>returnUrl</con:name><con:value>finish.html?login=test&amp;password=testPwd</con:value><con:style>QUERY</con:style><con:default>finish.html?login=test&amp;password=testPwd</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userName</con:name><con:value>test</con:value><con:style>QUERY</con:style><con:default>test</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>jsonParams</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>orderBundle</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>pageView</con:name><con:style>QUERY</con:style></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="84614ce7-ccf4-48f5-be00-451196bdd419"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="df97f3d9-6ef3-427f-bf78-e4ffaeb57d8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>amount</con:entry><con:entry>currency</con:entry><con:entry>language</con:entry><con:entry>orderNumber</con:entry><con:entry>password</con:entry><con:entry>returnUrl</con:entry><con:entry>userName</con:entry><con:entry>jsonParams</con:entry><con:entry>orderBundle</con:entry><con:entry>pageView</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="Deposit" path="deposit.do" id="b8971d32-a546-4426-871f-c17a4fb070be"><con:settings/><con:parameters><con:parameter><con:name>amount</con:name><con:value>100</con:value><con:style>QUERY</con:style><con:default>100</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>currency</con:name><con:value>810</con:value><con:style>QUERY</con:style><con:default>810</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>language</con:name><con:value>ru</con:value><con:style>QUERY</con:style><con:default>ru</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>orderId</con:name><con:value>e5b59d3d-746b-4828-9da4-06f126e01b68</con:value><con:style>QUERY</con:style><con:default>e5b59d3d-746b-4828-9da4-06f126e01b68</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>testPwd</con:value><con:style>QUERY</con:style><con:default>testPwd</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>userName</con:name><con:value>testtest</con:value><con:style>QUERY</con:style><con:default>testtest</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="79555f2d-794c-42ae-a154-1f66bc377514"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="84d0c0ec-34d7-4fe9-a315-ca2b39e1170a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="amount" value="100" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="paymentOrderBinding" path="paymentOrderBinding.do" id="afa6f6c9-e449-4bad-b207-971d7c756fbb"><con:settings/><con:parameters><con:parameter><con:name>userName</con:name><con:value>username</con:value><con:style>QUERY</con:style><con:default>username</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>mdOrder</con:name><con:value>65401edc-3fa1-4112-87fd-a569ca69fb6a</con:value><con:style>QUERY</con:style><con:default>65401edc-3fa1-4112-87fd-a569ca69fb6a</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>bindingId</con:name><con:value>41954212-70a7-4eae-8430-90c1a87beda7</con:value><con:style>QUERY</con:style><con:default>41954212-70a7-4eae-8430-90c1a87beda7</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>testPwd</con:value><con:style>QUERY</con:style><con:default>testPwd</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="ffd5d895-0ac4-4221-8da9-6c636ed9e26f"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="a9225347-9dee-4982-8653-8f55b018558a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/testpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="unBindCard" path="unBindCard.do" id="d1361263-c185-4a4a-b8d1-1db84b0db1b7"><con:settings/><con:parameters><con:parameter><con:name>userName</con:name><con:value>binding_api</con:value><con:style>QUERY</con:style><con:default>binding_api</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>testPwd</con:value><con:style>QUERY</con:style><con:default>testPwd</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>bindingId</con:name><con:value>fd3afc57-c6d0-4e08-aaef-1b7cfeb093dc</con:value><con:style>QUERY</con:style><con:default>fd3afc57-c6d0-4e08-aaef-1b7cfeb093dc</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="92baad0c-7382-4c60-bbbc-a85d24ffbf13"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="78b71198-9875-4ee9-bff3-f7160e5c6781"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/testpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="bindUnbindCard" path="bindCard.do" id="769023f9-2b1f-4e1a-b3d0-8237ab716379"><con:settings/><con:parameters><con:parameter><con:name>userName</con:name><con:value>binding_api</con:value><con:style>QUERY</con:style><con:default>binding_api</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>testPwd</con:value><con:style>QUERY</con:style><con:default>testPwd</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>bindingId</con:name><con:value>fd3afc57-c6d0-4e08-aaef-1b7cfeb093dc</con:value><con:style>QUERY</con:style><con:default>fd3afc57-c6d0-4e08-aaef-1b7cfeb093dc</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="1efa9d2c-1d25-49c0-8288-fbf9d8127957"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="e863fc9f-ae36-4953-aff7-3b48022d5fe4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getBindings" path="getBindings.do" id="c070ac45-6540-43d2-a7a7-5deb5fb9590d"><con:settings/><con:parameters><con:parameter><con:name>userName</con:name><con:value>binding_api</con:value><con:style>QUERY</con:style><con:default>binding_api</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>testPwd</con:value><con:style>QUERY</con:style><con:default>testPwd</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>clientId</con:name><con:value>client</con:value><con:style>QUERY</con:style><con:default>client</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="8da8d0ed-a9ed-439d-a3f0-3883649bafe3"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="49501527-5e67-49a6-aff3-75eef1765756"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/testpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="paymentOrder" path="paymentorder.do" id="9f261a41-20b9-4ec3-b265-cb5abefe951d"><con:settings/><con:parameters><con:parameter><con:name>userName</con:name><con:value>login</con:value><con:style>QUERY</con:style><con:default>login</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>password</con:value><con:style>QUERY</con:style><con:default>password</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>MDORDER</con:name><con:value>0d4b02cb-5147-4232-9012-4d38c743ahr6</con:value><con:style>QUERY</con:style><con:default>0d4b02cb-5147-4232-9012-4d38c743ahr6</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$PAN</con:name><con:value>5555555555555599</con:value><con:style>QUERY</con:style><con:default>5555555555555599</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>$CVC</con:name><con:value>123</con:value><con:style>QUERY</con:style><con:default>123</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>YYYY</con:name><con:value>2015</con:value><con:style>QUERY</con:style><con:default>2015</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>MM</con:name><con:value>12</con:value><con:style>QUERY</con:style><con:default>12</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>TEXT</con:name><con:value>Card Holder</con:value><con:style>QUERY</con:style><con:default>Card Holder</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>language</con:name><con:value>ru</con:value><con:style>QUERY</con:style><con:default>ru</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>jsonParams</con:name><con:value>{"eci":"07"}</con:value><con:style>QUERY</con:style><con:default>{"eci":"07"}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>email</con:name><con:style>QUERY</con:style></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="e931fec9-32c9-48a4-8aa6-b04c5eed335f"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=ISO-8859-1</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=ISO-8859-1</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="bec6dd6e-2f5d-426d-a6d9-9c38b24e4c0d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="jsonParams" value="{&quot;orderDescription&quot;:&quot;1234324357&quot;}"/>
  <con:entry key="userName" value="test"/>
  <con:entry key="password" value="testPwd"/>
</con:parameters><con:parameterOrder><con:entry>userName</con:entry><con:entry>password</con:entry><con:entry>MDORDER</con:entry><con:entry>$PAN</con:entry><con:entry>$CVC</con:entry><con:entry>YYYY</con:entry><con:entry>MM</con:entry><con:entry>TEXT</con:entry><con:entry>language</con:entry><con:entry>jsonParams</con:entry><con:entry>email</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="register.do" path="/register.do" id="dfa04487-d698-450d-8cf5-100656583e22"><con:settings/><con:parameters><con:parameter><con:name>amount</con:name><con:value>100</con:value><con:style>QUERY</con:style><con:default>100</con:default></con:parameter><con:parameter><con:name>currency</con:name><con:value>810</con:value><con:style>QUERY</con:style><con:default>810</con:default></con:parameter><con:parameter><con:name>language</con:name><con:value>ru</con:value><con:style>QUERY</con:style><con:default>ru</con:default></con:parameter><con:parameter><con:name>orderNumber</con:name><con:value>87654321</con:value><con:style>QUERY</con:style><con:default>87654321</con:default></con:parameter><con:parameter><con:name>password</con:name><con:value>testPwd</con:value><con:style>QUERY</con:style><con:default>testPwd</con:default></con:parameter><con:parameter><con:name>returnUrl</con:name><con:value>finish.html?login=test&amp;password=testPwd</con:value><con:style>QUERY</con:style><con:default>finish.html?login=test&amp;password=testPwd</con:default></con:parameter><con:parameter><con:name>userName</con:name><con:value>test</con:value><con:style>QUERY</con:style><con:default>test</con:default></con:parameter><con:parameter><con:name>jsonParams</con:name><con:value>{"orderNumber":1234567890}</con:value><con:style>QUERY</con:style><con:default>{"orderNumber":1234567890}</con:default></con:parameter><con:parameter><con:name>orderBundle</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>pageView</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="e7402ecd-3732-4bfa-a116-b78ca543edbc"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>404 500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/x-www-form-urlencoded" id="8d13b106-6ceb-43d1-8c98-922783a31503" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://3dsec.sberbank.ru/payment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="amount" value="200000"/>
  <con:entry key="orderBundle" value="{&quot;loyalties&quot;:{&quot;loyalties&quot;:[{&quot;bonusAmountForDebit&quot;:2000,&quot;positionId&quot;:&quot;1&quot;,&quot;bonusAmountForCredit&quot;:0,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;},{&quot;bonusAmountForCredit&quot;:0,&quot;bonusAmountForDebit&quot;:2000,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;,&quot;positionId&quot;:&quot;2&quot;},{&quot;bonusAmountForCredit&quot;:0,&quot;bonusAmountForDebit&quot;:2000,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;,&quot;positionId&quot;:&quot;3&quot;},{&quot;bonusAmountForCredit&quot;:0,&quot;bonusAmountForDebit&quot;:2000,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;,&quot;positionId&quot;:&quot;4&quot;},{&quot;bonusAmountForCredit&quot;:0,&quot;bonusAmountForDebit&quot;:2000,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;,&quot;positionId&quot;:&quot;5&quot;},{&quot;bonusAmountForCredit&quot;:0,&quot;bonusAmountForDebit&quot;:2000,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;,&quot;positionId&quot;:&quot;6&quot;},{&quot;bonusAmountForCredit&quot;:0,&quot;bonusAmountForDebit&quot;:2000,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;,&quot;positionId&quot;:&quot;7&quot;},{&quot;bonusAmountForCredit&quot;:0,&quot;bonusAmountForDebit&quot;:2000,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;,&quot;positionId&quot;:&quot;8&quot;},{&quot;bonusAmountForCredit&quot;:0,&quot;bonusAmountForDebit&quot;:2000,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;,&quot;positionId&quot;:&quot;9&quot;},{&quot;bonusAmountForCredit&quot;:0,&quot;bonusAmountForDebit&quot;:2000,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;,&quot;positionId&quot;:&quot;:&quot;}]},&quot;cartItems&quot;:{&quot;items&quot;:[{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;1&quot;,&quot;itemAmount&quot;:20000,&quot;name&quot;:&quot;boombox audio&quot;,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;},&quot;itemCode&quot;:&quot;46234587230001&quot;},{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;2&quot;,&quot;name&quot;:&quot;boombox audio&quot;,&quot;itemAmount&quot;:20000,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;itemCode&quot;:&quot;46234587230001&quot;,&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;}},{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;3&quot;,&quot;name&quot;:&quot;boombox audio&quot;,&quot;itemAmount&quot;:20000,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;itemCode&quot;:&quot;46234587230001&quot;,&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;}},{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;4&quot;,&quot;name&quot;:&quot;boombox audio&quot;,&quot;itemAmount&quot;:20000,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;itemCode&quot;:&quot;46234587230001&quot;,&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;}},{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;5&quot;,&quot;name&quot;:&quot;boombox audio&quot;,&quot;itemAmount&quot;:20000,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;itemCode&quot;:&quot;46234587230001&quot;,&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;}},{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;6&quot;,&quot;name&quot;:&quot;boombox audio&quot;,&quot;itemAmount&quot;:20000,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;itemCode&quot;:&quot;46234587230001&quot;,&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;}},{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;7&quot;,&quot;name&quot;:&quot;boombox audio&quot;,&quot;itemAmount&quot;:20000,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;itemCode&quot;:&quot;46234587230001&quot;,&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;}},{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;8&quot;,&quot;name&quot;:&quot;boombox audio&quot;,&quot;itemAmount&quot;:20000,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;itemCode&quot;:&quot;46234587230001&quot;,&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;}},{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;9&quot;,&quot;name&quot;:&quot;boombox audio&quot;,&quot;itemAmount&quot;:20000,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;itemCode&quot;:&quot;46234587230001&quot;,&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;}},{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;:&quot;,&quot;name&quot;:&quot;boombox audio&quot;,&quot;itemAmount&quot;:20000,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;itemCode&quot;:&quot;46234587230001&quot;,&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;}}]},&quot;customerDetails&quot;:{&quot;phone&quot;:9032177751,&quot;deliveryInfo&quot;:{&quot;deliveryType&quot;:&quot;Courier&quot;,&quot;postAddress&quot;:&quot;someStreet&quot;,&quot;city&quot;:&quot;Moscow&quot;,&quot;country&quot;:&quot;RU&quot;},&quot;email&quot;:&quot;bloyh@mail.ru&quot;,&quot;contact&quot;:&quot;Natalie Bianko&quot;},&quot;orderCreationDate&quot;:&quot;2013-07-12T13:51:00&quot;}"/>
  <con:entry key="jsonParams" value=""/>
  <con:entry key="orderNumber" value="87654321weqweqeq"/>
  <con:entry key="userName" value="rubtsova"/>
  <con:entry key="currency" value="643"/>
</con:parameters><con:parameterOrder><con:entry>amount</con:entry><con:entry>currency</con:entry><con:entry>language</con:entry><con:entry>orderNumber</con:entry><con:entry>password</con:entry><con:entry>returnUrl</con:entry><con:entry>userName</con:entry><con:entry>jsonParams</con:entry><con:entry>orderBundle</con:entry><con:entry>pageView</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite name="test-cases" id="6c8f732c-2154-4d32-8f2e-deb5edf48577"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="register" searchProperties="true" id="01dd67ce-544e-445f-a08e-928be02eb2d5" disabled="true"><con:settings/><con:testStep type="transfer" name="propTransfer" id="c6f2a962-dde2-46b7-9c04-06a01d085571"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>username</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>pwd</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>Endpoint</con:name><con:sourceType>EndPoint</con:sourceType><con:sourceStep>#Project#</con:sourceStep><con:targetType>EndPoint</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" useXQuery="false"><con:name>jsonParams</con:name><con:sourceType>jsonParams</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>jsonParams</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>orderBundle</con:name><con:sourceType>orderBundle</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>orderBundle</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="generateOrderNumberScript" id="d571cd01-2ffa-40a6-bdd0-19e04a435b62"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
//import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

long curTime = System.currentTimeMillis();

String curStringDate = new SimpleDateFormat("yyyyMMddhhmmss").format(curTime);

curTime2 = curTime.toString();

def s4 =  curTime2.substring(curTime2.length() -3,curTime2.length());

curStringDate= curStringDate+s4;
def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
//-----------------------------------------------------------------------------------------------
dublicate =testRunner.testCase.getPropertyValue("dublicateOrderId");
log.info dublicate;
curr =testRunner.testCase.getPropertyValue("unknown currency");
//log.info curr;
isDefault =testRunner.testCase.getPropertyValue("isDefault");
//log.info isDefault;
valueError =testRunner.testCase.getPropertyValue("value error");
//log.info valueError;
systemError =testRunner.testCase.getPropertyValue("systemError");
//log.info systemError;
//-----------------------------------------------------------------------------------------------
if (dublicate=="false"){
propertiesRegister.setPropertyValue( "OrderNumber", curStringDate);
log.info curStringDate;
}
else if (dublicate=="true") {
propertiesRegister.setPropertyValue( "OrderNumber", "123456");
log.info dublicate;	
	}
//-----------------------------------------------------------------------------------------------
else if (curr=="false"){
propertiesRegister.setPropertyValue( "currency", "643");

}
else if(curr=="true") {
propertiesRegister.setPropertyValue( "currency", "123456");
log.info curr +"asasa";	
	}
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="71cffa03-614f-4a42-9c66-3c56c86208a8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>OrderNumber</con:name><con:value>20140124102335444</con:value></con:property><con:property><con:name>data</con:name><con:value>{"formUrl":"https://3dsec.sberbank.ru/payment/merchants/rubtsova/payment_ru.html?mdOrder=28def255-139d-440f-8382-4c37830fe5f5","orderId":"28def255-139d-440f-8382-4c37830fe5f5"}</con:value></con:property><con:property><con:name>orderId</con:name><con:value>28def255-139d-440f-8382-4c37830fe5f5</con:value></con:property><con:property><con:name>EP</con:name><con:value/></con:property><con:property><con:name>jsonParams</con:name><con:value/></con:property><con:property><con:name>orderBundle</con:name><con:value>{ "orderCreationDate":"2013-07-12T13:51:00", "customerDetails":{ "email":"bloyh@mail.ru", "phone":"79032177751", "contact":"NatalieBianko", "deliveryInfo":{ "deliveryType":"courier", "country":"RU", "city":"Moscow", "postAddress":"ЗемлянойВал50Астр.2" } }, "cartItems":{ "items":[ { "positionId":"1", "name":"carrotsbox", "itemDetails":{  }, "quantity":{ "value":15, "measure":"kg" }, "itemAmount":"20000", "itemCurrency":"643", "itemCode":"123", "discount":{ "discountType":"percent", "discountValue":"5" }, "agentInterest":{ "interestType":"3", "interestValue":"2" } } ] }, "loyalties":{ "loyalties":[ { "bonusAmountForDebit":2000, "bonusAmountForCredit":0, "loyaltyProgramName":"sbrf_spasibo", "positionId":"1" } ] } }</con:value></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>errorCode</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="jsonBuilder" disabled="true" id="0f7268c5-2794-4f02-b0a4-ecce2202ca41"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
def data			= propertiesRegister.getPropertyValue( "orderBundle" );

 def builder = new JsonBuilder();

def jsonObj = new JsonSlurper().parseText(data);
log.info jsonObj.customerDetails;
log.info jsonObj.loyalties.loyalties;
log.info jsonObj.cartItems.items;

/*
def String newJson2 = new JsonBuilder(jsonObj);
log.info newJson2;
/*propertiesRegister.setPropertyValue( "data2", newJson2);
*/</script></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer" id="7090606a-310e-4fd2-b968-16a54fca9818"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderNumber</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>jsonParams</con:name><con:sourceType>jsonParams</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>jsonParams</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>orderBundle</con:name><con:sourceType>orderBundle</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderBundle</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>endPointo</con:name><con:sourceType>EndPoint</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>pageView</con:name><con:sourceType>pageView</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>pageView</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>curr</con:name><con:sourceType>currency</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>currency</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="registerOrder" id="c965a6f6-3993-4734-b9f3-33e96d1052f9"><con:settings/><con:config service="AlfaRestApi" resourcePath="/register.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="registerOrder" mediaType="application/json" id="8d13b106-6ceb-43d1-8c98-922783a31503" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://3dsec.sberbank.ru/payment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="amount" value="20000"/>
  <con:entry key="pageView" value="MOBILE"/>
  <con:entry key="jsonParams" value=""/>
  <con:entry key="orderNumber" value="201w4013241q02335444"/>
  <con:entry key="userName" value="rubtsova"/>
  <con:entry key="currency" value="643"/>
</con:parameters><con:parameterOrder><con:entry>amount</con:entry><con:entry>currency</con:entry><con:entry>language</con:entry><con:entry>orderNumber</con:entry><con:entry>password</con:entry><con:entry>returnUrl</con:entry><con:entry>userName</con:entry><con:entry>jsonParams</con:entry><con:entry>orderBundle</con:entry><con:entry>pageView</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="8efdcb2e-fac9-4f3e-b12f-610d53b069fb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>data</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>registerOrder</con:sourceStep><con:targetType>data</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="parseData" id="947b19ec-ab89-4d7f-9ecc-dc7c992916a7"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import groovy.json.JsonSlurper;

def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "Properties");

def registerString			= propertiesRegisterTransfer.getPropertyValue( "data" );
log.info registerString	;
def jsonObj = new JsonSlurper().parseText( registerString);
def String orderId = jsonObj.orderId;
def String errorCode = jsonObj.errorCode;
log.info errorCode;

propertiesRegisterTransfer.setPropertyValue( "orderId", orderId);
propertiesRegisterTransfer.setPropertyValue( "errorCode", errorCode);
</script></con:config></con:testStep><con:testStep type="transfer" name="orderParamsTransfer" id="d7af3c4a-4363-49de-8e16-5e39e7989a3f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>ordernum</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false"><con:name>errorCode</con:name><con:sourceType>errorCode</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>errorCode</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>orderId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">28def255-139d-440f-8382-4c37830fe5f5</con:value></con:property><con:property><con:name>returnUrl</con:name><con:value/></con:property><con:property><con:name>amount</con:name><con:value>20000</con:value></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>language</con:name><con:value>ru</con:value></con:property><con:property><con:name>EndPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/rest/</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140124102335444</con:value></con:property><con:property><con:name>jsonParams</con:name><con:value/></con:property><con:property><con:name>orderBundle</con:name><con:value>{ "orderCreationDate":"2013-07-12T13:51:00", "customerDetails":{ "email":"bloyh@mail.ru", "phone":"79032177751", "contact":"NatalieBianko", "deliveryInfo":{ "deliveryType":"courier", "country":"RU", "city":"Moscow", "postAddress":"ЗемлянойВал50Астр.2" } }, "cartItems":{ "items":[ { "positionId":"1", "name":"carrotsbox", "itemDetails":{  }, "quantity":{ "value":15, "measure":"kg" }, "itemAmount":"20000", "itemCurrency":"643", "itemCode":"123", "discount":{ "discountType":"percent", "discountValue":"5" }, "agentInterest":{ "interestType":"3", "interestValue":"2" } } ] }, "loyalties":{ "loyalties":[ { "bonusAmountForDebit":2000, "bonusAmountForCredit":0, "loyaltyProgramName":"sbrf_spasibo", "positionId":"1" } ] } }</con:value></con:property><con:property><con:name>pageView</con:name><con:value/></con:property><con:property><con:name>dublicateOrderId</con:name><con:value>false</con:value></con:property><con:property><con:name>unknown currency</con:name><con:value>false</con:value></con:property><con:property><con:name>isDefault</con:name><con:value>false</con:value></con:property><con:property><con:name>value error</con:name><con:value>false</con:value></con:property><con:property><con:name>systemError</con:name><con:value>false</con:value></con:property><con:property><con:name>errorCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Payment" searchProperties="true" id="8b9da7dd-6b0e-4d90-b446-a57675e0f6ab" disabled="true"><con:settings/><con:testStep type="properties" name="PropertiesPayment" id="124572a7-da54-47a3-a3b0-10094496b489"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>data</con:name><con:value>{"info":"Ваш платёж обработан, происходит переадресация...","acsUrl":"https://test.paymentgate.ru/acs/auth/start.do","paReq":"eJxVUV1vgkAQ/CuE93p3YG1rljNabLWJYls0fSWwQVI48ICW9tf3jo+qD5fM7O3u7M7CrMlS4wtl\nmeTCMdmImgaKMI8SETvm3n+6uTdnHPyjRHTfMawlcthgWQYxGknkmFkZj5jJYTd/wxOHvhNXjUYW\nkIGqEhkeA1FxCMLTYr3lY+tuQimQnkKGcu1yqkMdBBFkyH0sKyPri4G0MQjzWlTyh0/GNpCBQC1T\nLuo0BaIRkLPkrtaoVJVNEvGNO//u3vLXc/f2xt/bnr+knvvpANEZEAUVcosymzHrwWD2lNpTxoC0\ncQgyLclZO36HodAS84uPywAo26RydZh4YIBNkQtUGcqqfwwRluH14kbRb6BG0J9Azis9rrSnYaUs\nq2M3OeDh8FH9LJ69l21VZPVrY61wTFE73SZp0UT5xW5Zp6oJEN2G9Eck/YEVujr8H9mWumU=","termUrl":"https://test.paymentgate.ru:443/devpayment/rest/finish3ds.do","errorCode":0}</con:value></con:property><con:property><con:name>errorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>info</con:name><con:value>Ваш платёж обработан, происходит переадресация...</con:value></con:property><con:property><con:name>redirect</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>paReq</con:name><con:value>eJxVUV1vgkAQ/CuE93p3YG1rljNabLWJYls0fSWwQVI48ICW9tf3jo+qD5fM7O3u7M7CrMlS4wtl
meTCMdmImgaKMI8SETvm3n+6uTdnHPyjRHTfMawlcthgWQYxGknkmFkZj5jJYTd/wxOHvhNXjUYW
kIGqEhkeA1FxCMLTYr3lY+tuQimQnkKGcu1yqkMdBBFkyH0sKyPri4G0MQjzWlTyh0/GNpCBQC1T
Luo0BaIRkLPkrtaoVJVNEvGNO//u3vLXc/f2xt/bnr+knvvpANEZEAUVcosymzHrwWD2lNpTxoC0
cQgyLclZO36HodAS84uPywAo26RydZh4YIBNkQtUGcqqfwwRluH14kbRb6BG0J9Azis9rrSnYaUs
q2M3OeDh8FH9LJ69l21VZPVrY61wTFE73SZp0UT5xW5Zp6oJEN2G9Eck/YEVujr8H9mWumU=</con:value></con:property><con:property><con:name>termUrl</con:name><con:value>https://test.paymentgate.ru:443/devpayment/rest/finish3ds.do</con:value></con:property><con:property><con:name>mdOrder</con:name><con:value>4977a5e4-7b31-4523-9977-66e9cfd2493d</con:value></con:property><con:property><con:name>acsUrlText</con:name><con:value>https://test.paymentgate.ru/acs/auth/start.do</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="RegisterTransfer" id="3a0b3909-d076-4515-9d92-c44d3bd12f78"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>MDorder</con:name><con:sourceType>mdOrder</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>MDORDER</con:targetType><con:targetStep>Payment</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>mdOrder</con:name><con:sourceType>mdOrder</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>mdOrder</con:targetType><con:targetStep>PropertiesPayment</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>login</con:name><con:sourceType>user</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>Payment</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>Payment</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>endPointo</con:name><con:sourceType>EndPoint</con:sourceType><con:sourceStep>#Project#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>Payment</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Payment" id="ed6f2c47-06c8-4aa5-8fb4-421f0df891b5"><con:settings/><con:config service="AlfaRestApi" resourcePath="/paymentorder.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Payment" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://3dsec.sberbank.ru/payment/rest/</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains" id="5c89baf0-9f69-41bc-b0c7-37fc5837371f"><con:configuration><token>"errorCode":0</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MDORDER" value="779a31f7-181d-4582-a636-3675bda3e0ca"/>
  <con:entry key="jsonParams" value=""/>
  <con:entry key="email" value="bloyh@mai.ru"/>
  <con:entry key="TEXT" value="Nataly Bianko"/>
  <con:entry key="userName" value="rubtsova"/>
  <con:entry key="$PAN" value="4789789089321233"/>
  <con:entry key="password" value="testPwd"/>
</con:parameters><con:parameterOrder><con:entry>userName</con:entry><con:entry>password</con:entry><con:entry>MDORDER</con:entry><con:entry>$PAN</con:entry><con:entry>$CVC</con:entry><con:entry>YYYY</con:entry><con:entry>MM</con:entry><con:entry>TEXT</con:entry><con:entry>language</con:entry><con:entry>jsonParams</con:entry><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="9dff7106-65fa-4ae3-b67d-b53593a817a5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="false" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>data</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Payment</con:sourceStep><con:sourcePath>data/text()</con:sourcePath><con:targetType>data</con:targetType><con:targetStep>PropertiesPayment</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="dataParser" id="bce2877a-3238-43b3-b3f6-edb714a23c94"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
//import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "PropertiesPayment");

def registerString			= propertiesRegisterTransfer.getPropertyValue( "data" );
log.info registerString	;

def jsonObj = new JsonSlurper().parseText( registerString);
def String info = jsonObj.info;
def String redirect = jsonObj.redirect;
def String errorCode = jsonObj.errorCode;

//---параметры для ACS--------------------//
def String PaReq = jsonObj.paReq;
def String TermUrl = jsonObj.termUrl;
//---------------------------------------------------//

propertiesRegisterTransfer.setPropertyValue( "errorCode", errorCode);
propertiesRegisterTransfer.setPropertyValue( "info", info);
propertiesRegisterTransfer.setPropertyValue( "redirect", redirect);
propertiesRegisterTransfer.setPropertyValue( "paReq", PaReq);
propertiesRegisterTransfer.setPropertyValue( "termUrl", TermUrl);
if(TermUrl == null)
testRunner.gotoStepByName( "transferProperties")
else
testRunner.gotoStepByName("PaReqScript");
</script></con:config></con:testStep><con:testStep type="groovy" name="PaReqScript" id="3256801a-bbfd-433f-acfb-c3d328cd7f29"><con:settings/><con:config><script>import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import static org.hamcrest.CoreMatchers.*;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import java.util.*;
import java.text.*;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

//--------------------------------------------------
def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "PropertiesPayment");
def paReq = propertiesRegisterTransfer.getPropertyValue( "paReq");
def termUrl = propertiesRegisterTransfer.getPropertyValue( "termUrl");
def mdOrder = propertiesRegisterTransfer.getPropertyValue( "mdOrder");
def acsUrlText = propertiesRegisterTransfer.getPropertyValue( "acsUrlText");

log.info paReq;

 WebDriver driver = new FirefoxDriver();
 
driver.get("https://test.paymentgate.ru/testpayment/merchants/test/test_3dsec.html");
acsUrlText
driver.findElement(By.id("acsUrlText")).clear();
driver.findElement(By.id("acsUrlText")).sendKeys(acsUrlText);
driver.findElement(By.id("termUrlText")).clear();
driver.findElement(By.id("termUrlText")).sendKeys(termUrl);
driver.findElement(By.id("mdText")).clear();
driver.findElement(By.id("mdText")).sendKeys(mdOrder);
driver.findElement(By.id("paReqText")).clear();
driver.findElement(By.id("paReqText")).sendKeys(paReq);

driver.findElement(By.id("redirectToAcs")).click();

Thread.sleep(1000);

WebElement pass = driver.findElement(By.id("password"));
pass.sendKeys("12345678");
driver.findElement(By.id("submit_id")).click();
driver.quit();



</script></con:config></con:testStep><con:testStep type="transfer" name="transferProperties" id="c87ab6fb-cd9a-49d1-ac15-9baadb032cf4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties><con:property><con:name>user</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>mdOrder</con:name><con:value>4977a5e4-7b31-4523-9977-66e9cfd2493d</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/rest/</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="registerPreOrder" searchProperties="true" id="5c7c5192-e115-43a4-b75f-a9978fca82c0" disabled="true"><con:settings/><con:testStep type="transfer" name="propTransfer" id="8a455ef6-7ddb-4eca-b109-44195446e5b8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>username</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>pwd</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>Endpoint</con:name><con:sourceType>EndPoint</con:sourceType><con:sourceStep>#Project#</con:sourceStep><con:targetType>EP</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>EP</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>cur</con:name><con:sourceType>currency</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>currency</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false" useXQuery="false"><con:name>lang</con:name><con:sourceType>language</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>lang</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="generateOrderNumberScript" id="573d9748-f04c-4029-81af-1423c5fea87a"><con:settings/><con:config><script>
import java.text.*;
import java.util.*;


long curTime = System.currentTimeMillis();

String curStringDate = new SimpleDateFormat("dd.MM.yyyy.hh.mm.ss").format(curTime);
log.info curStringDate;

def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
propertiesRegister.setPropertyValue( "OrderNumber", curStringDate);</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="0ee1aa58-483d-4af2-a508-039d3d4e4e9e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>OrderNumber</con:name><con:value>21.01.2014.11.45.30</con:value></con:property><con:property><con:name>data</con:name><con:value>{"formUrl":"https://test.paymentgate.ru/devpayment/merchants/test/payment_ru.html?mdOrder=a6da1476-c419-487f-a011-0e37f5f56e31","orderId":"a6da1476-c419-487f-a011-0e37f5f56e31"}</con:value></con:property><con:property><con:name>orderId</con:name><con:value>a6da1476-c419-487f-a011-0e37f5f56e31</con:value></con:property><con:property><con:name>EP</con:name><con:value>1000</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>lang</con:name><con:value>ru</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer" id="434f8ed5-5b38-4847-be06-416876ac9df7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderNum</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderNumber</con:targetType><con:targetStep>registerPreAuth</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false"><con:name>amount</con:name><con:sourceType>EP</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>amount</con:targetType><con:targetStep>registerPreAuth</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>usr</con:name><con:sourceType>username</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>registerPreAuth</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>registerPreAuth</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>lang</con:name><con:sourceType>lang</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>language</con:targetType><con:targetStep>registerPreAuth</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>curr</con:name><con:sourceType>currency</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>currency</con:targetType><con:targetStep>registerPreAuth</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="registerPreAuth" id="da6be35e-119e-4579-b1d4-86f2cf16daac"><con:settings/><con:config service="AlfaRestApi" resourcePath="/registerPreAuth.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="registerPreAuth" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://3dsec.sberbank.ru/payment/rest</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="amount" value="1000"/>
  <con:entry key="orderNumber" value="21.01.2014.11.45.30"/>
  <con:entry key="password" value="testPwd"/>
</con:parameters><con:parameterOrder><con:entry>amount</con:entry><con:entry>currency</con:entry><con:entry>language</con:entry><con:entry>orderNumber</con:entry><con:entry>password</con:entry><con:entry>returnUrl</con:entry><con:entry>userName</con:entry><con:entry>jsonParams</con:entry><con:entry>orderBundle</con:entry><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="3e9adee0-87af-43dc-b266-db04bc68d16e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>data</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>registerPreAuth</con:sourceStep><con:targetType>data</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="parseData" id="6ff689bd-4558-4e9a-b194-7a3400e0ca17"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import groovy.json.JsonSlurper;

def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "Properties");

def registerString			= propertiesRegisterTransfer.getPropertyValue( "data" );
log.info registerString	;
def jsonObj = new JsonSlurper().parseText( registerString);
def String orderId = jsonObj.orderId;

log.info orderId;

propertiesRegisterTransfer.setPropertyValue( "orderId", orderId);
</script></con:config></con:testStep><con:testStep type="transfer" name="orderParamsTransfer" id="db9a9278-0efc-4887-9e2e-0ce5e6f5c0cc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>ordernum</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>orderId</con:name><con:value>a6da1476-c419-487f-a011-0e37f5f56e31</con:value></con:property><con:property><con:name>returnUrl</con:name><con:value/></con:property><con:property><con:name>amount</con:name><con:value>1000</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>language</con:name><con:value>ru</con:value></con:property><con:property><con:name>EndPoint</con:name><con:value/></con:property><con:property><con:name>orderNumber</con:name><con:value>21.01.2014.11.45.30</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deposite" searchProperties="true" id="d1854ae3-7cb5-4000-97d1-e9aa54b14661" disabled="true"><con:settings/><con:testStep type="transfer" name="PropertyTransfer" id="151ee912-5d28-4075-8bc1-6919e03c594c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>deposit</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" transferToAll="false" useXQuery="false" ignoreEmpty="false"><con:name>lang</con:name><con:sourceType>lang</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>language</con:targetType><con:targetStep>deposit</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>curr</con:name><con:sourceType>currency</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>currency</con:targetType><con:targetStep>deposit</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>usr</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>deposit</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>deposit</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>am</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>amount</con:targetType><con:targetStep>deposit</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="deposit" id="73ffa8ca-13e6-406e-b538-e4a593fc36ae"><con:settings/><con:config service="AlfaRestApi" resourcePath="/deposit.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deposit" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains" id="719b96d5-4cf4-40a7-ab12-48b3811e4543"><con:configuration><token>"errorCode":"0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userName" value="test"/>
  <con:entry key="orderId" value="31aa2b05-8827-4207-b388-f0bcc70583c6"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>orderId</con:name><con:value>31aa2b05-8827-4207-b388-f0bcc70583c6</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>amount</con:name><con:value>1000</con:value></con:property><con:property><con:name>lang</con:name><con:value>ru</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="reverse" searchProperties="true" disabled="true" id="20f82901-6054-4f4d-8618-be9bbf268a25"><con:settings/><con:testStep type="transfer" name="PropertyTransfer" id="82cb784b-2ec3-4ef0-bb69-09c303e84b8d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>reverse</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" transferToAll="false" useXQuery="false" ignoreEmpty="false"><con:name>lang</con:name><con:sourceType>lang</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>language</con:targetType><con:targetStep>reverse</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>curr</con:name><con:sourceType>currency</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>currency</con:targetType><con:targetStep>reverse</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>usr</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>reverse</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>reverse</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>am</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>amount</con:targetType><con:targetStep>reverse</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="reverse" id="eb339e02-180c-43db-a87e-626c9b9d247e"><con:settings/><con:config service="AlfaRestApi" resourcePath="/reverse.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="reverse" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains" id="00bae170-feb7-456d-80a6-f260841579d2"><con:configuration><token>"errorCode":"0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="amount" value="1000" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>orderId</con:name><con:value>31aa2b05-8827-4207-b388-f0bcc70583c6</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>amount</con:name><con:value>1000</con:value></con:property><con:property><con:name>lang</con:name><con:value>ru</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="refund" searchProperties="true" disabled="true" id="a2f5e0b8-5d92-4b9c-9bf3-ea0512f8c24e"><con:settings/><con:testStep type="transfer" name="PropertyTransfer" id="ef755068-512e-4c3e-87c1-821adc3f60fb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>Refund</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" transferToAll="false" useXQuery="false" ignoreEmpty="false"><con:name>lang</con:name><con:sourceType>lang</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>language</con:targetType><con:targetStep>Refund</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>curr</con:name><con:sourceType>currency</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>currency</con:targetType><con:targetStep>Refund</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>usr</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>Refund</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>Refund</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>am</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>amount</con:targetType><con:targetStep>Refund</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Refund" id="4a7a1540-5a38-454c-8908-f68e49ae42ac"><con:settings/><con:config service="AlfaRestApi" resourcePath="/refund.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Refund" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="amount" value="500" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>orderId</con:name><con:value>31aa2b05-8827-4207-b388-f0bcc70583c6</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>amount</con:name><con:value>1000</con:value></con:property><con:property><con:name>lang</con:name><con:value>ru</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getOrderStatus" searchProperties="true" disabled="true" id="c8d0d140-3a97-4fc1-8301-bd0f2a43e9e6"><con:settings/><con:testStep type="properties" name="properties" id="3d7cb729-889d-4e36-b18e-6abe8ba5532b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>data</con:name><con:value>{"ErrorCode":"6","ErrorMessage":"Неизвестный номер заказа"}</con:value></con:property><con:property><con:name>expiration</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>cardholderName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>depositAmount</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>currency</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>approvalCode</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>authCode</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ErrorCode</con:name><con:value>6</con:value></con:property><con:property><con:name>ErrorMessage</con:name><con:value>Неизвестный номер заказа</con:value></con:property><con:property><con:name>OrderStatus</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>OrderNumber</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Pan</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Amount</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Ip</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="detailTransfer" id="fe62587b-37fc-4cb3-8b92-50a308be3d8c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderid</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>getOrderStatus</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>lang</con:name><con:sourceType>language</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>language</con:targetType><con:targetStep>getOrderStatus</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false"><con:name>usr</con:name><con:sourceType>userName</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>getOrderStatus</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>getOrderStatus</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>endPoint</con:name><con:sourceType>EndPoint</con:sourceType><con:sourceStep>#Project#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>getOrderStatus</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getOrderStatus" id="c6ff0814-03e1-498b-a031-5b7b79389845"><con:settings/><con:config service="AlfaRestApi" resourcePath="/getOrderStatus.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getOrderStatus" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://3dsec.sberbank.ru/testpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userName" value="rubtsova"/>
  <con:entry key="orderId" value="31aa2b05-8827-4207-b388-f0bcc70583c6"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="9733bf17-cf05-4d30-b154-73acd31f6d7e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>data</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getOrderStatus</con:sourceStep><con:targetType>data</con:targetType><con:targetStep>properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="GroovyScript" id="af8bd075-6141-489a-8743-23b0eeae5a46"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import groovy.json.JsonSlurper;

def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "properties");

def registerString			= propertiesRegisterTransfer.getPropertyValue( "data" );
log.info registerString	;
def jsonObj = new JsonSlurper().parseText( registerString);
def String orderId = jsonObj.orderId;
def String expiration = jsonObj.expiration;
def String cardholderName = jsonObj.cardholderName;
def String depositAmount = jsonObj.depositAmount;
def String currency = jsonObj.currency;
def String approvalCode = jsonObj.approvalCode;
def String authCode = jsonObj.authCode;
def String ErrorCode = jsonObj.ErrorCode;
def String ErrorMessage = jsonObj.ErrorMessage;
def String OrderStatus = jsonObj.OrderStatus;
def String OrderNumber = jsonObj.OrderNumber;
def String Pan = jsonObj.Pan;
def String Amount = jsonObj.Amount;
def String Ip = jsonObj.Ip;


log.info orderId;
log.info expiration;
log.info cardholderName;
log.info depositAmount;
log.info currency;
log.info approvalCode;
log.info authCode;
log.info ErrorCode;
log.info ErrorMessage;
log.info OrderStatus;
log.info OrderNumber;
log.info Pan;
log.info Amount;
log.info Ip;


propertiesRegisterTransfer.setPropertyValue( "expiration", expiration);
propertiesRegisterTransfer.setPropertyValue( "cardholderName", cardholderName);
propertiesRegisterTransfer.setPropertyValue( "depositAmount", depositAmount);
propertiesRegisterTransfer.setPropertyValue( "currency", currency);
propertiesRegisterTransfer.setPropertyValue( "approvalCode", approvalCode);
propertiesRegisterTransfer.setPropertyValue( "authCode", authCode);
propertiesRegisterTransfer.setPropertyValue( "ErrorCode", ErrorCode);
propertiesRegisterTransfer.setPropertyValue( "ErrorMessage", ErrorMessage);
propertiesRegisterTransfer.setPropertyValue( "OrderStatus", OrderStatus);
propertiesRegisterTransfer.setPropertyValue( "OrderNumber", OrderNumber);
propertiesRegisterTransfer.setPropertyValue( "Pan", Pan);
propertiesRegisterTransfer.setPropertyValue( "Amount", Amount);
propertiesRegisterTransfer.setPropertyValue( "Ip", Ip);
</script></con:config></con:testStep><con:testStep type="transfer" name="detailsTransfer" id="28173a86-61a6-488d-9442-baa3117c2829"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>expiry</con:name><con:sourceType>expiration</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>expiry</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>cardHolder</con:name><con:sourceType>cardholderName</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>cardholderName</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>depositAmount</con:name><con:sourceType>depositAmount</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>depositAmount</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>currency</con:name><con:sourceType>currency</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>currency</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>approvalCode</con:name><con:sourceType>approvalCode</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>approvalCode</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>authCode</con:name><con:sourceType>authCode</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>authCode</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>ErrorCode</con:name><con:sourceType>ErrorCode</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>ErrorCode</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>ErrorMessage</con:name><con:sourceType>ErrorMessage</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>ErrorMessage</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>OrderStatus</con:name><con:sourceType>OrderStatus</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>orderStatus</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>OrderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>OrderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pan</con:name><con:sourceType>Pan</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>Pan</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>amount</con:name><con:sourceType>Amount</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>amount</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false"><con:name>ip</con:name><con:sourceType>Ip</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>ip</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>orderId</con:name><con:value>31aa2b05-8827-4207-b388-f0bcc70583c6</con:value></con:property><con:property><con:name>language</con:name><con:value>ru</con:value></con:property><con:property><con:name>userName</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>expiry</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cardholderName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>depositAmount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>currency</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>approvalCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>authCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ErrorCode</con:name><con:value>6</con:value></con:property><con:property><con:name>ErrorMessage</con:name><con:value>Неизвестный номер заказа</con:value></con:property><con:property><con:name>orderStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>OrderNumber</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Pan</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ip</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>amount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getOrderStatusExtended" searchProperties="true" id="2662187f-9a42-4e28-a47d-eb17dcb83ea5" disabled="true"><con:settings/><con:testStep type="properties" name="properties" id="041ae90e-5baa-4d77-bc76-2802f8c5d33f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>data</con:name><con:value>{"errorCode":"0","errorMessage":"Успешно","orderNumber":"201391016254553","orderStatus":2,"actionCode":0,"actionCodeDescription":"Запрос успешно обработан","amount":100,"currency":"810","date":1381407969649,"orderDescription":"null","ip":"212.5.125.194","merchantOrderParams":[],"attributes":[{"name":"mdOrder","value":"31aa2b05-8827-4207-b388-f0bcc70583c6"}],"cardAuthInfo":{"expiration":"201512","cardholderName":"a morr","approvalCode":"123456","secureAuthInfo":{"eci":5,"threeDSInfo":{"xid":"MDAwMDAwMDEzODE0MDc5Njk5MzI=","cavv":"AAABB3cCgBOBQHlwKAAAAAAAAAA="}},"pan":"411111**1111"},"authDateTime":1381407974524,"terminalId":"111113","authRefNum":"111111111111","paymentAmountInfo":{"paymentState":"DEPOSITED","approvedAmount":100,"depositedAmount":100,"refundedAmount":0},"bankInfo":{"bankName":"TEST CARD","bankCountryCode":"RU","bankCountryName":"Россия"}}</con:value></con:property><con:property><con:name>ErrorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>ErrorMessage</con:name><con:value>Успешно</con:value></con:property><con:property><con:name>OrderNumber</con:name><con:value>201391016254553</con:value></con:property><con:property><con:name>OrderStatus</con:name><con:value>2</con:value></con:property><con:property><con:name>ActionCode</con:name><con:value>0</con:value></con:property><con:property><con:name>actionCodeDescription</con:name><con:value>Запрос успешно обработан</con:value></con:property><con:property><con:name>Amount</con:name><con:value>100</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>date</con:name><con:value>1381407969649</con:value></con:property><con:property><con:name>orderDescription</con:name><con:value>null</con:value></con:property><con:property><con:name>Ip</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>authDateTime</con:name><con:value>1381407974524</con:value></con:property><con:property><con:name>terminalId</con:name><con:value>111113</con:value></con:property><con:property><con:name>authRefNum</con:name><con:value>111111111111</con:value></con:property><con:property><con:name>merchantOrderParams</con:name><con:value>[]</con:value></con:property><con:property><con:name>attributes</con:name><con:value>[{name=mdOrder, value=31aa2b05-8827-4207-b388-f0bcc70583c6}]</con:value></con:property><con:property><con:name>cardAuthInfo</con:name><con:value>{cardholderName=a morr, expiration=201512, approvalCode=123456, pan=411111**1111, secureAuthInfo={eci=5, threeDSInfo={xid=MDAwMDAwMDEzODE0MDc5Njk5MzI=, cavv=AAABB3cCgBOBQHlwKAAAAAAAAAA=}}}</con:value></con:property><con:property><con:name>paymentAmountInfo</con:name><con:value>{depositedAmount=100, approvedAmount=100, paymentState=DEPOSITED, refundedAmount=0}</con:value></con:property><con:property><con:name>bankInfo</con:name><con:value>{bankCountryCode=RU, bankCountryName=Россия, bankName=TEST CARD}</con:value></con:property><con:property><con:name>secureAuthInfo</con:name><con:value>{eci=5, threeDSInfo={xid=MDAwMDAwMDEzODE0MDc5Njk5MzI=, cavv=AAABB3cCgBOBQHlwKAAAAAAAAAA=}}</con:value></con:property><con:property><con:name>threeDSInfo</con:name><con:value>{xid=MDAwMDAwMDEzODE0MDc5Njk5MzI=, cavv=AAABB3cCgBOBQHlwKAAAAAAAAAA=}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="detailTransfer" id="afc20338-c3dd-4493-ad87-90f659ae036c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderid</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>getOrderStatusExtended</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>lang</con:name><con:sourceType>language</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>language</con:targetType><con:targetStep>getOrderStatusExtended</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false"><con:name>usr</con:name><con:sourceType>userName</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>getOrderStatusExtended</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>getOrderStatusExtended</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getOrderStatusExtended" id="efb668f0-393d-4c52-a4d7-36d06c575162"><con:settings/><con:config service="AlfaRestApi" resourcePath="/getOrderStatusExtended.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getOrderStatusExtended" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userName" value="test"/>
  <con:entry key="password" value="testPwd"/>
  <con:entry key="orderId" value="31aa2b05-8827-4207-b388-f0bcc70583c6"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="ba343c90-30e6-48ae-81ac-14f20d8ae801"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>data</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getOrderStatusExtended</con:sourceStep><con:targetType>data</con:targetType><con:targetStep>properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="GroovyScript" id="e1a27143-cb0e-4727-95c1-bfd6952a282a"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import groovy.json.JsonSlurper;

def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "properties");

def registerString			= propertiesRegisterTransfer.getPropertyValue( "data" );

def jsonObj = new JsonSlurper().parseText( registerString);

def String ErrorCode = jsonObj.errorCode;
def String ErrorMessage = jsonObj.errorMessage;
def String OrderNumber = jsonObj.orderNumber;
def String OrderStatus = jsonObj.orderStatus;
def String ActionCode = jsonObj.actionCode;
def String actionCodeDescription = jsonObj.actionCodeDescription;
def String Amount = jsonObj.amount;
def String currency = jsonObj.currency;
def String date = jsonObj.date;
def String orderDescription = jsonObj.orderDescription;
def String Ip = jsonObj.Ip;
def String authDateTime = jsonObj.authDateTime;
def String terminalId = jsonObj.terminalId;
def String authRefNum = jsonObj.authRefNum;

//-----------------------------------------------------------
def String merchantOrderParams = jsonObj.merchantOrderParams;//параметры заказа
def String attributes = jsonObj.attributes;//аттрибуты мерчанта
def String cardAuthInfo = jsonObj.cardAuthInfo;//информация по карте
def String paymentAmountInfo = jsonObj.paymentAmountInfo;//информация о платеже
def String bankInfo = jsonObj.bankInfo;//информация о банке
def String secureAuthInfo = jsonObj.cardAuthInfo.secureAuthInfo;//информация о секьюрности
def String threeDSInfo =jsonObj.cardAuthInfo.secureAuthInfo.threeDSInfo;//информация о секьюрности
//"attributes":[{"name":"mdOrder","value":"31aa2b05-8827-4207-b388-f0bcc70583c6"}],"cardAuthInfo":{"expiration":"201512","cardholderName":"a morr","approvalCode":"123456","secureAuthInfo":{"eci":5,"threeDSInfo":{"xid":"MDAwMDAwMDEzODE0MDc5Njk5MzI=","cavv":"AAABB3cCgBOBQHlwKAAAAAAAAAA="}},"pan":"411111**1111"},"authDateTime":1381407974524,"terminalId":"111113","authRefNum":"111111111111","paymentAmountInfo":{"paymentState":"DEPOSITED","approvedAmount":100,"depositedAmount":100,"refundedAmount":0},"bankInfo":{"bankName":"TEST CARD","bank



//---------------------------------------------------------------

propertiesRegisterTransfer.setPropertyValue( "ErrorCode", ErrorCode);
propertiesRegisterTransfer.setPropertyValue( "ErrorMessage", ErrorMessage);
propertiesRegisterTransfer.setPropertyValue( "OrderNumber", OrderNumber);
propertiesRegisterTransfer.setPropertyValue( "OrderStatus", OrderStatus);
propertiesRegisterTransfer.setPropertyValue( "ActionCode", ActionCode);
propertiesRegisterTransfer.setPropertyValue( "actionCodeDescription", actionCodeDescription);
propertiesRegisterTransfer.setPropertyValue( "Amount", Amount);
propertiesRegisterTransfer.setPropertyValue( "currency", currency);
propertiesRegisterTransfer.setPropertyValue( "date", date);
propertiesRegisterTransfer.setPropertyValue( "orderDescription", orderDescription);
propertiesRegisterTransfer.setPropertyValue( "Ip", Ip);
propertiesRegisterTransfer.setPropertyValue( "authDateTime", authDateTime);
propertiesRegisterTransfer.setPropertyValue( "terminalId", terminalId);
propertiesRegisterTransfer.setPropertyValue( "authRefNum", authRefNum);
//---------------------------------------------------------------------------------------
propertiesRegisterTransfer.setPropertyValue( "merchantOrderParams", merchantOrderParams);
propertiesRegisterTransfer.setPropertyValue( "attributes", attributes);
propertiesRegisterTransfer.setPropertyValue( "cardAuthInfo", cardAuthInfo);
propertiesRegisterTransfer.setPropertyValue( "paymentAmountInfo", paymentAmountInfo);
propertiesRegisterTransfer.setPropertyValue( "bankInfo", bankInfo);
propertiesRegisterTransfer.setPropertyValue( "secureAuthInfo", secureAuthInfo);
propertiesRegisterTransfer.setPropertyValue( "threeDSInfo", threeDSInfo);

</script></con:config></con:testStep><con:testStep type="transfer" name="detailsTransfer" id="0b812b7f-db52-4245-b3fc-fce35eed95ba"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>errorCode</con:name><con:sourceType>ErrorCode</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>ErrorCode</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>errorMessage</con:name><con:sourceType>ErrorMessage</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>ErrorMessage</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>OrderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderStatus</con:name><con:sourceType>OrderStatus</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>orderStatus</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>actionCode</con:name><con:sourceType>ActionCode</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>actionCode</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>actionCodeDesc</con:name><con:sourceType>actionCodeDescription</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>actionCodeDescription</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>amount</con:name><con:sourceType>Amount</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>amount</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>currency</con:name><con:sourceType>currency</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>currency</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>date</con:name><con:sourceType>date</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>date</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderDesc</con:name><con:sourceType>orderDescription</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>orderDescription</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>ip</con:name><con:sourceType>Ip</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>ip</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>authDateTime</con:name><con:sourceType>authDateTime</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>authDateTime</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>terminalId</con:name><con:sourceType>terminalId</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>terminalId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>authRefNum</con:name><con:sourceType>authRefNum</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>authRefNum</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>merchantOrderParams</con:name><con:sourceType>merchantOrderParams</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>merchantOrderParams</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>attributes</con:name><con:sourceType>attributes</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>attributes</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>cardAuthInfo</con:name><con:sourceType>cardAuthInfo</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>cardAuthInfo</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>paymentAmountInfo</con:name><con:sourceType>paymentAmountInfo</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>paymentAmountInfo</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>bankInfo</con:name><con:sourceType>bankInfo</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>bankInfo</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>secur</con:name><con:sourceType>secureAuthInfo</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>security</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>3dsinfo</con:name><con:sourceType>threeDSInfo</con:sourceType><con:sourceStep>properties</con:sourceStep><con:targetType>3dsinfo</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>ErrorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>ErrorMessage</con:name><con:value>Успешно</con:value></con:property><con:property><con:name>OrderNumber</con:name><con:value>201391016254553</con:value></con:property><con:property><con:name>orderStatus</con:name><con:value>2</con:value></con:property><con:property><con:name>actionCode</con:name><con:value>0</con:value></con:property><con:property><con:name>actionCodeDescription</con:name><con:value>Запрос успешно обработан</con:value></con:property><con:property><con:name>amount</con:name><con:value>100</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>date</con:name><con:value>1381407969649</con:value></con:property><con:property><con:name>orderDescription</con:name><con:value>null</con:value></con:property><con:property><con:name>ip</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>authDateTime</con:name><con:value>1381407974524</con:value></con:property><con:property><con:name>terminalId</con:name><con:value>111113</con:value></con:property><con:property><con:name>authRefNum</con:name><con:value>111111111111</con:value></con:property><con:property><con:name>merchantOrderParams</con:name><con:value>[]</con:value></con:property><con:property><con:name>attributes</con:name><con:value>[{name=mdOrder, value=31aa2b05-8827-4207-b388-f0bcc70583c6}]</con:value></con:property><con:property><con:name>cardAuthInfo</con:name><con:value>{cardholderName=a morr, expiration=201512, approvalCode=123456, pan=411111**1111, secureAuthInfo={eci=5, threeDSInfo={xid=MDAwMDAwMDEzODE0MDc5Njk5MzI=, cavv=AAABB3cCgBOBQHlwKAAAAAAAAAA=}}}</con:value></con:property><con:property><con:name>paymentAmountInfo</con:name><con:value>{depositedAmount=100, approvedAmount=100, paymentState=DEPOSITED, refundedAmount=0}</con:value></con:property><con:property><con:name>bankInfo</con:name><con:value>{bankCountryCode=RU, bankCountryName=Россия, bankName=TEST CARD}</con:value></con:property><con:property><con:name>orderId</con:name><con:value>31aa2b05-8827-4207-b388-f0bcc70583c6</con:value></con:property><con:property><con:name>language</con:name><con:value>ru</con:value></con:property><con:property><con:name>userName</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>security</con:name><con:value/></con:property><con:property><con:name>3dsinfo</con:name><con:value>{xid=MDAwMDAwMDEzODE0MDc5Njk5MzI=, cavv=AAABB3cCgBOBQHlwKAAAAAAAAAA=}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="isEnrollment" searchProperties="true" id="83b72ab9-48cf-43a4-9f59-28d21e6f13ea" disabled="true"><con:settings/><con:testStep type="transfer" name="PropertiesTransfer" id="ea559908-424c-4ccc-8710-9840fe8ef5e1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>pan</con:name><con:sourceType>pan</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>pan</con:targetType><con:targetStep>isEnrollment</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>usr</con:name><con:sourceType>apiUserName</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>isEnrollment</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>pwd</con:name><con:sourceType>apiPasswd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>isEnrollment</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="isEnrollment" id="2320082a-ea80-4ae1-bc29-4e3251368a59"><con:settings/><con:config service="AlfaRestApi" resourcePath="/verifyEnrollment.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="isEnrollment" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userName" value=""/>
  <con:entry key="password" value=""/>
  <con:entry key="pan" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="63e629e3-6392-464e-a9e9-93ae33436880"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>details</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>isEnrollment</con:sourceStep><con:sourcePath>data/text()</con:sourcePath><con:targetType>details</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>pan</con:name><con:value/></con:property><con:property><con:name>apiUserName</con:name><con:value/></con:property><con:property><con:name>apiPasswd</con:name><con:value/></con:property><con:property><con:name>details</con:name><con:value>{"errorCode":"5","errorMessage":"Доступ запрещён"}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getBindings" searchProperties="true" id="7acaf22e-ca72-48bb-bc7d-5ad50dda2028" disabled="true"><con:settings/><con:testStep type="properties" name="Properties" id="481d0c31-48ca-48b8-8844-b04c74b5c466"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>data</con:name><con:value>{"errorCode":"0","errorMessage":"Успешно","bindings":[{"bindingId":"fd3afc57-c6d0-4e08-aaef-1b7cfeb093dc","maskedPan":"400000**0002","expiryDate":"201512"}]}</con:value></con:property><con:property><con:name>bindingId</con:name><con:value>нет совпадений</con:value></con:property><con:property><con:name>maskedPan</con:name><con:value>411111**1112</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertiesTransfer" id="a682162a-c50d-47b6-93ec-d481f2e665ff"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>clientId</con:name><con:sourceType>clientId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>clientId</con:targetType><con:targetStep>getbindings</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>username</con:name><con:sourceType>userName</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>getbindings</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>getbindings</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>maskedPan</con:name><con:sourceType>maskedPan</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>maskedPan</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getbindings" id="f77ad781-cb63-44e9-8244-5430a795e95c"><con:settings/><con:config service="AlfaRestApi" resourcePath="/getBindings.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getbindings" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/testpayment/rest/</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains" id="39a50c53-8d94-4d74-be56-a9240f4ebc68"><con:configuration><token>"errorCode":"0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="5a866c91-ac91-41b9-8f84-78afa23f3d21"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>data</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getbindings</con:sourceStep><con:targetType>data</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="dataScript" id="544dd155-7d6a-4723-b59b-f94dea0c3cc9"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;
import java.util.Iterator;

def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "Properties");
def registerString	= propertiesRegisterTransfer.getPropertyValue( "data" );
def pan = propertiesRegisterTransfer.getPropertyValue( "maskedPan" );
def jsonObj = new JsonSlurper().parseText( registerString);


Iterator i =jsonObj.bindings.iterator();

log.info "====================="
def myBinding;
while ( i.hasNext()) 
{
		myBinding = i.next();
          if (myBinding.maskedPan == pan) 
          {
          	propertiesRegisterTransfer.setPropertyValue( "bindingId", myBinding.bindingId);
          	break;
          }
   		propertiesRegisterTransfer.setPropertyValue( "bindingId", "нет совпадений");
}
     
</script></con:config></con:testStep><con:testStep type="transfer" name="bindingTransfer" id="1008b96f-abd6-49fd-9025-60a1207589ad"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>bindingId</con:name><con:sourceType>bindingId</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>bindingId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>clientId</con:name><con:value>client</con:value></con:property><con:property><con:name>userName</con:name><con:value>binding_api</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>bindingId</con:name><con:value>нет совпадений</con:value></con:property><con:property><con:name>maskedPan</con:name><con:value>411111**1112</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="unBindCard" searchProperties="true" disabled="true" id="329f38d3-0ba8-4d8e-b1ec-f4b6be82824b"><con:settings/><con:testStep type="transfer" name="PropertyTransfer" id="4b828108-6aa6-4b1a-adf3-653d58df6542"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>usrNm</con:name><con:sourceType>userName</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>unBindCard</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>unBindCard</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>bindId</con:name><con:sourceType>bindingId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>bindingId</con:targetType><con:targetStep>unBindCard</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="unBindCard" id="3c42a457-e34e-403c-951f-597cc51ed030"><con:settings/><con:config service="AlfaRestApi" resourcePath="/unBindCard.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="unBindCard" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/devpayment/rest/</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains" id="7f442be3-9b3d-4342-b6a9-e9dda49acd09"><con:configuration><token>"errorCode":"0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="bindingId" value=""/>
  <con:entry key="userName" value=""/>
  <con:entry key="password" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>userName</con:name><con:value/></con:property><con:property><con:name>pwd</con:name><con:value/></con:property><con:property><con:name>bindingId</con:name><con:value/></con:property><con:property><con:name>errorCode</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="paymentOrderBindings" searchProperties="true" disabled="true" id="0b6a3b6d-a222-4ade-94c2-fcfedad9dfed"><con:settings/><con:testStep type="properties" name="PropertiesPayment" id="83dd290f-f844-47c4-9a28-a6aa6800d272"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>data</con:name><con:value>{"error":"Связка не найдена","errorCode":2}</con:value></con:property><con:property><con:name>errorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>info</con:name><con:value>Ваш платёж обработан, происходит переадресация...</con:value></con:property><con:property><con:name>redirect</con:name><con:value>finish.html?login=test&amp;password=testPwd&amp;orderId=f7e30aa7-6cae-4113-9ba2-ce783dac59d3</con:value></con:property><con:property><con:name>paReq</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>termUrl</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>mdOrder</con:name><con:value>f7e30aa7-6cae-4113-9ba2-ce783dac59d3</con:value></con:property><con:property><con:name>acsUrlText</con:name><con:value>https://test.paymentgate.ru/acs/auth/start.do</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="RegisterTransfer" id="9a4ab18d-590a-459b-8fc2-deedd5b32511"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>MDorder</con:name><con:sourceType>mdOrder</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>mdOrder</con:targetType><con:targetStep>paymentOrderBinding</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>mdOrder</con:name><con:sourceType>mdOrder</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>mdOrder</con:targetType><con:targetStep>PropertiesPayment</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false"><con:name>bindingId</con:name><con:sourceType>bindingId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>bindingId</con:targetType><con:targetStep>paymentOrderBinding</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>username</con:name><con:sourceType>user</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>paymentOrderBinding</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>paymentOrderBinding</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="paymentOrderBinding" id="e5c1b518-0882-4a06-a098-6713c689c7f3"><con:settings/><con:config service="AlfaRestApi" resourcePath="/paymentOrderBinding.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="paymentOrderBinding" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.paymentgate.ru/testpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="63e74b24-99d2-49dd-b478-7d2ee95e43b0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="false" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>data</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>paymentOrderBinding</con:sourceStep><con:sourcePath>data/text()</con:sourcePath><con:targetType>data</con:targetType><con:targetStep>PropertiesPayment</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="dataParser" id="23c311d2-5742-4145-8eb9-2f85ba9346ab"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "PropertiesPayment");

def registerString			= propertiesRegisterTransfer.getPropertyValue( "data" );
log.info registerString	;

def jsonObj = new JsonSlurper().parseText( registerString);
def String info = jsonObj.info;
def String redirect = jsonObj.redirect;
def String errorCode = jsonObj.errorCode;

//---параметры для ACS--------------------//
def String PaReq = jsonObj.paReq;
def String TermUrl = jsonObj.termUrl;
//---------------------------------------------------//

propertiesRegisterTransfer.setPropertyValue( "errorCode", errorCode);
propertiesRegisterTransfer.setPropertyValue( "info", info);
propertiesRegisterTransfer.setPropertyValue( "redirect", redirect);
propertiesRegisterTransfer.setPropertyValue( "paReq", PaReq);
propertiesRegisterTransfer.setPropertyValue( "termUrl", TermUrl);
if(TermUrl == null)
testRunner.gotoStepByName( "transferProperties")
else
testRunner.gotoStepByName("PaReqScript");
</script></con:config></con:testStep><con:testStep type="groovy" name="PaReqScript" id="a3ff5af6-2bec-4243-b6b1-8f7f1875b4ca"><con:settings/><con:config><script>import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import static org.hamcrest.CoreMatchers.*;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import java.util.*;
import java.text.*;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

//--------------------------------------------------
def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "PropertiesPayment");
def paReq = propertiesRegisterTransfer.getPropertyValue( "paReq");
def termUrl = propertiesRegisterTransfer.getPropertyValue( "termUrl");
def mdOrder = propertiesRegisterTransfer.getPropertyValue( "mdOrder");
def acsUrlText = propertiesRegisterTransfer.getPropertyValue( "acsUrlText");

log.info paReq;

 WebDriver driver = new FirefoxDriver();
 
driver.get("https://test.paymentgate.ru/testpayment/merchants/test/test_3dsec.html");
acsUrlText
driver.findElement(By.id("acsUrlText")).clear();
driver.findElement(By.id("acsUrlText")).sendKeys(acsUrlText);
driver.findElement(By.id("termUrlText")).clear();
driver.findElement(By.id("termUrlText")).sendKeys(termUrl);
driver.findElement(By.id("mdText")).clear();
driver.findElement(By.id("mdText")).sendKeys(mdOrder);
driver.findElement(By.id("paReqText")).clear();
driver.findElement(By.id("paReqText")).sendKeys(paReq);

driver.findElement(By.id("redirectToAcs")).click();

Thread.sleep(1000);

WebElement pass = driver.findElement(By.id("password"));
pass.sendKeys("12345678");
driver.findElement(By.id("submit_id")).click();
driver.quit();



</script></con:config></con:testStep><con:testStep type="transfer" name="transferProperties" id="8f67237e-a6da-4f21-9cd8-bdaf4f5665e6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties><con:property><con:name>user</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>mdOrder</con:name><con:value>f7e30aa7-6cae-4113-9ba2-ce783dac59d3</con:value></con:property><con:property><con:name>bindingId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="register_payment_getStatus" searchProperties="true" id="e40e8a36-220a-4f19-af4d-046bb589769f"><con:settings/><con:testStep type="properties" name="Properties" id="a9536dc5-266c-418f-8a27-06925c73f56f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>orderId</con:name><con:value>240271a3-ee5c-400b-9c98-c0ad1cbf00e0</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140124105301093</con:value></con:property><con:property><con:name>jsonParams</con:name><con:value/></con:property><con:property><con:name>orderBundle</con:name><con:value>{ "orderCreationDate":"2013-07-12T13:51:00", "customerDetails":{ "email":"bloyh@mail.ru", "phone":"79032177751", "contact":"NatalieBianko", "deliveryInfo":{ "deliveryType":"courier", "country":"RU", "city":"Moscow", "postAddress":"ЗемлянойВал50Астр.2" } }, "cartItems":{ "items":[ { "positionId":"1", "name":"carrotsbox", "itemDetails":{  }, "quantity":{ "value":15, "measure":"kg" }, "itemAmount":"20000", "itemCurrency":"643", "itemCode":"123", "discount":{ "discountType":"percent", "discountValue":"5" }, "agentInterest":{ "interestType":"3", "interestValue":"2" } } ] }, "loyalties":{ "loyalties":[ { "bonusAmountForDebit":2000, "bonusAmountForCredit":0, "loyaltyProgramName":"sbrf_spasibo", "positionId":"1" } ] } }</con:value></con:property><con:property><con:name>pageView</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="simpleScript" id="02235635-4225-4779-908d-dc228a135a8d"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
//import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;


register();
payment();
getOrderStatus();

def register()
{
project = testRunner.testCase.testSuite.project;
authTransfer = testRunner.testCase.getTestStepByName( "Properties");
propReg = testRunner.testCase.getTestStepByName("register");

			username= authTransfer.getPropertyValue( "username");
			pwd=authTransfer.getPropertyValue( "pwd");
			jsonParams=authTransfer.getPropertyValue( "jsonParams");
			orderBundle=authTransfer.getPropertyValue( "orderBundle");
			pageView=authTransfer.getPropertyValue( "pageView");
			propReg.setPropertyValue( "username",username);	
			propReg.setPropertyValue( "pwd", pwd);
			propReg.setPropertyValue( "pageView", pageView);
			propReg.setPropertyValue( "jsonParams", jsonParams);
			propReg.setPropertyValue( "orderBundle", orderBundle);

testRunner.runTestStep( project.testSuites["test-cases"].testCases["register_payment_getStatus"].testSteps["register"] )	;

			orderNumber= propReg.getPropertyValue( "orderNumber");
			orderId=propReg.getPropertyValue( "orderId");	
						
			authTransfer.setPropertyValue( "orderId",orderId);	
			authTransfer.setPropertyValue( "orderNumber", orderNumber);
			log.info orderId;
}

def payment()
{
project = testRunner.testCase.testSuite.project;
authTransfer = testRunner.testCase.getTestStepByName( "Properties");
propPay = testRunner.testCase.getTestStepByName("payment");

			username= authTransfer.getPropertyValue( "username");
			pwd=authTransfer.getPropertyValue( "pwd");
			orderId=authTransfer.getPropertyValue( "orderId");
			
			propPay.setPropertyValue( "user",username);	
			propPay.setPropertyValue( "pwd", pwd);
			propPay.setPropertyValue( "mdOrder", orderId);

			log.info username;

testRunner.runTestStep( project.testSuites["test-cases"].testCases["register_payment_getStatus"].testSteps["payment"] )	;

			
		//	authTransfer.setPropertyValue( "orderId",orderId);	
		//	authTransfer.setPropertyValue( "orderNumber", orderNumber);
		//	log.info orderId;
}

def getOrderStatus()
{
project = testRunner.testCase.testSuite.project;
authTransfer = testRunner.testCase.getTestStepByName( "Properties");
propStats = testRunner.testCase.getTestStepByName("getOrderStatus");

			username= authTransfer.getPropertyValue( "username");
			pwd=authTransfer.getPropertyValue( "pwd");
			orderId=authTransfer.getPropertyValue( "orderId");
			
			propStats.setPropertyValue( "userName",username);	
			propStats.setPropertyValue( "pwd", pwd);
			propStats.setPropertyValue( "orderId", orderId);

testRunner.runTestStep( project.testSuites["test-cases"].testCases["register_payment_getStatus"].testSteps["getOrderStatus"] )	;

			log.info "завершено";
		//	authTransfer.setPropertyValue( "orderId",orderId);	
		//	authTransfer.setPropertyValue( "orderNumber", orderNumber);
		//	log.info orderId;
}
</script></con:config></con:testStep><con:testStep type="calltestcase" name="getOrderStatus" disabled="true" id="9fd0c13c-5e9e-4452-90a4-7d217155c840"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c8d0d140-3a97-4fc1-8301-bd0f2a43e9e6</con:targetTestCase><con:properties><con:property><con:name>orderId</con:name><con:value>240271a3-ee5c-400b-9c98-c0ad1cbf00e0</con:value></con:property><con:property><con:name>language</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>userName</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>expiry</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>cardholderName</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>depositAmount</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>currency</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>approvalCode</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>authCode</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ErrorCode</con:name><con:value>6</con:value></con:property><con:property><con:name>ErrorMessage</con:name><con:value>Неизвестный номер заказа</con:value></con:property><con:property><con:name>orderStatus</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>OrderNumber</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>Pan</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>ip</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>amount</con:name><con:value xsi:nil="true"/></con:property></con:properties><con:returnProperties><con:entry>expiry</con:entry><con:entry>cardholderName</con:entry><con:entry>depositAmount</con:entry><con:entry>currency</con:entry><con:entry>approvalCode</con:entry><con:entry>authCode</con:entry><con:entry>ErrorCode</con:entry><con:entry>ErrorMessage</con:entry><con:entry>orderStatus</con:entry><con:entry>OrderNumber</con:entry><con:entry>Pan</con:entry><con:entry>ip</con:entry><con:entry>amount</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="payment" disabled="true" id="6a4d94aa-b0ee-46bf-abca-ad69a5561871"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>8b9da7dd-6b0e-4d90-b446-a57675e0f6ab</con:targetTestCase><con:properties><con:property><con:name>user</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>mdOrder</con:name><con:value>240271a3-ee5c-400b-9c98-c0ad1cbf00e0</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/rest/</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="register" disabled="true" id="44faccbb-8edc-4d98-b1e6-e2dce252c4d8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>01dd67ce-544e-445f-a08e-928be02eb2d5</con:targetTestCase><con:properties><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>orderId</con:name><con:value>6dec731e-2b94-4750-a2da-3c68862938b1</con:value></con:property><con:property><con:name>returnUrl</con:name></con:property><con:property><con:name>amount</con:name><con:value>20000</con:value></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>language</con:name><con:value>ru</con:value></con:property><con:property><con:name>EndPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/rest/</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140127045337381</con:value></con:property><con:property><con:name>jsonParams</con:name><con:value/></con:property><con:property><con:name>orderBundle</con:name><con:value>{ "orderCreationDate":"2013-07-12T13:51:00", "customerDetails":{ "email":"bloyh@mail.ru", "phone":"79032177751", "contact":"NatalieBianko", "deliveryInfo":{ "deliveryType":"courier", "country":"RU", "city":"Moscow", "postAddress":"ЗемлянойВал50Астр.2" } }, "cartItems":{ "items":[ { "positionId":"1", "name":"carrotsbox", "itemDetails":{  }, "quantity":{ "value":15, "measure":"kg" }, "itemAmount":"20000", "itemCurrency":"643", "itemCode":"123", "discount":{ "discountType":"percent", "discountValue":"5" }, "agentInterest":{ "interestType":"3", "interestValue":"2" } } ] }, "loyalties":{ "loyalties":[ { "bonusAmountForDebit":2000, "bonusAmountForCredit":0, "loyaltyProgramName":"sbrf_spasibo", "positionId":"1" } ] } }</con:value></con:property><con:property><con:name>pageView</con:name><con:value/></con:property><con:property><con:name>dublicateOrderId</con:name><con:value>false</con:value></con:property><con:property><con:name>unknown currency</con:name><con:value>false</con:value></con:property><con:property><con:name>isDefault</con:name><con:value>false</con:value></con:property><con:property><con:name>value error</con:name><con:value>false</con:value></con:property><con:property><con:name>systemError</con:name><con:value>false</con:value></con:property><con:property><con:name>errorCode</con:name></con:property></con:properties><con:returnProperties><con:entry>orderId</con:entry><con:entry>orderNumber</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="registerBundle_payment_getStatus" searchProperties="true" id="0a868545-3e6d-4f7e-8dca-c16e6c2fbdf9"><con:settings/><con:testStep type="properties" name="Properties" id="35b0c82c-cebf-445f-9058-9cb26a4d5175"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>tt</con:value></con:property><con:property><con:name>pwd</con:name><con:value>123456</con:value></con:property><con:property><con:name>orderId</con:name><con:value>35cf37e0-78b7-41a7-84c7-c724ac34c93f</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140324102330411</con:value></con:property><con:property><con:name>jsonParams</con:name><con:value/></con:property><con:property><con:name>pageView</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="simpleScript" id="65fefde3-7f69-40ee-bfe7-70f2e9f278f3"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
//import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;


register();
payment();
getOrderStatus();

def register()
{
project = testRunner.testCase.testSuite.project;
authTransfer = testRunner.testCase.getTestStepByName( "Properties");
propReg = testRunner.testCase.getTestStepByName("register");

			username= authTransfer.getPropertyValue( "username");
			pwd=authTransfer.getPropertyValue( "pwd");
			jsonParams=authTransfer.getPropertyValue( "jsonParams");
			pageView=authTransfer.getPropertyValue( "pageView");
			propReg.setPropertyValue( "username",username);	
			propReg.setPropertyValue( "pwd", pwd);
			propReg.setPropertyValue( "pageView", pageView);
			propReg.setPropertyValue( "jsonParams", jsonParams);
			

testRunner.runTestStep( project.testSuites["test-cases"].testCases["registerBundle_payment_getStatus"].testSteps["register"] )	;

			orderNumber= propReg.getPropertyValue( "orderNumber");
			orderId=propReg.getPropertyValue( "orderId");	
						
			authTransfer.setPropertyValue( "orderId",orderId);	
			authTransfer.setPropertyValue( "orderNumber", orderNumber);
			log.info orderId;
}

def payment()
{
project = testRunner.testCase.testSuite.project;
authTransfer = testRunner.testCase.getTestStepByName( "Properties");
propPay = testRunner.testCase.getTestStepByName("payment");

			username= authTransfer.getPropertyValue( "username");
			pwd=authTransfer.getPropertyValue( "pwd");
			orderId=authTransfer.getPropertyValue( "orderId");
			
			propPay.setPropertyValue( "user",username);	
			propPay.setPropertyValue( "pwd", pwd);
			propPay.setPropertyValue( "mdOrder", orderId);

			log.info username;

testRunner.runTestStep( project.testSuites["test-cases"].testCases["registerBundle_payment_getStatus"].testSteps["payment"] )	;

			
		//	authTransfer.setPropertyValue( "orderId",orderId);	
		//	authTransfer.setPropertyValue( "orderNumber", orderNumber);
		//	log.info orderId;
}

def getOrderStatus()
{
project = testRunner.testCase.testSuite.project;
authTransfer = testRunner.testCase.getTestStepByName( "Properties");
propStats = testRunner.testCase.getTestStepByName("getOrderStatus");

			username= authTransfer.getPropertyValue( "username");
			pwd=authTransfer.getPropertyValue( "pwd");
			orderId=authTransfer.getPropertyValue( "orderId");
			
			propStats.setPropertyValue( "userName",username);	
			propStats.setPropertyValue( "pwd", pwd);
			propStats.setPropertyValue( "orderId", orderId);

testRunner.runTestStep( project.testSuites["test-cases"].testCases["registerBundle_payment_getStatus"].testSteps["getOrderStatus"] )	;

			log.info "завершено";
		//	authTransfer.setPropertyValue( "orderId",orderId);	
		//	authTransfer.setPropertyValue( "orderNumber", orderNumber);
		//	log.info orderId;
}
</script></con:config></con:testStep><con:testStep type="calltestcase" name="getOrderStatus" disabled="true" id="4886c989-dfda-4a7d-84a9-4175bfadf6e1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c8d0d140-3a97-4fc1-8301-bd0f2a43e9e6</con:targetTestCase><con:properties><con:property><con:name>orderId</con:name><con:value>35cf37e0-78b7-41a7-84c7-c724ac34c93f</con:value></con:property><con:property><con:name>language</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>userName</con:name><con:value>tt</con:value></con:property><con:property><con:name>pwd</con:name><con:value>123456</con:value></con:property><con:property><con:name>expiry</con:name><con:value>201512</con:value></con:property><con:property><con:name>cardholderName</con:name><con:value>Nataly Bianko</con:value></con:property><con:property><con:name>depositAmount</con:name><con:value>0</con:value></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>approvalCode</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>authCode</con:name><con:value>2</con:value></con:property><con:property><con:name>ErrorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>ErrorMessage</con:name><con:value>Успешно</con:value></con:property><con:property><con:name>orderStatus</con:name><con:value>0</con:value></con:property><con:property><con:name>OrderNumber</con:name><con:value>12438</con:value></con:property><con:property><con:name>Pan</con:name><con:value>478978**1233</con:value></con:property><con:property><con:name>ip</con:name><con:value/></con:property><con:property><con:name>amount</con:name><con:value>20000</con:value></con:property></con:properties><con:returnProperties><con:entry>expiry</con:entry><con:entry>cardholderName</con:entry><con:entry>depositAmount</con:entry><con:entry>currency</con:entry><con:entry>approvalCode</con:entry><con:entry>authCode</con:entry><con:entry>ErrorCode</con:entry><con:entry>ErrorMessage</con:entry><con:entry>orderStatus</con:entry><con:entry>OrderNumber</con:entry><con:entry>Pan</con:entry><con:entry>ip</con:entry><con:entry>amount</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="payment" disabled="true" id="091b90d6-66be-499c-9227-0b8f9d8028e2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>8b9da7dd-6b0e-4d90-b446-a57675e0f6ab</con:targetTestCase><con:properties><con:property><con:name>user</con:name><con:value>tt</con:value></con:property><con:property><con:name>pwd</con:name><con:value>123456</con:value></con:property><con:property><con:name>mdOrder</con:name><con:value>35cf37e0-78b7-41a7-84c7-c724ac34c93f</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://3dsec.sberbank.ru/testpayment/rest/</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="register" disabled="true" id="3d6d5e23-6bb0-4d55-9a59-eb421449ee97"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>90d0f872-b93a-4792-a9de-8038fa00eb49</con:targetTestCase><con:properties><con:property><con:name>username</con:name><con:value>tt</con:value></con:property><con:property><con:name>pwd</con:name><con:value>123456</con:value></con:property><con:property><con:name>orderId</con:name><con:value>35cf37e0-78b7-41a7-84c7-c724ac34c93f</con:value></con:property><con:property><con:name>returnUrl</con:name><con:value/></con:property><con:property><con:name>amount</con:name><con:value>20000</con:value></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>language</con:name><con:value>ru</con:value></con:property><con:property><con:name>EndPoint</con:name><con:value>https://3dsec.sberbank.ru/testpayment/rest/</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140324102330411</con:value></con:property><con:property><con:name>jsonParams</con:name><con:value/></con:property><con:property><con:name>orderBundleBone</con:name><con:value>{ "orderCreationDate":"2013-07-12T13:51:00", "customerDetails":{ 	"email":"bloyh@mail.ru", 	"phone":"79032177751", 	"contact":"NatalieBianko", 	"deliveryInfo":{ 		"deliveryType":"courier", 		"country":"RU", 		"city":"Moscow", 		"postAddress":"ЗемлянойВал50Астр.2" 	} }, "cartItems":{ 	"items":[ 	{ 		"positionId":"1", 		"name":"carrotsbox", 		"itemDetails":{  		}, 		"quantity":{ 		"value":15, 		"measure":"kg" 		}, 		"itemAmount":"20000", 		"itemCurrency":"643", 		"itemCode":"123", 		"discount":{ 		"discountType":"percent", 		"discountValue":"5" 		}, 		"agentInterest":{ 		"interestType":"3", 		"interestValue":"2" 		} 	} 	] }, "loyalties":{ 	"loyalties":[ 	{ 		"bonusAmountForDebit":2000, 		"bonusAmountForCredit":0, 		"loyaltyProgramName":"sbrf_spasibo", 		"positionId":"1" 	} 	] 	} }</con:value></con:property><con:property><con:name>pageView</con:name><con:value/></con:property><con:property><con:name>dublicateOrderId</con:name><con:value>false</con:value></con:property><con:property><con:name>unknown currency</con:name><con:value>false</con:value></con:property><con:property><con:name>isDefault</con:name><con:value>false</con:value></con:property><con:property><con:name>value error</con:name><con:value>false</con:value></con:property><con:property><con:name>systemError</con:name><con:value>false</con:value></con:property><con:property><con:name>email</con:name><con:value>bloyh@mail.ru</con:value></con:property><con:property><con:name>phone</con:name><con:value>9032177751</con:value></con:property><con:property><con:name>contact</con:name><con:value>atalie Bianko</con:value></con:property><con:property><con:name>deliveryType</con:name><con:value>Courier</con:value></con:property><con:property><con:name>postAddress</con:name><con:value>some Street</con:value></con:property><con:property><con:name>city</con:name><con:value>Moscow</con:value></con:property><con:property><con:name>country</con:name><con:value>RU</con:value></con:property><con:property><con:name>itemDetails</con:name><con:value>null</con:value></con:property><con:property><con:name>positionId</con:name><con:value>1</con:value></con:property><con:property><con:name>itemAmount</con:name><con:value>20000</con:value></con:property><con:property><con:name>itemCurrency</con:name><con:value>643</con:value></con:property><con:property><con:name>name</con:name><con:value>boombox audio</con:value></con:property><con:property><con:name>quantity.measure</con:name><con:value>pic</con:value></con:property><con:property><con:name>quantity.value</con:name><con:value>10</con:value></con:property><con:property><con:name>interestValue</con:name><con:value>50</con:value></con:property><con:property><con:name>interestType</con:name><con:value>vip</con:value></con:property><con:property><con:name>discountType</con:name><con:value>sale</con:value></con:property><con:property><con:name>discountValue</con:name><con:value>10</con:value></con:property><con:property><con:name>itemCode</con:name><con:value>4534578973450345</con:value></con:property><con:property><con:name>bonusAmountForDebit</con:name><con:value>20000</con:value></con:property><con:property><con:name>bonusAmountForCredit</con:name><con:value>0</con:value></con:property><con:property><con:name>loyalties.positionId</con:name><con:value>1</con:value></con:property><con:property><con:name>loyalityProgramName</con:name><con:value>sbrf_spasibo</con:value></con:property><con:property><con:name>positions</con:name><con:value>0</con:value></con:property><con:property><con:name>orderBundle</con:name></con:property><con:property><con:name>errorMessage</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>errorCode</con:name><con:value xsi:nil="true"/></con:property></con:properties><con:returnProperties><con:entry>orderId</con:entry><con:entry>orderNumber</con:entry><con:entry>errorCode</con:entry><con:entry>errorMessage</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="registerPreOrder_payment_deposit_getStatus" searchProperties="true" id="dae7b608-1641-403f-a3b5-c9b3afdc2a01"><con:settings/><con:testStep type="properties" name="Properties" id="6c62863b-6c35-438c-a9c1-31974514171a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>orderId</con:name><con:value>26923ef1-3230-4544-b0c1-cbdabdf8465b</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="simpleScript" id="6feec552-bd7b-492e-9975-c87c7bd247a4"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
//import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;


register();
payment();
getOrderStatus();

def register()
{
project = testRunner.testCase.testSuite.project;
authTransfer = testRunner.testCase.getTestStepByName( "Properties");
propReg = testRunner.testCase.getTestStepByName("registerPreOrder");

			username= authTransfer.getPropertyValue( "username");
			pwd=authTransfer.getPropertyValue( "pwd");
			propReg.setPropertyValue( "username",username);	
			propReg.setPropertyValue( "pwd", pwd);

testRunner.runTestStep( project.testSuites["test-cases"].testCases["registerPreOrder_payment_deposit_getStatus"].testSteps["registerPreOrder"] )	;

			orderNumber= propReg.getPropertyValue( "orderNumber");
			orderId=propReg.getPropertyValue( "orderId");	
						
			authTransfer.setPropertyValue( "orderId",orderId);	
			authTransfer.setPropertyValue( "orderNumber", orderNumber);
			log.info orderId;
}

def payment()
{
project = testRunner.testCase.testSuite.project;
authTransfer = testRunner.testCase.getTestStepByName( "Properties");
propPay = testRunner.testCase.getTestStepByName("payment");

			username= authTransfer.getPropertyValue( "username");
			pwd=authTransfer.getPropertyValue( "pwd");
			orderId=authTransfer.getPropertyValue( "orderId");
			
			propPay.setPropertyValue( "user",username);	
			propPay.setPropertyValue( "pwd", pwd);
			propPay.setPropertyValue( "mdOrder", orderId);

			log.info username;

testRunner.runTestStep( project.testSuites["test-cases"].testCases["registerPreOrder_payment_deposit_getStatus"].testSteps["payment"] )	;

			
		//	authTransfer.setPropertyValue( "orderId",orderId);	
		//	authTransfer.setPropertyValue( "orderNumber", orderNumber);
		//	log.info orderId;
}

def getOrderStatus()
{
project = testRunner.testCase.testSuite.project;
authTransfer = testRunner.testCase.getTestStepByName( "Properties");
propStats = testRunner.testCase.getTestStepByName("getOrderStatus");

			username= authTransfer.getPropertyValue( "username");
			pwd=authTransfer.getPropertyValue( "pwd");
			orderId=authTransfer.getPropertyValue( "orderId");
			
			propStats.setPropertyValue( "userName",username);	
			propStats.setPropertyValue( "pwd", pwd);
			propStats.setPropertyValue( "orderId", orderId);

testRunner.runTestStep( project.testSuites["test-cases"].testCases["registerPreOrder_payment_deposit_getStatus"].testSteps["getOrderStatus"] )	;

			log.info "завершено";
		//	authTransfer.setPropertyValue( "orderId",orderId);	
		//	authTransfer.setPropertyValue( "orderNumber", orderNumber);
		//	log.info orderId;
}

</script></con:config></con:testStep><con:testStep type="calltestcase" name="getOrderStatus" disabled="true" id="91609542-7caf-4248-9839-983ec2a02437"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c8d0d140-3a97-4fc1-8301-bd0f2a43e9e6</con:targetTestCase><con:properties><con:property><con:name>orderId</con:name><con:value>26923ef1-3230-4544-b0c1-cbdabdf8465b</con:value></con:property><con:property><con:name>language</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>userName</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>expiry</con:name><con:value>201512</con:value></con:property><con:property><con:name>cardholderName</con:name><con:value>Nataly Bianko</con:value></con:property><con:property><con:name>depositAmount</con:name><con:value>0</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>approvalCode</con:name><con:value>123456</con:value></con:property><con:property><con:name>authCode</con:name><con:value>2</con:value></con:property><con:property><con:name>ErrorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>ErrorMessage</con:name><con:value>Успешно</con:value></con:property><con:property><con:name>orderStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>OrderNumber</con:name><con:value>27.01.2014.06.07.31</con:value></con:property><con:property><con:name>Pan</con:name><con:value>478978**1233</con:value></con:property><con:property><con:name>ip</con:name><con:value/></con:property><con:property><con:name>amount</con:name><con:value>100</con:value></con:property></con:properties><con:returnProperties><con:entry>expiry</con:entry><con:entry>cardholderName</con:entry><con:entry>depositAmount</con:entry><con:entry>currency</con:entry><con:entry>approvalCode</con:entry><con:entry>authCode</con:entry><con:entry>ErrorCode</con:entry><con:entry>ErrorMessage</con:entry><con:entry>orderStatus</con:entry><con:entry>OrderNumber</con:entry><con:entry>Pan</con:entry><con:entry>ip</con:entry><con:entry>amount</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="payment" disabled="true" id="660a5817-76e2-4c9a-8c3d-11c471d4797d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>8b9da7dd-6b0e-4d90-b446-a57675e0f6ab</con:targetTestCase><con:properties><con:property><con:name>user</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>mdOrder</con:name><con:value>26923ef1-3230-4544-b0c1-cbdabdf8465b</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/rest/</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="registerPreOrder" id="20fd39f2-68d1-4525-a4fb-de88a0870a87" disabled="true"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>5c7c5192-e115-43a4-b75f-a9978fca82c0</con:targetTestCase><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>orderId</con:name><con:value>26923ef1-3230-4544-b0c1-cbdabdf8465b</con:value></con:property><con:property><con:name>returnUrl</con:name></con:property><con:property><con:name>amount</con:name></con:property><con:property><con:name>currency</con:name></con:property><con:property><con:name>language</con:name></con:property><con:property><con:name>EndPoint</con:name></con:property><con:property><con:name>orderNumber</con:name></con:property></con:properties><con:returnProperties><con:entry>orderId</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="registerPreOrderBundle" id="eb0e5430-39dc-49f9-b849-c5366fefd6e8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>01dd67ce-544e-445f-a08e-928be02eb2d5</con:targetTestCase><con:properties><con:property><con:name>username</con:name></con:property><con:property><con:name>pwd</con:name></con:property><con:property><con:name>orderId</con:name><con:value>322c6256-4ecf-4505-a98b-84841b18e162</con:value></con:property><con:property><con:name>returnUrl</con:name></con:property><con:property><con:name>amount</con:name></con:property><con:property><con:name>currency</con:name></con:property><con:property><con:name>language</con:name></con:property><con:property><con:name>EndPoint</con:name></con:property><con:property><con:name>orderNumber</con:name><con:value>20140124102335444</con:value></con:property><con:property><con:name>jsonParams</con:name></con:property><con:property><con:name>orderBundle</con:name></con:property><con:property><con:name>pageView</con:name></con:property><con:property><con:name>dublicateOrderId</con:name></con:property><con:property><con:name>unknown currency</con:name></con:property><con:property><con:name>isDefault</con:name></con:property><con:property><con:name>value error</con:name></con:property><con:property><con:name>systemError</con:name></con:property><con:property><con:name>errorCode</con:name><con:value xsi:nil="true"/></con:property></con:properties><con:returnProperties><con:entry>orderId</con:entry><con:entry>orderNumber</con:entry><con:entry>errorCode</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="errorTestCases" searchProperties="true" id="d38223e5-3cc5-4127-b883-ccca3bccc53f" disabled="true"><con:settings/><con:testStep type="calltestcase" name="0" id="7045dfb7-cb64-4e7b-b6ce-37160d5c5ab7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>01dd67ce-544e-445f-a08e-928be02eb2d5</con:targetTestCase><con:properties><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>orderId</con:name></con:property><con:property><con:name>returnUrl</con:name></con:property><con:property><con:name>amount</con:name></con:property><con:property><con:name>currency</con:name></con:property><con:property><con:name>language</con:name></con:property><con:property><con:name>EndPoint</con:name></con:property><con:property><con:name>orderNumber</con:name></con:property><con:property><con:name>jsonParams</con:name></con:property><con:property><con:name>orderBundle</con:name></con:property><con:property><con:name>pageView</con:name></con:property><con:property><con:name>dublicateOrderId</con:name><con:value>false</con:value></con:property><con:property><con:name>unknown currency</con:name><con:value>false</con:value></con:property><con:property><con:name>isDefault</con:name><con:value>false</con:value></con:property><con:property><con:name>value error</con:name><con:value>false</con:value></con:property><con:property><con:name>systemError</con:name><con:value>false</con:value></con:property><con:property><con:name>errorCode</con:name><con:value xsi:nil="true"/></con:property></con:properties><con:returnProperties><con:entry>errorCode</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="1" id="eb0bacba-869e-4585-b80f-7e742047d0d5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>01dd67ce-544e-445f-a08e-928be02eb2d5</con:targetTestCase><con:properties><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>orderId</con:name></con:property><con:property><con:name>returnUrl</con:name></con:property><con:property><con:name>amount</con:name></con:property><con:property><con:name>currency</con:name></con:property><con:property><con:name>language</con:name></con:property><con:property><con:name>EndPoint</con:name></con:property><con:property><con:name>orderNumber</con:name><con:value>123456</con:value></con:property><con:property><con:name>jsonParams</con:name></con:property><con:property><con:name>orderBundle</con:name></con:property><con:property><con:name>pageView</con:name></con:property><con:property><con:name>dublicateOrderId</con:name><con:value>true</con:value></con:property><con:property><con:name>unknown currency</con:name><con:value>false</con:value></con:property><con:property><con:name>isDefault</con:name></con:property><con:property><con:name>value error</con:name></con:property><con:property><con:name>systemError</con:name></con:property><con:property><con:name>errorCode</con:name><con:value>1</con:value></con:property></con:properties><con:returnProperties><con:entry>orderNumber</con:entry><con:entry>errorCode</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="3" id="dbf54d90-ba08-4128-a9bb-95c38a0a3abb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>01dd67ce-544e-445f-a08e-928be02eb2d5</con:targetTestCase><con:properties><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>orderId</con:name></con:property><con:property><con:name>returnUrl</con:name></con:property><con:property><con:name>amount</con:name></con:property><con:property><con:name>currency</con:name></con:property><con:property><con:name>language</con:name></con:property><con:property><con:name>EndPoint</con:name></con:property><con:property><con:name>orderNumber</con:name></con:property><con:property><con:name>jsonParams</con:name></con:property><con:property><con:name>orderBundle</con:name></con:property><con:property><con:name>pageView</con:name></con:property><con:property><con:name>dublicateOrderId</con:name><con:value>false</con:value></con:property><con:property><con:name>unknown currency</con:name><con:value>true</con:value></con:property><con:property><con:name>isDefault</con:name></con:property><con:property><con:name>value error</con:name></con:property><con:property><con:name>systemError</con:name></con:property><con:property><con:name>errorCode</con:name><con:value xsi:nil="true"/></con:property></con:properties><con:returnProperties><con:entry>errorCode</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="4" id="22b28f0e-8544-43e7-8557-3caece363a02"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>01dd67ce-544e-445f-a08e-928be02eb2d5</con:targetTestCase><con:properties><con:property><con:name>username</con:name></con:property><con:property><con:name>pwd</con:name></con:property><con:property><con:name>orderId</con:name></con:property><con:property><con:name>returnUrl</con:name></con:property><con:property><con:name>amount</con:name></con:property><con:property><con:name>currency</con:name></con:property><con:property><con:name>language</con:name></con:property><con:property><con:name>EndPoint</con:name></con:property><con:property><con:name>orderNumber</con:name></con:property><con:property><con:name>jsonParams</con:name></con:property><con:property><con:name>orderBundle</con:name></con:property><con:property><con:name>pageView</con:name></con:property><con:property><con:name>dublicateOrderId</con:name></con:property><con:property><con:name>unknown currency</con:name></con:property><con:property><con:name>isDefault</con:name></con:property><con:property><con:name>value error</con:name></con:property><con:property><con:name>systemError</con:name></con:property><con:property><con:name>errorCode</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="5" id="8e49db5e-645b-4d05-bfeb-39a5cc8b1a61"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>01dd67ce-544e-445f-a08e-928be02eb2d5</con:targetTestCase><con:properties><con:property><con:name>username</con:name></con:property><con:property><con:name>pwd</con:name></con:property><con:property><con:name>orderId</con:name></con:property><con:property><con:name>returnUrl</con:name></con:property><con:property><con:name>amount</con:name></con:property><con:property><con:name>currency</con:name></con:property><con:property><con:name>language</con:name></con:property><con:property><con:name>EndPoint</con:name></con:property><con:property><con:name>orderNumber</con:name></con:property><con:property><con:name>jsonParams</con:name></con:property><con:property><con:name>orderBundle</con:name></con:property><con:property><con:name>pageView</con:name></con:property><con:property><con:name>dublicateOrderId</con:name></con:property><con:property><con:name>unknown currency</con:name></con:property><con:property><con:name>isDefault</con:name></con:property><con:property><con:name>value error</con:name></con:property><con:property><con:name>systemError</con:name></con:property><con:property><con:name>errorCode</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="7" id="756b57d2-675a-4fbd-bdf6-e3ca954617a8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>01dd67ce-544e-445f-a08e-928be02eb2d5</con:targetTestCase><con:properties><con:property><con:name>username</con:name></con:property><con:property><con:name>pwd</con:name></con:property><con:property><con:name>orderId</con:name></con:property><con:property><con:name>returnUrl</con:name></con:property><con:property><con:name>amount</con:name></con:property><con:property><con:name>currency</con:name></con:property><con:property><con:name>language</con:name></con:property><con:property><con:name>EndPoint</con:name></con:property><con:property><con:name>orderNumber</con:name></con:property><con:property><con:name>jsonParams</con:name></con:property><con:property><con:name>orderBundle</con:name></con:property><con:property><con:name>pageView</con:name></con:property><con:property><con:name>dublicateOrderId</con:name></con:property><con:property><con:name>unknown currency</con:name></con:property><con:property><con:name>isDefault</con:name></con:property><con:property><con:name>value error</con:name></con:property><con:property><con:name>systemError</con:name></con:property><con:property><con:name>errorCode</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="registerBundle" searchProperties="true" disabled="true" id="90d0f872-b93a-4792-a9de-8038fa00eb49"><con:settings/><con:testStep type="transfer" name="propTransfer" id="6fa62e7d-0215-482d-855d-ce664085fc98"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>username</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>pwd</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>Endpoint</con:name><con:sourceType>EndPoint</con:sourceType><con:sourceStep>#Project#</con:sourceStep><con:targetType>EndPoint</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" useXQuery="false"><con:name>jsonParams</con:name><con:sourceType>jsonParams</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>jsonParams</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="hellScript" id="99ea8530-3323-4d49-8242-615e805247ec"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import groovy.json.JsonSlurper;
import groovy.json.JsonBuilder;

def registerString = testRunner.testCase.getPropertyValue("orderBundleBone");
//def positions = testRunner.testCase.getPropertyValue("positions");

int positions =  Integer.valueOf(testRunner.testCase.getPropertyValue( "positions"));
//log.info positions;
int amount =  Integer.valueOf(testRunner.testCase.getPropertyValue( "itemAmount"));
log.info amount;

if (positions != 0){
amount = amount*(positions+1);
log.info amount;
String amountSum = amount as String;
testRunner.testCase.setPropertyValue( "amount",  amountSum);
}


def jsonObj = new JsonSlurper().parseText( registerString);
int a=0;



jsonObj.customerDetails.email = 								testRunner.testCase.getPropertyValue( "email" ); 
jsonObj.customerDetails.phone = 								Long.valueOf(testRunner.testCase.getPropertyValue( "phone"));
jsonObj.customerDetails.contact = 							testRunner.testCase.getPropertyValue( "contact");
jsonObj.customerDetails.deliveryInfo.deliveryType = 		testRunner.testCase.getPropertyValue( "deliveryType");
jsonObj.customerDetails.deliveryInfo.postAddress = 		testRunner.testCase.getPropertyValue( "postAddress");
jsonObj.customerDetails.deliveryInfo.city = 					testRunner.testCase.getPropertyValue( "city" );
jsonObj.customerDetails.deliveryInfo.country = 			testRunner.testCase.getPropertyValue( "country" );


//jsonObj.cartItems.items[a].itemDetails = 						testRunner.testCase.getPropertyValue( "itemDetails" );
jsonObj.cartItems.items[a].itemAmount =						Long.valueOf(testRunner.testCase.getPropertyValue( "itemAmount"));
jsonObj.cartItems.items[a].itemCurrency = 					testRunner.testCase.getPropertyValue( "itemCurrency" );
jsonObj.cartItems.items[a].name = 								testRunner.testCase.getPropertyValue( "name" );
jsonObj.cartItems.items[a].quantity.measure = 				testRunner.testCase.getPropertyValue( "quantity.measure" );
jsonObj.cartItems.items[a].quantity.value = 					testRunner.testCase.getPropertyValue( "quantity.value" );
jsonObj.cartItems.items[a].agentInterest.interestValue =	testRunner.testCase.getPropertyValue( "interestValue" );
jsonObj.cartItems.items[a].agentInterest.interestType =	testRunner.testCase.getPropertyValue( "interestType" );
jsonObj.cartItems.items[a].discount.discountType = 		testRunner.testCase.getPropertyValue( "discountType" );
jsonObj.cartItems.items[a].discount.discountValue = 		testRunner.testCase.getPropertyValue( "discountValue" );
jsonObj.cartItems.items[a].itemCode = 						testRunner.testCase.getPropertyValue( "itemCode" );


			
jsonObj.loyalties.loyalties[a].bonusAmountForDebit = 		Long.valueOf(testRunner.testCase.getPropertyValue( "bonusAmountForDebit") );
jsonObj.loyalties.loyalties[a].bonusAmountForCredit = 	Long.valueOf(testRunner.testCase.getPropertyValue( "bonusAmountForCredit"));
jsonObj.loyalties.loyalties[a].loyaltyProgramName = 		testRunner.testCase.getPropertyValue( "loyalityProgramName" );



item = jsonObj.cartItems.items[0];
loyalities= jsonObj.loyalties.loyalties[0]

def pos = Integer.valueOf( item.positionId);
def cloneItem = null
while (a&lt;positions){
	a++
	pos++
	cloneItems = item.clone()
	cloneLoyalities=loyalities.clone()
	cloneItems.positionId = pos
	cloneLoyalities.positionId = pos
	jsonObj.cartItems.items.add(cloneItems)
	jsonObj.loyalties.loyalties.add(cloneLoyalities)
	log.info pos;
}

//log.info jsonObj.cartItems.items.positionId
//log.info jsonObj.loyalties.loyalties.positionId


//testRunner.testCase.setPropertyValue( "amount", 1);
//	jsonObj.cartItems.items[a].itemDetails = 						testRunner.testCase.getPropertyValue( "itemDetails" );
//			jsonObj.cartItems.items[a].positionId = 		a+1;			//testRunner.testCase.getPropertyValue( "positionId");
//			jsonObj.cartItems.items[a].itemAmount =						Long.valueOf(testRunner.testCase.getPropertyValue( "itemAmount"));
//			jsonObj.cartItems.items[a].itemCurrency = 					testRunner.testCase.getPropertyValue( "itemCurrency" );
//			jsonObj.cartItems.items[a].name = 								testRunner.testCase.getPropertyValue( "name" );
//			jsonObj.cartItems.items[a].quantity.measure = 				testRunner.testCase.getPropertyValue( "quantity.measure" );
//			jsonObj.cartItems.items[a].quantity.value = 					testRunner.testCase.getPropertyValue( "quantity.value" );
//			jsonObj.cartItems.items[a].agentInterest.interestValue =	testRunner.testCase.getPropertyValue( "interestValue" );
//			jsonObj.cartItems.items[a].agentInterest.interestType =	testRunner.testCase.getPropertyValue( "interestType" );
//			jsonObj.cartItems.items[a].discount.discountType = 		testRunner.testCase.getPropertyValue( "discountType" );
//			jsonObj.cartItems.items[a].discount.discountValue = 		testRunner.testCase.getPropertyValue( "discountValue" );
//			jsonObj.cartItems.items[a].itemCode = 						testRunner.testCase.getPropertyValue( "itemCode" );
//
//
//			
//			jsonObj.loyalties.loyalties[a].bonusAmountForDebit = 		Long.valueOf(testRunner.testCase.getPropertyValue( "bonusAmountForDebit") );
//			jsonObj.loyalties.loyalties[a].positionId = 					   	testRunner.testCase.getPropertyValue( "loyalties.positionId" );
//			jsonObj.loyalties.loyalties[a].bonusAmountForCredit = 	Long.valueOf(testRunner.testCase.getPropertyValue( "bonusAmountForCredit"));
//			jsonObj.loyalties.loyalties[a].loyalityProgramName = 		testRunner.testCase.getPropertyValue( "loyalityProgramName" );

// }			
 
//jsonObj.cartItems.add(items[1])

String newJson = new JsonBuilder(jsonObj);
log.info newJson;
//log.info jsonObj.customerDetails.email;
//log.info jsonObj.customerDetails.deliveryInfo.country;
testRunner.testCase.setPropertyValue( "orderBundle",  newJson);
log.info newJson;</script></con:config></con:testStep><con:testStep type="groovy" name="generateOrderNumberScript" id="adf8b15c-eed4-4acd-b48c-a465de3715c2"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
//import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

long curTime = System.currentTimeMillis();

String curStringDate = new SimpleDateFormat("yyyyMMddhhmmss").format(curTime);

curTime2 = curTime.toString();

def s4 =  curTime2.substring(curTime2.length() -3,curTime2.length());

curStringDate= curStringDate+s4;
def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
//-----------------------------------------------------------------------------------------------
dublicate =testRunner.testCase.getPropertyValue("dublicateOrderId");
log.info dublicate;
curr =testRunner.testCase.getPropertyValue("unknown currency");
//log.info curr;
isDefault =testRunner.testCase.getPropertyValue("isDefault");
//log.info isDefault;
valueError =testRunner.testCase.getPropertyValue("value error");
//log.info valueError;
systemError =testRunner.testCase.getPropertyValue("systemError");
//log.info systemError;
//-----------------------------------------------------------------------------------------------
if (dublicate=="false"){
propertiesRegister.setPropertyValue( "OrderNumber", curStringDate);
log.info curStringDate;
}
else if (dublicate=="true") {
propertiesRegister.setPropertyValue( "OrderNumber", "123456");
log.info dublicate;	
	}
//-----------------------------------------------------------------------------------------------
else if (curr=="false"){
propertiesRegister.setPropertyValue( "currency", "643");

}
else if(curr=="true") {
propertiesRegister.setPropertyValue( "currency", "123456");
log.info curr +"asasa";	
	}
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="0be6ff2a-8750-47dd-acf2-6b4231845278"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>tt</con:value></con:property><con:property><con:name>pwd</con:name><con:value>123456</con:value></con:property><con:property><con:name>OrderNumber</con:name><con:value>20140324101311919</con:value></con:property><con:property><con:name>data</con:name><con:value>{"formUrl":"https://3dsec.sberbank.ru/testpayment/merchants/test/payment_ru.html?mdOrder=8a0238f8-98af-4e73-b28e-b38c40dbdb37","orderId":"8a0238f8-98af-4e73-b28e-b38c40dbdb37"}</con:value></con:property><con:property><con:name>orderId</con:name><con:value>8a0238f8-98af-4e73-b28e-b38c40dbdb37</con:value></con:property><con:property><con:name>EP</con:name><con:value/></con:property><con:property><con:name>jsonParams</con:name><con:value/></con:property><con:property><con:name>orderBundle</con:name><con:value/></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>errorCode</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="jsonBuilder" disabled="true" id="31c4483e-c9e9-492e-88fa-c340efa1597b"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
def data			= propertiesRegister.getPropertyValue( "orderBundle" );

 def builder = new JsonBuilder();

def jsonObj = new JsonSlurper().parseText(data);
log.info jsonObj.customerDetails;
log.info jsonObj.loyalties.loyalties;
log.info jsonObj.cartItems.items;

/*
def String newJson2 = new JsonBuilder(jsonObj);
log.info newJson2;
/*propertiesRegister.setPropertyValue( "data2", newJson2);
*/</script></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer" id="f1820cc8-60aa-4927-be22-0359446ca858"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderNumber</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>jsonParams</con:name><con:sourceType>jsonParams</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>jsonParams</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>orderBundle</con:name><con:sourceType>orderBundle</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>orderBundle</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>endPointo</con:name><con:sourceType>EndPoint</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>pageView</con:name><con:sourceType>pageView</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>pageView</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>curr</con:name><con:sourceType>currency</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>currency</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>amount</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="registerOrder" id="97930f2c-e2db-4d75-b172-487499a831c3"><con:settings/><con:config service="AlfaRestApi" resourcePath="/register.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="registerOrder" mediaType="application/x-www-form-urlencoded" id="8d13b106-6ceb-43d1-8c98-922783a31503" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://3dsec.sberbank.ru/testpayment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="orderBundle" value="{&quot;loyalties&quot;:{&quot;loyalties&quot;:[{&quot;bonusAmountForDebit&quot;:2000,&quot;positionId&quot;:&quot;1&quot;,&quot;bonusAmountForCredit&quot;:0,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;}]},&quot;cartItems&quot;:{&quot;items&quot;:[{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;1&quot;,&quot;itemAmount&quot;:20000,&quot;name&quot;:&quot;boombox audio&quot;,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;},&quot;itemCode&quot;:&quot;46234587230001&quot;}]},&quot;customerDetails&quot;:{&quot;phone&quot;:9032177751,&quot;deliveryInfo&quot;:{&quot;deliveryType&quot;:&quot;Courier&quot;,&quot;postAddress&quot;:&quot;someStreet&quot;,&quot;city&quot;:&quot;Moscow&quot;,&quot;country&quot;:&quot;RU&quot;},&quot;email&quot;:&quot;bloyh@mail.ru&quot;,&quot;contact&quot;:&quot;Natalie Bianko&quot;},&quot;orderCreationDate&quot;:&quot;2013-07-12T13:51:00&quot;}"/>
  <con:entry key="amount" value="20000"/>
  <con:entry key="jsonParams" value=""/>
  <con:entry key="orderNumber" value="20140324101311919"/>
  <con:entry key="userName" value="tt"/>
  <con:entry key="password" value="123456"/>
  <con:entry key="currency" value="643"/>
</con:parameters><con:parameterOrder><con:entry>amount</con:entry><con:entry>currency</con:entry><con:entry>language</con:entry><con:entry>orderNumber</con:entry><con:entry>password</con:entry><con:entry>returnUrl</con:entry><con:entry>userName</con:entry><con:entry>jsonParams</con:entry><con:entry>orderBundle</con:entry><con:entry>pageView</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="24972946-fc91-4f21-b081-b8b2dd65f84b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>data</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>registerOrder</con:sourceStep><con:targetType>data</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="parseData" id="37e7b4c0-f823-4dff-ad71-05e09aa45f07"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import groovy.json.JsonSlurper;

def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "Properties");

def registerString			= propertiesRegisterTransfer.getPropertyValue( "data" );
log.info registerString	;
def jsonObj = new JsonSlurper().parseText( registerString);
def String orderId = jsonObj.orderId;
def String errorCode = jsonObj.errorCode;
def String errorMessage = jsonObj.errorMessage;
log.info errorCode;

propertiesRegisterTransfer.setPropertyValue( "orderId", orderId);
propertiesRegisterTransfer.setPropertyValue( "errorCode", errorCode);
propertiesRegisterTransfer.setPropertyValue( "errorCode", errorCode);
testRunner.testCase.setPropertyValue( "errorMessage",  errorMessage);
testRunner.testCase.setPropertyValue( "errorCode",  errorCode);</script></con:config></con:testStep><con:testStep type="transfer" name="orderParamsTransfer" id="28f537d1-b85a-42e8-89dd-d1c6d47267ee"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>ordernum</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>errorCode</con:name><con:sourceType>errorCode</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>errorCode</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>tt</con:value></con:property><con:property><con:name>pwd</con:name><con:value>123456</con:value></con:property><con:property><con:name>orderId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8a0238f8-98af-4e73-b28e-b38c40dbdb37</con:value></con:property><con:property><con:name>returnUrl</con:name><con:value/></con:property><con:property><con:name>amount</con:name><con:value>20000</con:value></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>language</con:name><con:value>ru</con:value></con:property><con:property><con:name>EndPoint</con:name><con:value>https://3dsec.sberbank.ru/testpayment/rest/</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140324101311919</con:value></con:property><con:property><con:name>jsonParams</con:name><con:value/></con:property><con:property><con:name>orderBundleBone</con:name><con:value>{ "orderCreationDate":"2013-07-12T13:51:00", "customerDetails":{ 	"email":"bloyh@mail.ru", 	"phone":"79032177751", 	"contact":"NatalieBianko", 	"deliveryInfo":{ 		"deliveryType":"courier", 		"country":"RU", 		"city":"Moscow", 		"postAddress":"ЗемлянойВал50Астр.2" 	} }, "cartItems":{ 	"items":[ 	{ 		"positionId":"1", 		"name":"carrotsbox", 		"itemDetails":{  		}, 		"quantity":{ 		"value":15, 		"measure":"kg" 		}, 		"itemAmount":"20000", 		"itemCurrency":"643", 		"itemCode":"123", 		"discount":{ 		"discountType":"percent", 		"discountValue":"5" 		}, 		"agentInterest":{ 		"interestType":"3", 		"interestValue":"2" 		} 	} 	] }, "loyalties":{ 	"loyalties":[ 	{ 		"bonusAmountForDebit":2000, 		"bonusAmountForCredit":0, 		"loyaltyProgramName":"sbrf_spasibo", 		"positionId":"1" 	} 	] 	} }</con:value></con:property><con:property><con:name>pageView</con:name><con:value/></con:property><con:property><con:name>dublicateOrderId</con:name><con:value>false</con:value></con:property><con:property><con:name>unknown currency</con:name><con:value>false</con:value></con:property><con:property><con:name>isDefault</con:name><con:value>false</con:value></con:property><con:property><con:name>value error</con:name><con:value>false</con:value></con:property><con:property><con:name>systemError</con:name><con:value>false</con:value></con:property><con:property><con:name>email</con:name><con:value>bloyh@mail.ru</con:value></con:property><con:property><con:name>phone</con:name><con:value>9032177751</con:value></con:property><con:property><con:name>contact</con:name><con:value>Natalie Bianko</con:value></con:property><con:property><con:name>deliveryType</con:name><con:value>Courier</con:value></con:property><con:property><con:name>postAddress</con:name><con:value>someStreet</con:value></con:property><con:property><con:name>city</con:name><con:value>Moscow</con:value></con:property><con:property><con:name>country</con:name><con:value>RU</con:value></con:property><con:property><con:name>itemDetails</con:name><con:value>null</con:value></con:property><con:property><con:name>positionId</con:name><con:value>1</con:value></con:property><con:property><con:name>itemAmount</con:name><con:value>20000</con:value></con:property><con:property><con:name>itemCurrency</con:name><con:value>643</con:value></con:property><con:property><con:name>name</con:name><con:value>boombox audio</con:value></con:property><con:property><con:name>quantity.measure</con:name><con:value>pic</con:value></con:property><con:property><con:name>quantity.value</con:name><con:value>10</con:value></con:property><con:property><con:name>interestValue</con:name><con:value>50</con:value></con:property><con:property><con:name>interestType</con:name><con:value>vip</con:value></con:property><con:property><con:name>discountType</con:name><con:value>sale</con:value></con:property><con:property><con:name>discountValue</con:name><con:value>10</con:value></con:property><con:property><con:name>itemCode</con:name><con:value>46234587230001</con:value></con:property><con:property><con:name>bonusAmountForDebit</con:name><con:value>2000</con:value></con:property><con:property><con:name>bonusAmountForCredit</con:name><con:value>0</con:value></con:property><con:property><con:name>loyalties.positionId</con:name><con:value>1</con:value></con:property><con:property><con:name>loyalityProgramName</con:name><con:value>sbrf_spasibo</con:value></con:property><con:property><con:name>positions</con:name><con:value>0</con:value></con:property><con:property><con:name>orderBundle</con:name><con:value>{"loyalties":{"loyalties":[{"bonusAmountForDebit":2000,"positionId":"1","bonusAmountForCredit":0,"loyaltyProgramName":"sbrf_spasibo"}]},"cartItems":{"items":[{"itemCurrency":"643","positionId":"1","itemAmount":20000,"name":"boombox audio","quantity":{"measure":"pic","value":"10"},"agentInterest":{"interestValue":"50","interestType":"vip"},"itemDetails":{},"discount":{"discountType":"sale","discountValue":"10"},"itemCode":"46234587230001"}]},"customerDetails":{"phone":9032177751,"deliveryInfo":{"deliveryType":"Courier","postAddress":"someStreet","city":"Moscow","country":"RU"},"email":"bloyh@mail.ru","contact":"Natalie Bianko"},"orderCreationDate":"2013-07-12T13:51:00"}</con:value></con:property><con:property><con:name>errorMessage</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="registerPreOrderBundle" searchProperties="true" disabled="true" id="c2bf4d14-849b-41fa-aaaa-c1d883928697"><con:settings/><con:testStep type="transfer" name="propTransfer" id="5c412dcf-c338-4c9e-b767-942970bcb7d9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>username</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>pwd</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>Endpoint</con:name><con:sourceType>EndPoint</con:sourceType><con:sourceStep>#Project#</con:sourceStep><con:targetType>EndPoint</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" useXQuery="false"><con:name>jsonParams</con:name><con:sourceType>jsonParams</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>jsonParams</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="hellScript" id="13d11679-3981-4b0a-83bd-8de03f05c0ec"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import groovy.json.JsonSlurper;
import groovy.json.JsonBuilder;

def registerString = testRunner.testCase.getPropertyValue("orderBundleBone");
//def positions = testRunner.testCase.getPropertyValue("positions");

int positions =  Integer.valueOf(testRunner.testCase.getPropertyValue( "positions"));
//log.info positions;
int amount =  Integer.valueOf(testRunner.testCase.getPropertyValue( "itemAmount"));
log.info amount;

if (positions != 0){
amount = amount*(positions+1);
log.info amount;
String amountSum = amount as String;
testRunner.testCase.setPropertyValue( "amount",  amountSum);
}


def jsonObj = new JsonSlurper().parseText( registerString);
int a=0;



jsonObj.customerDetails.email = 								testRunner.testCase.getPropertyValue( "email" ); 
jsonObj.customerDetails.phone = 								Long.valueOf(testRunner.testCase.getPropertyValue( "phone"));
jsonObj.customerDetails.contact = 							testRunner.testCase.getPropertyValue( "contact");
jsonObj.customerDetails.deliveryInfo.deliveryType = 		testRunner.testCase.getPropertyValue( "deliveryType");
jsonObj.customerDetails.deliveryInfo.postAddress = 		testRunner.testCase.getPropertyValue( "postAddress");
jsonObj.customerDetails.deliveryInfo.city = 					testRunner.testCase.getPropertyValue( "city" );
jsonObj.customerDetails.deliveryInfo.country = 			testRunner.testCase.getPropertyValue( "country" );


//jsonObj.cartItems.items[a].itemDetails = 						testRunner.testCase.getPropertyValue( "itemDetails" );
jsonObj.cartItems.items[a].itemAmount =						Long.valueOf(testRunner.testCase.getPropertyValue( "itemAmount"));
jsonObj.cartItems.items[a].itemCurrency = 					testRunner.testCase.getPropertyValue( "itemCurrency" );
jsonObj.cartItems.items[a].name = 								testRunner.testCase.getPropertyValue( "name" );
jsonObj.cartItems.items[a].quantity.measure = 				testRunner.testCase.getPropertyValue( "quantity.measure" );
jsonObj.cartItems.items[a].quantity.value = 					testRunner.testCase.getPropertyValue( "quantity.value" );
jsonObj.cartItems.items[a].agentInterest.interestValue =	testRunner.testCase.getPropertyValue( "interestValue" );
jsonObj.cartItems.items[a].agentInterest.interestType =	testRunner.testCase.getPropertyValue( "interestType" );
jsonObj.cartItems.items[a].discount.discountType = 		testRunner.testCase.getPropertyValue( "discountType" );
jsonObj.cartItems.items[a].discount.discountValue = 		testRunner.testCase.getPropertyValue( "discountValue" );
jsonObj.cartItems.items[a].itemCode = 						testRunner.testCase.getPropertyValue( "itemCode" );


			
jsonObj.loyalties.loyalties[a].bonusAmountForDebit = 		Long.valueOf(testRunner.testCase.getPropertyValue( "bonusAmountForDebit") );
jsonObj.loyalties.loyalties[a].bonusAmountForCredit = 	Long.valueOf(testRunner.testCase.getPropertyValue( "bonusAmountForCredit"));
jsonObj.loyalties.loyalties[a].loyaltyProgramName = 		testRunner.testCase.getPropertyValue( "loyalityProgramName" );



item = jsonObj.cartItems.items[0];
loyalities= jsonObj.loyalties.loyalties[0]

def pos = Integer.valueOf( item.positionId);
def cloneItem = null
while (a&lt;positions){
	a++
	pos++
	cloneItems = item.clone()
	cloneLoyalities=loyalities.clone()
	cloneItems.positionId = pos
	cloneLoyalities.positionId = pos
	jsonObj.cartItems.items.add(cloneItems)
	jsonObj.loyalties.loyalties.add(cloneLoyalities)
	log.info pos;
}

//log.info jsonObj.cartItems.items.positionId
//log.info jsonObj.loyalties.loyalties.positionId


//testRunner.testCase.setPropertyValue( "amount", 1);
//	jsonObj.cartItems.items[a].itemDetails = 						testRunner.testCase.getPropertyValue( "itemDetails" );
//			jsonObj.cartItems.items[a].positionId = 		a+1;			//testRunner.testCase.getPropertyValue( "positionId");
//			jsonObj.cartItems.items[a].itemAmount =						Long.valueOf(testRunner.testCase.getPropertyValue( "itemAmount"));
//			jsonObj.cartItems.items[a].itemCurrency = 					testRunner.testCase.getPropertyValue( "itemCurrency" );
//			jsonObj.cartItems.items[a].name = 								testRunner.testCase.getPropertyValue( "name" );
//			jsonObj.cartItems.items[a].quantity.measure = 				testRunner.testCase.getPropertyValue( "quantity.measure" );
//			jsonObj.cartItems.items[a].quantity.value = 					testRunner.testCase.getPropertyValue( "quantity.value" );
//			jsonObj.cartItems.items[a].agentInterest.interestValue =	testRunner.testCase.getPropertyValue( "interestValue" );
//			jsonObj.cartItems.items[a].agentInterest.interestType =	testRunner.testCase.getPropertyValue( "interestType" );
//			jsonObj.cartItems.items[a].discount.discountType = 		testRunner.testCase.getPropertyValue( "discountType" );
//			jsonObj.cartItems.items[a].discount.discountValue = 		testRunner.testCase.getPropertyValue( "discountValue" );
//			jsonObj.cartItems.items[a].itemCode = 						testRunner.testCase.getPropertyValue( "itemCode" );
//
//
//			
//			jsonObj.loyalties.loyalties[a].bonusAmountForDebit = 		Long.valueOf(testRunner.testCase.getPropertyValue( "bonusAmountForDebit") );
//			jsonObj.loyalties.loyalties[a].positionId = 					   	testRunner.testCase.getPropertyValue( "loyalties.positionId" );
//			jsonObj.loyalties.loyalties[a].bonusAmountForCredit = 	Long.valueOf(testRunner.testCase.getPropertyValue( "bonusAmountForCredit"));
//			jsonObj.loyalties.loyalties[a].loyalityProgramName = 		testRunner.testCase.getPropertyValue( "loyalityProgramName" );

// }			
 
//jsonObj.cartItems.add(items[1])

String newJson = new JsonBuilder(jsonObj);
log.info newJson;
//log.info jsonObj.customerDetails.email;
//log.info jsonObj.customerDetails.deliveryInfo.country;
testRunner.testCase.setPropertyValue( "orderBundle",  newJson);
log.info newJson;</script></con:config></con:testStep><con:testStep type="groovy" name="generateOrderNumberScript" id="a7aa565d-3638-4613-a058-8551c6af6d4d"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
//import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

long curTime = System.currentTimeMillis();

String curStringDate = new SimpleDateFormat("yyyyMMddhhmmss").format(curTime);

curTime2 = curTime.toString();

def s4 =  curTime2.substring(curTime2.length() -3,curTime2.length());

curStringDate= curStringDate+s4;
def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
//-----------------------------------------------------------------------------------------------
dublicate =testRunner.testCase.getPropertyValue("dublicateOrderId");
log.info dublicate;
curr =testRunner.testCase.getPropertyValue("unknown currency");
//log.info curr;
isDefault =testRunner.testCase.getPropertyValue("isDefault");
//log.info isDefault;
valueError =testRunner.testCase.getPropertyValue("value error");
//log.info valueError;
systemError =testRunner.testCase.getPropertyValue("systemError");
//log.info systemError;
//-----------------------------------------------------------------------------------------------
if (dublicate=="false"){
propertiesRegister.setPropertyValue( "OrderNumber", curStringDate);
log.info curStringDate;
}
else if (dublicate=="true") {
propertiesRegister.setPropertyValue( "OrderNumber", "123456");
log.info dublicate;	
	}
//-----------------------------------------------------------------------------------------------
else if (curr=="false"){
propertiesRegister.setPropertyValue( "currency", "643");

}
else if(curr=="true") {
propertiesRegister.setPropertyValue( "currency", "123456");
log.info curr +"asasa";	
	}
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------
</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="e92b576e-e66d-48c6-8ca2-ff872f98b31d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>OrderNumber</con:name><con:value>20140127060720431</con:value></con:property><con:property><con:name>data</con:name><con:value>{"formUrl":"https://3dsec.sberbank.ru/payment/merchants/rubtsova/payment_ru.html?mdOrder=b7a692f7-d113-46db-9729-020f938953e5","orderId":"b7a692f7-d113-46db-9729-020f938953e5"}</con:value></con:property><con:property><con:name>orderId</con:name><con:value>b7a692f7-d113-46db-9729-020f938953e5</con:value></con:property><con:property><con:name>EP</con:name><con:value/></con:property><con:property><con:name>jsonParams</con:name><con:value/></con:property><con:property><con:name>orderBundle</con:name><con:value/></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>errorCode</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="jsonBuilder" disabled="true" id="4bc624ac-d1a1-4640-9986-ee826b03b88f"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
def data			= propertiesRegister.getPropertyValue( "orderBundle" );

 def builder = new JsonBuilder();

def jsonObj = new JsonSlurper().parseText(data);
log.info jsonObj.customerDetails;
log.info jsonObj.loyalties.loyalties;
log.info jsonObj.cartItems.items;

/*
def String newJson2 = new JsonBuilder(jsonObj);
log.info newJson2;
/*propertiesRegister.setPropertyValue( "data2", newJson2);
*/</script></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer" id="36000973-528b-44d8-a473-c625e06cdad1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>userName</con:targetType><con:targetStep>registerPreOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>registerPreOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderNumber</con:targetType><con:targetStep>registerPreOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>jsonParams</con:name><con:sourceType>jsonParams</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>jsonParams</con:targetType><con:targetStep>registerPreOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false"><con:name>orderBundle</con:name><con:sourceType>orderBundle</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>orderBundle</con:targetType><con:targetStep>registerPreOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>endPointo</con:name><con:sourceType>EndPoint</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>registerPreOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>curr</con:name><con:sourceType>currency</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>currency</con:targetType><con:targetStep>registerPreOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>amount</con:name><con:sourceType>amount</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>amount</con:targetType><con:targetStep>registerPreOrder</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="registerPreOrder" id="b7731b40-0b69-49bb-a9b5-9e5a45b28229"><con:settings/><con:config service="AlfaRestApi" resourcePath="/registerPreAuth.do" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="registerPreOrder" mediaType="application/x-www-form-urlencoded" id="8d13b106-6ceb-43d1-8c98-922783a31503" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://3dsec.sberbank.ru/payment/rest/</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="amount" value="20000"/>
  <con:entry key="orderBundle" value="{&quot;loyalties&quot;:{&quot;loyalties&quot;:[{&quot;bonusAmountForDebit&quot;:2000,&quot;positionId&quot;:&quot;1&quot;,&quot;bonusAmountForCredit&quot;:0,&quot;loyaltyProgramName&quot;:&quot;sbrf_spasibo&quot;}]},&quot;cartItems&quot;:{&quot;items&quot;:[{&quot;itemCurrency&quot;:&quot;643&quot;,&quot;positionId&quot;:&quot;1&quot;,&quot;itemAmount&quot;:20000,&quot;name&quot;:&quot;boombox audio&quot;,&quot;quantity&quot;:{&quot;measure&quot;:&quot;pic&quot;,&quot;value&quot;:&quot;10&quot;},&quot;agentInterest&quot;:{&quot;interestValue&quot;:&quot;50&quot;,&quot;interestType&quot;:&quot;vip&quot;},&quot;itemDetails&quot;:{},&quot;discount&quot;:{&quot;discountType&quot;:&quot;sale&quot;,&quot;discountValue&quot;:&quot;10&quot;},&quot;itemCode&quot;:&quot;46234587230001&quot;}]},&quot;customerDetails&quot;:{&quot;phone&quot;:9032177751,&quot;deliveryInfo&quot;:{&quot;deliveryType&quot;:&quot;Courier&quot;,&quot;postAddress&quot;:&quot;someStreet&quot;,&quot;city&quot;:&quot;Moscow&quot;,&quot;country&quot;:&quot;RU&quot;},&quot;email&quot;:&quot;bloyh@mail.ru&quot;,&quot;contact&quot;:&quot;Natalie Bianko&quot;},&quot;orderCreationDate&quot;:&quot;2013-07-12T13:51:00&quot;}"/>
  <con:entry key="orderNumber" value="20140127060720431"/>
  <con:entry key="userName" value="rubtsova"/>
  <con:entry key="password" value="testPwd"/>
  <con:entry key="currency" value="643"/>
</con:parameters><con:parameterOrder><con:entry>amount</con:entry><con:entry>currency</con:entry><con:entry>language</con:entry><con:entry>orderNumber</con:entry><con:entry>password</con:entry><con:entry>returnUrl</con:entry><con:entry>userName</con:entry><con:entry>jsonParams</con:entry><con:entry>orderBundle</con:entry><con:entry>pageView</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="3b8900cc-7b92-48e8-9983-091d3c3cb65a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>data</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>registerPreOrder</con:sourceStep><con:targetType>data</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="parseData" id="c56d2a59-7dbf-4211-8eb7-03f3a42a8303"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import groovy.json.JsonSlurper;

def propertiesRegisterTransfer = testRunner.testCase.getTestStepByName( "Properties");

def registerString			= propertiesRegisterTransfer.getPropertyValue( "data" );
log.info registerString	;
def jsonObj = new JsonSlurper().parseText( registerString);
def String orderId = jsonObj.orderId;
def String errorCode = jsonObj.errorCode;
def String errorMessage = jsonObj.errorMessage;
log.info errorCode;

propertiesRegisterTransfer.setPropertyValue( "orderId", orderId);
propertiesRegisterTransfer.setPropertyValue( "errorCode", errorCode);
propertiesRegisterTransfer.setPropertyValue( "errorCode", errorCode);
testRunner.testCase.setPropertyValue( "errorMessage",  errorMessage);
testRunner.testCase.setPropertyValue( "errorCode",  errorCode);</script></con:config></con:testStep><con:testStep type="transfer" name="orderParamsTransfer" id="ba06579b-d4fc-4c08-9a1f-1b62aa3599e6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>ordernum</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>orderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>errorCode</con:name><con:sourceType>errorCode</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>errorCode</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>orderId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">b7a692f7-d113-46db-9729-020f938953e5</con:value></con:property><con:property><con:name>returnUrl</con:name><con:value/></con:property><con:property><con:name>amount</con:name><con:value>20000</con:value></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>language</con:name><con:value>ru</con:value></con:property><con:property><con:name>EndPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/rest/</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140127060720431</con:value></con:property><con:property><con:name>jsonParams</con:name><con:value/></con:property><con:property><con:name>orderBundleBone</con:name><con:value>{ "orderCreationDate":"2013-07-12T13:51:00", "customerDetails":{ 	"email":"bloyh@mail.ru", 	"phone":"79032177751", 	"contact":"NatalieBianko", 	"deliveryInfo":{ 		"deliveryType":"courier", 		"country":"RU", 		"city":"Moscow", 		"postAddress":"ЗемлянойВал50Астр.2" 	} }, "cartItems":{ 	"items":[ 	{ 		"positionId":"1", 		"name":"carrotsbox", 		"itemDetails":{  		}, 		"quantity":{ 		"value":15, 		"measure":"kg" 		}, 		"itemAmount":"20000", 		"itemCurrency":"643", 		"itemCode":"123", 		"discount":{ 		"discountType":"percent", 		"discountValue":"5" 		}, 		"agentInterest":{ 		"interestType":"3", 		"interestValue":"2" 		} 	} 	] }, "loyalties":{ 	"loyalties":[ 	{ 		"bonusAmountForDebit":2000, 		"bonusAmountForCredit":0, 		"loyaltyProgramName":"sbrf_spasibo", 		"positionId":"1" 	} 	] 	} }</con:value></con:property><con:property><con:name>pageView</con:name><con:value/></con:property><con:property><con:name>dublicateOrderId</con:name><con:value>false</con:value></con:property><con:property><con:name>unknown currency</con:name><con:value>false</con:value></con:property><con:property><con:name>isDefault</con:name><con:value>false</con:value></con:property><con:property><con:name>value error</con:name><con:value>false</con:value></con:property><con:property><con:name>systemError</con:name><con:value>false</con:value></con:property><con:property><con:name>email</con:name><con:value>bloyh@mail.ru</con:value></con:property><con:property><con:name>phone</con:name><con:value>9032177751</con:value></con:property><con:property><con:name>contact</con:name><con:value>Natalie Bianko</con:value></con:property><con:property><con:name>deliveryType</con:name><con:value>Courier</con:value></con:property><con:property><con:name>postAddress</con:name><con:value>someStreet</con:value></con:property><con:property><con:name>city</con:name><con:value>Moscow</con:value></con:property><con:property><con:name>country</con:name><con:value>RU</con:value></con:property><con:property><con:name>itemDetails</con:name><con:value>null</con:value></con:property><con:property><con:name>positionId</con:name><con:value>1</con:value></con:property><con:property><con:name>itemAmount</con:name><con:value>20000</con:value></con:property><con:property><con:name>itemCurrency</con:name><con:value>643</con:value></con:property><con:property><con:name>name</con:name><con:value>boombox audio</con:value></con:property><con:property><con:name>quantity.measure</con:name><con:value>pic</con:value></con:property><con:property><con:name>quantity.value</con:name><con:value>10</con:value></con:property><con:property><con:name>interestValue</con:name><con:value>50</con:value></con:property><con:property><con:name>interestType</con:name><con:value>vip</con:value></con:property><con:property><con:name>discountType</con:name><con:value>sale</con:value></con:property><con:property><con:name>discountValue</con:name><con:value>10</con:value></con:property><con:property><con:name>itemCode</con:name><con:value>46234587230001</con:value></con:property><con:property><con:name>bonusAmountForDebit</con:name><con:value>2000</con:value></con:property><con:property><con:name>bonusAmountForCredit</con:name><con:value>0</con:value></con:property><con:property><con:name>loyalties.positionId</con:name><con:value>1</con:value></con:property><con:property><con:name>loyalityProgramName</con:name><con:value>sbrf_spasibo</con:value></con:property><con:property><con:name>positions</con:name><con:value>0</con:value></con:property><con:property><con:name>orderBundle</con:name><con:value>{"loyalties":{"loyalties":[{"bonusAmountForDebit":2000,"positionId":"1","bonusAmountForCredit":0,"loyaltyProgramName":"sbrf_spasibo"}]},"cartItems":{"items":[{"itemCurrency":"643","positionId":"1","itemAmount":20000,"name":"boombox audio","quantity":{"measure":"pic","value":"10"},"agentInterest":{"interestValue":"50","interestType":"vip"},"itemDetails":{},"discount":{"discountType":"sale","discountValue":"10"},"itemCode":"46234587230001"}]},"customerDetails":{"phone":9032177751,"deliveryInfo":{"deliveryType":"Courier","postAddress":"someStreet","city":"Moscow","country":"RU"},"email":"bloyh@mail.ru","contact":"Natalie Bianko"},"orderCreationDate":"2013-07-12T13:51:00"}</con:value></con:property><con:property><con:name>errorMessage</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="WS_test-cases" id="5016395b-05e5-48a8-ad71-b90ce426861a"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="register" searchProperties="true" id="eaef6b86-4ab5-4d44-8a7c-91776c3a206e" disabled="true"><con:settings/><con:testStep type="groovy" name="createOrderNumberScript" id="b31a341c-6744-4ae0-9a14-3b4313b257dc"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
//import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

long curTime = System.currentTimeMillis();

String curStringDate = new SimpleDateFormat("yyyyMMddhhmmss").format(curTime);

curTime2 = curTime.toString();

def s4 =  curTime2.substring(curTime2.length() -3,curTime2.length());

curStringDate= curStringDate+s4;
def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
propertiesRegister.setPropertyValue( "OrderNumber", curStringDate);</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="4cc24232-75a3-4cdf-8468-a682b3d8dd77"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>OrderNumber</con:name><con:value>20140121105426488</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer" id="ff0b172b-944d-4680-8a39-c51941aafc26"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>endPoint</con:name><con:sourceType>endPoint</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath>//@ merchantOrderNumber</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="registerOrder" id="574eb043-9312-4fe0-8174-de831f8bddfe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>registerOrder</con:operation><con:request name="registerOrder" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:registerOrder>
         <order merchantOrderNumber="201401211052323426488" description="testCart singlestep" amount="16000" currency="643" language="ru" pageView="d" sessionTimeoutSecs="300">
            <returnUrl>ya.ru</returnUrl>

      <params name="sbrf_spasibo:amount_bonus" value="16000"/>
            <clientId>123456</clientId>
            <orderBundle>
               <orderCreationDate>2013-07-12T13:51:00</orderCreationDate>
               <customerDetails>
                  <email>johnsmith@mail.ru</email>
                  <phone>89851231234</phone>
                  <contact>Mega Tester</contact>
                  <deliveryInfo>
                     <deliveryType>courier</deliveryType>
                     <country>RU</country>
                     <city>Moscow</city>
                     <postAddress>Земляной Вал 50А стр.2</postAddress>
                  </deliveryInfo>
               </customerDetails>
               <cartItems>

                  <items positionId="1">
                     <name>Metzeler Enduro 3 Sahara</name>
                     <itemDetails>
                        <itemDetailsParams name="brand">Metzeler</itemDetailsParams>
                        <itemDetailsParams name="radius">17inch</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="штук">2</quantity>
                     <itemAmount>5000</itemAmount>
                     <itemCurrency/>
                     <itemCode>T-M-14</itemCode>
                     <discount>
                     	<discountType>discount</discountType>
                     	<discountValue>777</discountValue>
                     </discount>
                  </items>
                  
                  <items positionId="2">
                     <name>Universal Mirror Enduro</name>
                     <itemDetails>
                        <itemDetailsParams name="brand">Noname</itemDetailsParams>
                        <itemDetailsParams name="diameter">12mm</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="штук">1</quantity>
                     <itemAmount>5000</itemAmount>
                     <itemCurrency/>
                     <itemCode>NM-15</itemCode>
                  </items>
                  
                  <items positionId="3">
                     <name>Warm Grips</name>
                     <itemDetails>
                        <itemDetailsParams name="brand">Noname</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="штук">1</quantity>
                     <itemAmount>6000</itemAmount>
                     <itemCurrency/>
                     <itemCode>G-16</itemCode>
                  </items>
               </cartItems>

               <loyalties>
                  <loyalties loyaltyProgramName="sbrf_spasibo" positionId="1">
                     <bonusAmountForDebit>5000</bonusAmountForDebit>
                  </loyalties>
                  <loyalties loyaltyProgramName="sbrf_spasibo" positionId="2">
                     <bonusAmountForDebit>5000</bonusAmountForDebit>
                  </loyalties>
                  <loyalties loyaltyProgramName="sbrf_spasibo" positionId="3">
                     <bonusAmountForDebit>6000</bonusAmountForDebit>
                  </loyalties>
               </loyalties>
               
            </orderBundle>
         </order>
      </mer:registerOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="471182f6-6df9-4044-88c2-18139e37ff03"/><con:credentials><con:username>rubtsova</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="mdTransfer" id="5dc949e6-b648-4b7d-97f1-802423b463e3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>registerOrder</con:sourceStep><con:sourcePath>//@orderId</con:sourcePath><con:targetType>orderId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:sourcePath/><con:targetType>orderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>amount</con:name><con:value>1000</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>orderId</con:name><con:value>58142296-a0d6-4014-ad0c-e7ffc27c0835</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140121105426488</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="paymentOrder" searchProperties="true" disabled="true" id="b1fff363-7595-4749-b351-c98be60562a7"><con:settings/><con:testStep type="properties" name="Properties" id="13d8ed5e-868b-4325-8819-a87a38ac5848"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>paReq</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>redirect</con:name><con:value/></con:property><con:property><con:name>acsUrl</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>info</con:name><con:value/></con:property><con:property><con:name>errorCode</con:name><con:value>5</con:value></con:property><con:property><con:name>MD</con:name><con:value>89ff23b1-224e-4816-8f23-bbfbbb548494</con:value></con:property><con:property><con:name>position</con:name><con:value>1</con:value></con:property><con:property><con:name>name</con:name><con:value>Metzeler Enduro 3 Sahara</con:value></con:property><con:property><con:name>itemAmount</con:name><con:value>5000</con:value></con:property><con:property><con:name>itemCode</con:name><con:value>T-M-14</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer" id="2a7d2674-b60c-4308-8327-4edc204773f5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pan</con:name><con:sourceType>pan</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@pan</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>cvc</con:name><con:sourceType>cvc</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@cvc</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>cardHolderName</con:name><con:sourceType>cardholderName</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@cardholderName</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>ip</con:name><con:sourceType>ip</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@ip</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>email</con:name><con:sourceType>email</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@email</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>user</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>endpiont</con:name><con:sourceType>endpiont</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>month</con:name><con:sourceType>month</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@month</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>year</con:name><con:sourceType>year</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@year</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="paymentOrder" id="a589038b-c9f3-4de5-b4cf-cf62dfeba87f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>paymentOrder</con:operation><con:request name="paymentOrder" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:paymentOrder>
  <order orderId="0fbac1ae-a595-4a9f-b4b7-13e6e44628a4" year="2015" month="12" pan="4789789089321233" cvc="123" cardholderName="A Moriarty" language="" ip="192.168.0.1" email="bloyh@mail.ru">
            <!--Zero or more repetitions:-->
            
         </order>
      </mer:paymentOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d8282da0-10a0-4b42-924d-1c5478d0f588"/><con:assertion type="Schema Compliance" id="7251562c-759c-4a05-b6cd-531c02524e69"><con:configuration/></con:assertion><con:credentials><con:username>rubtsova</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer" id="ab39d7ae-e42c-409e-a8ab-343d459f8c02"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>paReq</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>paymentOrder</con:sourceStep><con:sourcePath>//@paReq</con:sourcePath><con:targetType>paReq</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>acsUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>paymentOrder</con:sourceStep><con:sourcePath>//@acsUrl</con:sourcePath><con:targetType>acsUrl</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>redirect</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>paymentOrder</con:sourceStep><con:sourcePath>//@redirect</con:sourcePath><con:targetType>redirect</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" transferChildNodes="false" entitize="false"><con:name>answer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>paymentOrder</con:sourceStep><con:sourcePath>//@info</con:sourcePath><con:targetType>info</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>errorCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>paymentOrder</con:sourceStep><con:sourcePath>//@errorCode</con:sourcePath><con:targetType>errorCode</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" transferChildNodes="false" ignoreEmpty="false"><con:name>MD</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType>MD</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>orderStatusRequest</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="splitScript" id="50a77b07-74b0-475e-bcaf-1ac4eb5c7a57"><con:settings/><con:config><script>

def properties = testRunner.testCase.getTestStepByName( "Properties");

def acsUrl	= properties.getPropertyValue( "acsUrl");

if(acsUrl == null)
testRunner.gotoStepByName( "orderTransfer")
else
testRunner.gotoStepByName("PaReqScript");
// do something else



</script></con:config></con:testStep><con:testStep type="groovy" name="PaReqScript" id="76125d1e-e303-4405-ae05-b62622b9c9f7"><con:settings/><con:config><script>import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import static org.hamcrest.CoreMatchers.*;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import java.util.*;
import java.text.*;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

//--------------------------------------------------
def Properties = testRunner.testCase.getTestStepByName( "Properties");
def paReq			= Properties.getPropertyValue( "PaReq" );
def termUrl			= Properties.getPropertyValue( "redirect" );
def acsUrlText			= Properties.getPropertyValue( "acsUrl" );
def mdOrder			= Properties.getPropertyValue( "MD" );


 WebDriver driver = new FirefoxDriver();
 driver.get("https://test.paymentgate.ru/testpayment/merchants/test/test_3dsec.html");

driver.findElement(By.id("acsUrlText")).clear();
driver.findElement(By.id("acsUrlText")).sendKeys(acsUrlText);
driver.findElement(By.id("termUrlText")).clear();
driver.findElement(By.id("termUrlText")).sendKeys(termUrl);
driver.findElement(By.id("mdText")).clear();
driver.findElement(By.id("mdText")).sendKeys(mdOrder);
driver.findElement(By.id("paReqText")).clear();
driver.findElement(By.id("paReqText")).sendKeys(paReq);

driver.findElement(By.id("redirectToAcs")).click();
Thread.sleep(1000);

WebElement pass = driver.findElement(By.id("password"));
pass.sendKeys("12345678");
driver.findElement(By.id("submit_id")).click();
 Properties.setPropertyValue( "PaReq",null );
driver.quit();

</script></con:config></con:testStep><con:testStep type="transfer" name="orderTransfer" id="c32b7a7e-fee2-487f-b40e-d69d15d5fa05"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>MD</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>orderStatusRequest</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="orderStatusRequest" id="d283e61e-92db-4ca2-b24f-4cac12a0304c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>getOrderStatus</con:operation><con:request name="orderStatusRequest" wssPasswordType="PasswordText" useWsAddressing="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="123" value="22" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:mer="http://engine.paymentgate.ru/webservices/merchant" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">

   <soapenv:Body>
      <mer:getOrderStatusExtended>
         <order language="ru" orderId="89ff23b1-224e-4816-8f23-bbfbbb548494"/>
      </mer:getOrderStatusExtended>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="44ad437d-4366-4cbd-b5a8-4366d722040e"/><con:credentials><con:username>rubtsova</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" addDefaultAction="false"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="completeTransfer" id="8fa3388d-7189-44b9-a0be-9c6658057174"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>acd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>orderStatusRequest</con:sourceStep><con:sourcePath>//@actionCodeDescription</con:sourcePath><con:targetType>description</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" entitize="false"><con:name>actionCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>orderStatusRequest</con:sourceStep><con:sourcePath>//@errorCode</con:sourcePath><con:targetType>errorCode</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false"><con:name>testFirstRow</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>orderStatusRequest</con:sourceStep><con:sourcePath>//items/@positionId</con:sourcePath><con:targetType>position</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>name</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>orderStatusRequest</con:sourceStep><con:sourcePath>//name</con:sourcePath><con:targetType>name</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>itemAmount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>orderStatusRequest</con:sourceStep><con:sourcePath>//itemAmount</con:sourcePath><con:targetType>itemAmount</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" ignoreEmpty="false" transferToAll="false" transferChildNodes="false" entitize="false"><con:name>itemCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>orderStatusRequest</con:sourceStep><con:sourcePath>//itemCode</con:sourcePath><con:targetType>itemCode</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>orderId</con:name><con:value>89ff23b1-224e-4816-8f23-bbfbbb548494</con:value></con:property><con:property><con:name>pan</con:name><con:value>4789789089321233</con:value></con:property><con:property><con:name>cvc</con:name><con:value>123</con:value></con:property><con:property><con:name>cardholderName</con:name><con:value>A Moriarty</con:value></con:property><con:property><con:name>ip</con:name><con:value>192.168.0.1</con:value></con:property><con:property><con:name>email</con:name><con:value>bloyh@mail.ru</con:value></con:property><con:property><con:name>params name</con:name><con:value/></con:property><con:property><con:name>value</con:name><con:value/></con:property><con:property><con:name>user</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>endpiont</con:name><con:value>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:value></con:property><con:property><con:name>month</con:name><con:value>12</con:value></con:property><con:property><con:name>year</con:name><con:value>2015</con:value></con:property><con:property><con:name>errorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>description</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Loyalty: Неверные данные авторизации.</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="registerPreAuth" searchProperties="true" disabled="true" id="20087364-a17e-486f-a4a8-51d7e18b68f3"><con:settings/><con:testStep type="groovy" name="createOrderNumberScript" id="53a5ed2c-0f19-4d7e-a424-43a3acdf39d6"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
//import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

long curTime = System.currentTimeMillis();

String curStringDate = new SimpleDateFormat("yyyyMMddhhmmss").format(curTime);

curTime2 = curTime.toString();

def s4 =  curTime2.substring(curTime2.length() -3,curTime2.length());

curStringDate= curStringDate+s4;
def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
propertiesRegister.setPropertyValue( "OrderNumber", curStringDate);</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="e9c1b41f-f30f-4d39-bb3a-112a94e678ec"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>OrderNumber</con:name><con:value>20140121105515577</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer" id="7cd5a6dd-b048-486f-bc85-befa43d66c3e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>endPoint</con:name><con:sourceType>endPoint</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath>//@ merchantOrderNumber</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="registerOrder" id="d6099986-f116-4c6c-80bf-4c61994df10c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>registerOrder</con:operation><con:request name="registerOrder" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:registerOrderPreAuth>
         <order merchantOrderNumber="20140121105515577" description="testCart singlestep" amount="16000" currency="643" language="ru" pageView="d" sessionTimeoutSecs="300">
            <!--Optional:-->
            <returnUrl>http://ya.ru</returnUrl>
            <!--Zero or more repetitions:-->
      <params name="sbrf_spasibo:amount_bonus" value="16000"/>
            <clientId>123456</clientId>
            <orderBundle>
               <orderCreationDate>2013-07-12T13:51:00</orderCreationDate>
               <customerDetails>
                  <email>johnsmith@mail.ru</email>
                  <phone>89851231234</phone>
                  <contact>Mega Tester</contact>
                  <deliveryInfo>
                     <deliveryType>courier</deliveryType>
                     <country>RU</country>
                     <city>Moscow</city>
                     <postAddress>Земляной Вал 50А стр.2</postAddress>
                  </deliveryInfo>
               </customerDetails>
               <cartItems>

                  <items positionId="1">
                     <name>Metzeler Enduro 3 Sahara</name>
                     <itemDetails>
                        <itemDetailsParams name="brand">Metzeler</itemDetailsParams>
                        <itemDetailsParams name="radius">17inch</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="штук">2</quantity>
                     <itemAmount>5000</itemAmount>
                     <itemCurrency/>
                     <itemCode>T-M-14</itemCode>
                     <discount>
                     	<discountType>discount</discountType>
                     	<discountValue>777</discountValue>
                     </discount>
                  </items>
                  
                  <items positionId="2">
                     <name>Universal Mirror Enduro</name>
                     <itemDetails>
                        <itemDetailsParams name="brand">Noname</itemDetailsParams>
                        <itemDetailsParams name="diameter">12mm</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="штук">1</quantity>
                     <itemAmount>5000</itemAmount>
                     <itemCurrency/>
                     <itemCode>NM-15</itemCode>
                  </items>
                  
                  <items positionId="3">
                     <name>Warm Grips</name>
                     <itemDetails>
                        <itemDetailsParams name="brand">Noname</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="штук">1</quantity>
                     <itemAmount>6000</itemAmount>
                     <itemCurrency/>
                     <itemCode>G-16</itemCode>
                  </items>
               </cartItems>

               <loyalties>
                  <loyalties loyaltyProgramName="sbrf_spasibo" positionId="1">
                     <bonusAmountForDebit>5000</bonusAmountForDebit>
                  </loyalties>
                  <loyalties loyaltyProgramName="sbrf_spasibo" positionId="2">
                     <bonusAmountForDebit>5000</bonusAmountForDebit>
                  </loyalties>
                  <loyalties loyaltyProgramName="sbrf_spasibo" positionId="3">
                     <bonusAmountForDebit>6000</bonusAmountForDebit>
                  </loyalties>
               </loyalties>
               
            </orderBundle>
         </order>
      </mer:registerOrderPreAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="85b6c299-d320-447b-b9a8-7f6901050c8f"/><con:credentials><con:username>rubtsova</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="mdTransfer" id="3373086f-1c7f-4e1b-91cb-c76fd21a4b31"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>registerOrder</con:sourceStep><con:sourcePath>//@orderId</con:sourcePath><con:targetType>orderId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:sourcePath/><con:targetType>orderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>amount</con:name><con:value>1000</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>orderId</con:name><con:value>a230947b-ff1a-42ae-be89-dff46443e9e3</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140121105515577</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deposite" searchProperties="true" disabled="true" id="16da4c90-c43e-4ade-b345-ffa8487cb921"><con:settings/><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>deposite</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false"><con:name>depAmount</con:name><con:sourceType>depositeAmount</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>deposite</con:targetStep><con:targetPath>//@depositAmount</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>username</con:name><con:sourceType>userName</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>deposite</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>deposite</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>orderIdGetStat</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>orderStatusRequest</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="deposite"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>depositOrder</con:operation><con:request name="deposite" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:depositOrder>
         <order language="ru" orderId="b65178cb-d038-41ac-afa1-5795d4b06cf7" depositAmount="5000">
            
            <depositItems>
                 <items positionId="1">
                     <name>Metzeler Enduro 3 Sahara</name>
                     <itemDetails>
                        <itemDetailsParams name="brand">Metzeler</itemDetailsParams>
                        <itemDetailsParams name="radius">17inch</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="штук">1</quantity>
                     <itemAmount>5000</itemAmount>
                     <itemCurrency></itemCurrency>
                     <itemCode>T-M-14</itemCode>
                     <discount>
                     	<discountType>discounta</discountType>
                     	<discountValue>12345</discountValue>
                     </discount>
                  </items>
                  
<!--                  <items positionId="2">-->
<!--                     <name>Universal Mirror Enduro</name>-->
<!--                     <itemDetails>-->
<!--                        <itemDetailsParams name="brand">Noname</itemDetailsParams>-->
<!--                        <itemDetailsParams name="diameter">12mm</itemDetailsParams>-->
<!--                     </itemDetails>-->
<!--                     <quantity measure="штук">1</quantity>-->
<!--                     <itemAmount>5000</itemAmount>-->
<!--                     <itemCurrency></itemCurrency>-->
<!--                     <itemCode>NM-15</itemCode>-->
<!--                  </items>-->
<!--                  -->
<!--                  <items positionId="3">-->
<!--                     <name>Warm Grips</name>-->
<!--                     <itemDetails>-->
<!--                        <itemDetailsParams name="brand">Noname</itemDetailsParams>-->
<!--                     </itemDetails>-->
<!--                     <quantity measure="штук">1</quantity>-->
<!--                     <itemAmount>6000</itemAmount>-->
<!--                     <itemCurrency></itemCurrency>-->
<!--                     <itemCode>G-16</itemCode>-->
<!--                  </items>-->
            </depositItems>
            
            
         </order>
      </mer:depositOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:username>rubtsova</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="orderStatusRequest"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>getOrderStatus</con:operation><con:request name="orderStatusRequest" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:getOrderStatusExtended>
         <order orderId="dbc12307-cb06-4843-90c7-f61de7241c6a" language="ru"/>
      </mer:getOrderStatusExtended>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:username>rubtsova</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>orderId</con:name><con:value>dbc12307-cb06-4843-90c7-f61de7241c6a</con:value></con:property><con:property><con:name>userName</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>depositeAmount</con:name><con:value>10000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="registerBasket" searchProperties="true" disabled="true"><con:description>сделать автоматическое добавление данных в корзину, в зависимости от количества товаров.
</con:description><con:settings/><con:testStep type="groovy" name="createOrderNumberScript"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

long curTime = System.currentTimeMillis();

String curStringDate = new SimpleDateFormat("yyyyMMddhhmmss").format(curTime);

curTime2 = curTime.toString();

def s4 =  curTime2.substring(curTime2.length() -3,curTime2.length());

curStringDate= curStringDate+s4;
def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
propertiesRegister.setPropertyValue( "OrderNumber", curStringDate);</script></con:config></con:testStep><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>OrderNumber</con:name><con:value>20131127121411226</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer"><con:description>www</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>endPoint</con:name><con:sourceType>endPoint</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath>//@ merchantOrderNumber</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>returnUrl</con:name><con:sourceType>returnUrl</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath>//returnUrl</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>value</con:name><con:sourceType>ParamsValue</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath>//params[@name="sbrf_spasibo:amount_bonus"]/@value</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferChildNodes="false"><con:name>clientId</con:name><con:sourceType>clientId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath>//clientId
</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderCreationDate</con:name><con:sourceType>orderCreationDate</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath>//orderCreationDate</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>email</con:name><con:sourceType>email</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath>//email</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="registerOrder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>registerOrder</con:operation><con:request name="registerOrder" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:registerOrder>
         <order merchantOrderNumber="2ewuyfhbgtwee1" description="ук" amount="16000" currency="" language="" pageView="" sessionTimeoutSecs="">
            <!--Optional:-->
            <returnUrl>http://ya.ru</returnUrl>
            <!--Zero or more repetitions:-->
            <params name="" value=""/>
            <!--Optional:-->
            <clientId/>
            <!--Optional:-->
            <orderBundle>
               <!--Optional:-->
               <orderCreationDate>2013-07-12T13:51:00</orderCreationDate>
               <!--Optional:-->
               <customerDetails>
                  <!--Optional:-->
                  <email>bloyh@mail.ru</email>
                  <!--Optional:-->
                  <phone>9032077751</phone>
                  <!--Optional:-->
                  <contact>Moscow to natalie</contact>
                  <!--Optional:-->
                  <deliveryInfo>
                     <!--Optional:-->
                     <deliveryType>take off</deliveryType>
                     <country>russia</country>
                     <city>moscow</city>
                     <postAddress>117465 russia moscow zemval</postAddress>
                  </deliveryInfo>
               </customerDetails>
               <cartItems>
                  <!--Zero or more repetitions:-->
                  <items positionId="1">
                     <name>flowers</name>
                     <!--Optional:-->
                     <itemDetails>
                        <!--Zero or more repetitions:-->
                        <itemDetailsParams name="type">flowers</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="roses">50</quantity>
                     <itemAmount>8000</itemAmount>
                     <itemCurrency></itemCurrency>
                     <itemCode>12345678901</itemCode>
                     <!--Optional:-->
                     <discount>
                        <!--Optional:-->
                        <discountType>none</discountType>
                        <!--Optional:-->
                        <discountValue>10</discountValue>
                     </discount>
                     <!--Optional:-->
                     <agentInterest>
                        <!--Optional:-->
                        <interestType>birth</interestType>
                        <!--Optional:-->
                        <interestValue>17</interestValue>
                     </agentInterest>
                  </items>

                  <items positionId="2">
                     <name>present</name>
                     <!--Optional:-->
                     <itemDetails>
                        <!--Zero or more repetitions:-->
                        <itemDetailsParams name="nameDetailsParams">mistery box</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="ящик">15</quantity>
                     <itemAmount>8000</itemAmount>
                     <itemCurrency></itemCurrency>
                     <itemCode>12</itemCode>
                     <!--Optional:-->
                     <discount>
                        <!--Optional:-->
                        <discountType>discount</discountType>
                        <!--Optional:-->
                        <discountValue>13</discountValue>
                     </discount>
                     <!--Optional:-->
                     <agentInterest>
                        <!--Optional:-->
                        <interestType>birhtday</interestType>
                        <!--Optional:-->
                        <interestValue>0.9</interestValue>
                     </agentInterest>
                  </items>
               </cartItems>
               <!--Optional:-->
               <loyalties>
                  <!--Zero or more repetitions:-->
                  <loyalties loyaltyProgramName="sbrf_spasibo" positionId="q">
                     <bonusAmountForDebit>7000</bonusAmountForDebit>
                     <bonusAmountForCredit>0</bonusAmountForCredit>
                  </loyalties>
                  <loyalties loyaltyProgramName="sbrf_spasibo" positionId="123456789012">
                     <bonusAmountForDebit>8000</bonusAmountForDebit>
                     <bonusAmountForCredit>0</bonusAmountForCredit>
                  </loyalties>
               </loyalties>
            </orderBundle>
         </order>
      </mer:registerOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:username>rubtsova</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="mdTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>registerOrder</con:sourceStep><con:sourcePath>//@orderId</con:sourcePath><con:targetType>orderId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:sourcePath/><con:targetType>orderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>amount</con:name><con:value>1000</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>orderId</con:name><con:value>d41e799d-e637-48bf-8402-55cf35ba0775</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20131127121411226</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:value></con:property><con:property><con:name>===========================</con:name><con:value>===================================</con:value></con:property><con:property><con:name>basket params:</con:name><con:value>Value</con:value></con:property><con:property><con:name>============================</con:name><con:value>===================================</con:value></con:property><con:property><con:name>returnUrl</con:name><con:value>345345</con:value></con:property><con:property><con:name>ParamsName</con:name><con:value>sbrf_spasibo:amount_bonus</con:value></con:property><con:property><con:name>ParamsValue</con:name><con:value>1000</con:value></con:property><con:property><con:name>clientId</con:name><con:value>wewe</con:value></con:property><con:property><con:name>orderCreationDate</con:name><con:value>2013-07-12T13:51:00</con:value></con:property><con:property><con:name>email</con:name><con:value>bloyh@mail.ru</con:value></con:property><con:property><con:name>phone</con:name><con:value>9032177751</con:value></con:property><con:property><con:name>contact</con:name><con:value/></con:property><con:property><con:name>deliveryType</con:name><con:value/></con:property><con:property><con:name>country</con:name><con:value/></con:property><con:property><con:name>city</con:name><con:value/></con:property><con:property><con:name>postAddress</con:name><con:value/></con:property><con:property><con:name>items positionId</con:name><con:value/></con:property><con:property><con:name>name</con:name><con:value/></con:property><con:property><con:name>itemDetailsParams name="brand"</con:name><con:value/></con:property><con:property><con:name>itemDetailsParams name="diameter"</con:name><con:value/></con:property><con:property><con:name>quantity measure="штук"</con:name><con:value/></con:property><con:property><con:name>itemAmount</con:name><con:value/></con:property><con:property><con:name>itemCurrency</con:name><con:value/></con:property><con:property><con:name>itemCode</con:name><con:value/></con:property><con:property><con:name>discountType</con:name><con:value/></con:property><con:property><con:name>discountValue</con:name><con:value/></con:property><con:property><con:name>interestType</con:name><con:value/></con:property><con:property><con:name>interestValue</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="reverse" searchProperties="true" disabled="true"><con:settings/><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>reverse</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>reverse</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>reverse</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderIdStatus</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>orderStatus</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>StatusUname</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>orderStatus</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferChildNodes="false"><con:name>StatusPwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>orderStatus</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="request" name="orderStatus"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>getOrderStatus</con:operation><con:request name="orderStatus" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:getOrderStatus>
         <order orderId="?" language="ru"/>
      </mer:getOrderStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="reverse"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>reverseOrder</con:operation><con:request name="reverse" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:reverseOrder>
         <order language="ru" orderId="">
            <!--Zero or more repetitions:-->
            <params name="?" value="?"/>
         </order>
      </mer:reverseOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value/></con:property><con:property><con:name>pwd</con:name><con:value/></con:property><con:property><con:name>orderId</con:name><con:value/></con:property><con:property><con:name>errorCode</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="create_payment_basket" searchProperties="true" id="457eae4d-37bb-47f7-afa8-046d985a48e9"><con:settings/><con:testStep type="calltestcase" name="create"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>eaef6b86-4ab5-4d44-8a7c-91776c3a206e</con:targetTestCase><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>amount</con:name><con:value>16000</con:value></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>orderId</con:name><con:value>0b10d695-a488-4069-b610-7490658befec</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140121105318701</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:value></con:property></con:properties><con:returnProperties><con:entry>orderId</con:entry><con:entry>orderNumber</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>create</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>payment</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="payment"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b1fff363-7595-4749-b351-c98be60562a7</con:targetTestCase><con:properties><con:property><con:name>orderId</con:name><con:value>0b10d695-a488-4069-b610-7490658befec</con:value></con:property><con:property><con:name>pan</con:name><con:value>4789789089321233</con:value></con:property><con:property><con:name>cvc</con:name><con:value>123</con:value></con:property><con:property><con:name>cardholderName</con:name><con:value>Natalie Bianko</con:value></con:property><con:property><con:name>ip</con:name><con:value>192.168.0.1</con:value></con:property><con:property><con:name>email</con:name><con:value>bloyh@mail.ru</con:value></con:property><con:property><con:name>params name</con:name></con:property><con:property><con:name>value</con:name></con:property><con:property><con:name>user</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>endpiont</con:name><con:value>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:value></con:property><con:property><con:name>month</con:name><con:value>12</con:value></con:property><con:property><con:name>year</con:name><con:value>2015</con:value></con:property><con:property><con:name>errorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>description</con:name><con:value>Попыток оплаты не было.</con:value></con:property></con:properties><con:returnProperties><con:entry>errorCode</con:entry><con:entry>description</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:loadTest name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:reportParameters/></con:loadTest><con:loadTest name="LoadTest 2"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>20</con:testLimit><con:limitType>COUNT</con:limitType><con:loadStrategy><con:type>Thread</con:type><con:config><startThreadCount>1</startThreadCount><endThreadCount>1</endThreadCount></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="refund" searchProperties="true"><con:settings/><con:testStep type="request" name="refund"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>refundOrder</con:operation><con:request name="refund" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:refundOrder>
         <order language="ru" orderId="592535ae-30e7-4431-be2b-31fa1abae7c3" refundAmount="2500">

            <refundItems>
        
                  <items positionId="1">
                     <name>Metzeler Enduro 3 Sahara</name>
                     <itemDetails>
                        <itemDetailsParams name="brand">Metzeler</itemDetailsParams>
                        <itemDetailsParams name="radius">17inch</itemDetailsParams>
                     </itemDetails>
                     <quantity measure="штук">1</quantity>
                     <itemAmount>2500</itemAmount>
                     <itemCurrency></itemCurrency>
                     <itemCode>T-M-14</itemCode>
                     <discount>
                     	<discountType>discount</discountType>
                     	<discountValue>777</discountValue>
                     </discount>
                  </items>
<!--                  -->
<!--                  <items positionId="2">-->
<!--                     <name>Universal Mirror Enduro</name>-->
<!--                     <itemDetails>-->
<!--                        <itemDetailsParams name="brand">Noname</itemDetailsParams>-->
<!--                        <itemDetailsParams name="diameter">12mm</itemDetailsParams>-->
<!--                     </itemDetails>-->
<!--                     <quantity measure="штук">1</quantity>-->
<!--                     <itemAmount>5000</itemAmount>-->
<!--                     <itemCurrency></itemCurrency>-->
<!--                     <itemCode>NM-15</itemCode>-->
<!--                  </items>-->
<!--                  -->
<!--                  <items positionId="3">-->
<!--                     <name>Warm Grips</name>-->
<!--                     <itemDetails>-->
<!--                        <itemDetailsParams name="brand">Noname</itemDetailsParams>-->
<!--                     </itemDetails>-->
<!--                     <quantity measure="штук">0.5</quantity>-->
<!--                     <itemAmount>6000</itemAmount>-->
<!--                     <itemCurrency></itemCurrency>-->
<!--                     <itemCode>G-16</itemCode>-->
<!--                  </items>-->
<!---->
            </refundItems>
<!--           -->
<!--            <params name="sbrf_spasibo:amount_bonus" value="10000"/>-->
         </order>
      </mer:refundOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:username>rubtsova</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createPreOrder_payment_basket" searchProperties="true" id="dc8f5c95-5f59-442e-84a5-3b98c632a30a"><con:settings/><con:testStep type="calltestcase" name="registerPreAuth"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>20087364-a17e-486f-a4a8-51d7e18b68f3</con:targetTestCase><con:properties><con:property><con:name>username</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>amount</con:name><con:value>16000</con:value></con:property><con:property><con:name>currency</con:name><con:value>643</con:value></con:property><con:property><con:name>orderId</con:name><con:value>d42dc93d-d7b8-4c10-865e-48442bea2374</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140120014518315</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:value></con:property></con:properties><con:returnProperties><con:entry>orderId</con:entry><con:entry>orderNumber</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>registerPreAuth</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>payment</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" transferToAll="false"><con:name>orderDep</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>registerPreAuth</con:sourceStep><con:targetType>orderId</con:targetType><con:targetStep>deposit</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="calltestcase" name="payment" disabled="true"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b1fff363-7595-4749-b351-c98be60562a7</con:targetTestCase><con:properties><con:property><con:name>orderId</con:name><con:value>d42dc93d-d7b8-4c10-865e-48442bea2374</con:value></con:property><con:property><con:name>pan</con:name><con:value>4789789089321233</con:value></con:property><con:property><con:name>cvc</con:name><con:value>123</con:value></con:property><con:property><con:name>cardholderName</con:name><con:value>Natalie Bianko</con:value></con:property><con:property><con:name>ip</con:name><con:value>192.168.0.1</con:value></con:property><con:property><con:name>email</con:name><con:value>bloyh@mail.ru</con:value></con:property><con:property><con:name>params name</con:name></con:property><con:property><con:name>value</con:name></con:property><con:property><con:name>user</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>endpiont</con:name><con:value>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:value></con:property><con:property><con:name>month</con:name><con:value>12</con:value></con:property><con:property><con:name>year</con:name><con:value>2015</con:value></con:property><con:property><con:name>errorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>description</con:name><con:value>Запрос успешно обработан</con:value></con:property></con:properties><con:returnProperties><con:entry>errorCode</con:entry><con:entry>description</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="deposit" disabled="true"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>16da4c90-c43e-4ade-b345-ffa8487cb921</con:targetTestCase><con:properties><con:property><con:name>orderId</con:name><con:value>d42dc93d-d7b8-4c10-865e-48442bea2374</con:value></con:property><con:property><con:name>userName</con:name><con:value>rubtsova</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>depositeAmount</con:name><con:value>0</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:loadTest name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>20</con:testLimit><con:limitType>COUNT</con:limitType><con:loadStrategy><con:type>Thread</con:type><con:config><startThreadCount>1</startThreadCount><endThreadCount>1</endThreadCount></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="wargaming.net"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="scriptTests" searchProperties="true"><con:settings/><con:testStep type="groovy" name="3dsCardScript" disabled="true"><con:settings/><con:config><script>import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import static org.hamcrest.CoreMatchers.*;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import java.util.*;
import java.text.*;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

//--------------------------------------------------
def Properties = testRunner.testCase.getTestStepByName( "Properties");

String p = "";
 WebDriver driver = new FirefoxDriver();


 driver.get("https://pay-sandbox.wargaming.net");
 driver.findElement(By.id("id_secret_key")).clear();
 driver.findElement(By.id("id_secret_key")).sendKeys("g92oWUZb8Z6a9TnIRrZD");
driver.findElement(By.xpath("/html/body/form/button")).click();

Thread.sleep(1000);

driver.findElement(By.xpath("/html/body/div[2]/div/div/div/ul/li/a")).click();

Thread.sleep(3000);

new Select(driver.findElement(By.id("id_payment_method"))).selectByVisibleText("Alfa Bank Credit cards");

 driver.findElement(By.id("id_amount")).sendKeys("1");
 driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form/div[9]/button")).click();
 
p = driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form/p/a")).getText();
driver.findElement(By.xpath("/html/body/div[2]/div/div/div/ul/li[2]/a")).click();

Thread.sleep(1000);

 driver.findElement(By.id("id_url")).sendKeys(p);
 driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form/button")).click();
 driver.findElement(By.id("id_param_value_0")).clear();
 driver.findElement(By.id("id_param_value_0")).sendKeys("sandbox");
 
attribute = driver.findElement(By.id("id_param_value_7")).getAttribute("value");//.getText();

driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form[2]/button")).click();
 
Thread.sleep(1000);

d = driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/div[2]/div[3]/a")).getText();


driver.get("https://test.paymentgate.ru/devmerchant/wargaming/register.do"+d);

driver.findElement(By.id("pan1")).sendKeys("4111");
driver.findElement(By.id("pan2")).sendKeys("1111");
driver.findElement(By.id("pan3")).sendKeys("1111");
driver.findElement(By.id("pan4")).sendKeys("1111");
driver.findElement(By.id("month")).sendKeys("12");
driver.findElement(By.id("year")).sendKeys("2015");
driver.findElement(By.id("iTEXT")).sendKeys("A Moriarty");
driver.findElement(By.id("iCVC")).sendKeys("123");
driver.findElement(By.id("buttonPayment")).click();

Thread.sleep(3000);

WebElement pass = driver.findElement(By.id("password"));
pass.sendKeys("12345678");
driver.findElement(By.id("submit_id")).click();
Thread.sleep(3000);

log.info driver.findElement(By.id("message")).getText();
driver.get("https://pay-sandbox.wargaming.net");
driver.findElement(By.xpath("/html/body/div[2]/div/div/div/ul/li[3]/a")).click();
Thread.sleep(1000);



if ((driver.findElement(By.xpath("//table[@id='transactions-list']/tbody/tr/td[2]")).getText()) == attribute)
{
	log.info attribute;
	log.info driver.findElement(By.xpath("//table[@id='transactions-list']/tbody/tr/td[10]")).getText();
	}

//	:parent:child;
driver.quit();
</script></con:config></con:testStep><con:testStep type="groovy" name="sslCardScript"><con:settings/><con:config><script><![CDATA[import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import static org.hamcrest.CoreMatchers.*;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import java.util.*;
import java.text.*;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

//--------------------------------------------------
def Properties = testRunner.testCase.getTestStepByName( "Properties");

String p = "";
 WebDriver driver = new FirefoxDriver();


 driver.get("https://pay-sandbox.wargaming.net");
 driver.findElement(By.id("id_secret_key")).clear();
 driver.findElement(By.id("id_secret_key")).sendKeys("g92oWUZb8Z6a9TnIRrZD");
driver.findElement(By.xpath("/html/body/form/button")).click();

Thread.sleep(1000);

driver.findElement(By.xpath("/html/body/div[2]/div/div/div/ul/li/a")).click();

Thread.sleep(3000);

new Select(driver.findElement(By.id("id_payment_method"))).selectByVisibleText("Alfa Bank Credit cards");

 driver.findElement(By.id("id_amount")).sendKeys("1");
 driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form/div[9]/button")).click();
 
p = driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form/p/a")).getText();

log.info  "https://test.paymentgate.ru/devmerchant/wargaming/register.do"+p;

driver.findElement(By.xpath("/html/body/div[2]/div/div/div/ul/li[2]/a")).click();

Thread.sleep(1000);

 driver.findElement(By.id("id_url")).sendKeys(p);
 driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form/button")).click();
 driver.findElement(By.id("id_param_value_0")).clear();
 driver.findElement(By.id("id_param_value_0")).sendKeys("sandbox");
 
attribute = driver.findElement(By.id("id_param_value_7")).getAttribute("value");//.getText();
order = driver.findElement(By.id("id_param_value_7")).getAttribute("value");//.getText();
user = driver.findElement(By.id("id_param_value_6")).getAttribute("value");//.getText();
amount = driver.findElement(By.id("id_param_value_5")).getAttribute("value");//.getText();
currency = driver.findElement(By.id("id_param_value_4")).getAttribute("value");//.getText();
user_country = driver.findElement(By.id("id_param_value_3")).getAttribute("value");//.getText();
user_language = driver.findElement(By.id("id_param_value_2")).getAttribute("value");//.getText();
payment_method = driver.findElement(By.id("id_param_value_1")).getAttribute("value");//.getText();
wg_server = driver.findElement(By.id("id_param_value_0")).getAttribute("value");//.getText();

driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form[2]/button")).click();
 
Thread.sleep(1000);

d = driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/div[2]/div[3]/a")).getText();



log.info "https://test.paymentgate.ru/devmerchant/wargaming/register.do"+d;

driver.get("https://test.paymentgate.ru/devmerchant/wargaming/register.do"+d);
/*
driver.findElement(By.id("pan1")).sendKeys("5555");
driver.findElement(By.id("pan2")).sendKeys("5555");
driver.findElement(By.id("pan3")).sendKeys("5555");
driver.findElement(By.id("pan4")).sendKeys("5599");
driver.findElement(By.id("month")).sendKeys("12");
driver.findElement(By.id("year")).sendKeys("2015");
driver.findElement(By.id("iTEXT")).sendKeys("A Moriarty");
driver.findElement(By.id("iCVC")).sendKeys("123");
driver.findElement(By.id("buttonPayment")).click();

Thread.sleep(3000);

log.info driver.findElement(By.id("message")).getText();
driver.get("https://pay-sandbox.wargaming.net");
Thread.sleep(1000);
driver.findElement(By.xpath("/html/body/div[2]/div/div/div/ul/li[3]/a")).click();
Thread.sleep(1000);

if ((driver.findElement(By.xpath("//table[@id='transactions-list']/tbody/tr/td[2]")).getText()) == attribute)
{
	log.info attribute;
	log.info driver.findElement(By.xpath("//table[@id='transactions-list']/tbody/tr/td[10]")).getText();
	}

driver.quit();




/*
https://pay-sandbox.wargaming.net/sandbox/reversal/?
status=success&
external_transaction_id=bf11ff6a0ec54630bf8780cb14191ce3&
reason=User+requested+refund&
cancellation_type=refund&
signature=43c1ca8a2be972fedaa500a315e6a731&
payment_gateway=mock_aggregator&
parent_transaction_id=43d239d5f87f46faa87c931582c66622
https://test.paymentgate.ru/devpayment/merchants/rbs/payment_ru.html?mdOrder=765af44c-a928-455c-ba83-a04108938243

https://pay-sandbox.wargaming.net/sandbox/payment/?
payment_gateway=Alfa_Bank
&payment_method=credit_card
&external_transaction_id=7e8318de-1c74-40cd-9f9c-4b46a7370b33
&user=payment_test@test.com
&order=29b2b234696c11e395aa005056a964fe
&amount=32.95
&currency=RUB
&user_amount=32.95
&user_currency=RUB
&transfer_amount=32.95
&transfer_currency=RUB
&user_country=RU
&payment_status=success
&signature=35e24bd4383471bcc5a1db43fa84dc8a


Fri Dec 20 15:41:20 MSK 2013:INFO:order29b2b234696c11e395aa005056a964fe
Fri Dec 20 15:41:20 MSK 2013:INFO:user payment_test@test.com
Fri Dec 20 15:41:20 MSK 2013:INFO:amount 32.95
Fri Dec 20 15:41:20 MSK 2013:INFO:currency RUB
Fri Dec 20 15:41:20 MSK 2013:INFO:user_country RU
Fri Dec 20 15:41:20 MSK 2013:INFO:user_language RU
Fri Dec 20 15:41:20 MSK 2013:INFO:payment_method credit_card_ab
Fri Dec 20 15:41:20 MSK 2013:INFO:wg_server sandbox
Fri Dec 20 15:41:20 MSK 2013:INFO:singnature 35e24bd4383471bcc5a1db43fa84dc8a
Fri Dec 20 15:41:20 MSK 2013:INFO:orderId 7e8318de-1c74-40cd-9f9c-4b46a7370b33

https://pay-sandbox.wargaming.net/sandbox/reversal/?
payment_gateway=Alfa_Bank
&cancellation_type=refund
&parent_transaction_id=29b2b234696c11e395aa005056a964fe
&external_transaction_id=7e8318de-1c74-40cd-9f9c-4b46a7370b33
&reason=test
&signature=35e24bd4383471bcc5a1db43fa84dc8a
*/]]></script></con:config></con:testStep><con:testStep type="groovy" name="badTests" disabled="true"><con:settings/><con:config><script><![CDATA[import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import static org.hamcrest.CoreMatchers.*;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import java.util.*;
import java.text.*;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;
import java.lang.String;
import java.security.MessageDigest;


//--------------------------------------------------
def Properties = testRunner.testCase.getTestStepByName( "Properties");

String p = "";
 WebDriver driver = new FirefoxDriver();


 driver.get("https://pay-sandbox.wargaming.net");
 driver.findElement(By.id("id_secret_key")).clear();
 driver.findElement(By.id("id_secret_key")).sendKeys("g92oWUZb8Z6a9TnIRrZD");
driver.findElement(By.xpath("/html/body/form/button")).click();


Thread.sleep(1000);

driver.findElement(By.xpath("/html/body/div[2]/div/div/div/ul/li/a")).click();

Thread.sleep(3000);

new Select(driver.findElement(By.id("id_payment_method"))).selectByVisibleText("Alfa Bank Credit cards");

 driver.findElement(By.id("id_amount")).sendKeys("1");
 driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form/div[9]/button")).click();
 
p = driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form/p/a")).getText();

//log.info  "https://test.paymentgate.ru/devmerchant/wargaming/register.do"+p;

driver.findElement(By.xpath("/html/body/div[2]/div/div/div/ul/li[2]/a")).click();

Thread.sleep(1000);

 driver.findElement(By.id("id_url")).sendKeys(p);
 driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form/button")).click();
 driver.findElement(By.id("id_param_value_0")).clear();
 driver.findElement(By.id("id_param_value_0")).sendKeys("sandbox");
 
attribute = driver.findElement(By.id("id_param_value_7")).getAttribute("value");//.sendKeys();
order = driver.findElement(By.id("id_param_value_7")).getAttribute("value");//.sendKeys();
user = driver.findElement(By.id("id_param_value_6")).getAttribute("value");//.sendKeys();
amount = driver.findElement(By.id("id_param_value_5")).getAttribute("value");//.sendKeys();
currency = driver.findElement(By.id("id_param_value_4")).getAttribute("value");//.sendKeys();
user_country = driver.findElement(By.id("id_param_value_3")).getAttribute("value");//.sendKeys();
user_language = driver.findElement(By.id("id_param_value_2")).getAttribute("value");//.sendKeys();
payment_method = driver.findElement(By.id("id_param_value_1")).getAttribute("value");//.sendKeys();
wg_server = driver.findElement(By.id("id_param_value_0")).getAttribute("value");//.sendKeys("sandbox");

driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/form[2]/button")).click();
 
Thread.sleep(1000);

d = driver.findElement(By.xpath("/html/body/div[2]/div/div[2]/div[2]/div[3]/a")).getText();
signature = driver.findElement(By.xpath("//div[2]/div[2]/div[2]")).getText();
signature = signature.substring(10);


log.info "https://test.paymentgate.ru/devmerchant/wargaming/register.do"+d;
cleanUrl = "https://test.paymentgate.ru/devmerchant/wargaming/register.do"+d;
/*
driver.get("https://test.paymentgate.ru/devmerchant/wargaming/register.do"+d);
orderId = driver.getCurrentUrl();
orderId= orderId.substring(77);
//log.info orderId;

driver.findElement(By.id("pan1")).sendKeys("5555");
driver.findElement(By.id("pan2")).sendKeys("5555");
driver.findElement(By.id("pan3")).sendKeys("5555");
driver.findElement(By.id("pan4")).sendKeys("5599");
driver.findElement(By.id("month")).sendKeys("12");
driver.findElement(By.id("year")).sendKeys("2015");
driver.findElement(By.id("iTEXT")).sendKeys("A Moriarty");
driver.findElement(By.id("iCVC")).sendKeys("123");
driver.findElement(By.id("buttonPayment")).click();

Thread.sleep(3000);

//log.info driver.findElement(By.id("message")).getText();
driver.get("https://pay-sandbox.wargaming.net");
Thread.sleep(1000);
driver.findElement(By.xpath("/html/body/div[2]/div/div/div/ul/li[3]/a")).click();
Thread.sleep(1000);

if ((driver.findElement(By.xpath("//table[@id='transactions-list']/tbody/tr/td[2]")).getText()) == attribute)
{
	log.info attribute;
	log.info driver.findElement(By.xpath("//table[@id='transactions-list']/tbody/tr/td[10]")).getText();
	log.info "========================================================";
	}

log.info "https://pay-sandbox.wargaming.net/sandbox/payment/?";

log.info "attribute "+ attribute;//.sendKeys();
log.info "order"+  order;
log.info "user "+user;
log.info "amount "+amount;
log.info "currency "+currency;
log.info "user_country "+ user_country;
log.info "user_language "+user_language;
log.info "payment_method "+ payment_method;
log.info "wg_server "+ wg_server;
log.info "singnature "+signature;
log.info "orderId"+orderId;
//user_currency="+currency+"&payment_datetime=2013-07-11+18%3A15%3A08&dryrun=false&transfer_amount="+amount+"&payment_method=credit_card&payment_status=success&signature="+signature+"&transfer_currency="+currency+"&user_country="+user_country+"&external_transaction_id="+orderId+"&currency=RUB&amount="+amount"&user_amount="+amount+"&user=wowp_u1%40mailinator.com&user_language=ru&item_name=&order="+order+"&payment_gateway=mock_aggregator"

/*
driver.quit();
*/
// 5222235376999572

	def out = new File("d:/cleanUrls.csv");
	def row = [cleanUrl];
	out.append row.join(';');
	out.append '\n';
driver.quit();



]]></script></con:config></con:testStep><con:loadTest name="LoadTest 1"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT</con:limitType><con:loadStrategy><con:type>Thread</con:type><con:config><startThreadCount>1</startThreadCount><endThreadCount>1</endThreadCount></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="alfatests"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="register" searchProperties="true" id="946a23d3-2dcd-45ad-9e1a-e2e79b3c348b"><con:settings/><con:testStep type="groovy" name="createOrderNumberScript"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

long curTime = System.currentTimeMillis();

String curStringDate = new SimpleDateFormat("yyyyMMddhhmmss").format(curTime);

curTime2 = curTime.toString();

def s4 =  curTime2.substring(curTime2.length() -3,curTime2.length());

curStringDate= curStringDate+s4;
def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
propertiesRegister.setPropertyValue( "OrderNumber", curStringDate);</script></con:config></con:testStep><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>OrderNumber</con:name><con:value>20140114014252267</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>endPoint</con:name><con:sourceType>endPoint</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath>//@ merchantOrderNumber</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="registerOrder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>registerOrder</con:operation><con:request name="registerOrder" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://test.paymentgate.ru/devpayment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:registerOrder>
         <order merchantOrderNumber="20140114014252267" description="fgfb" amount="1000" currency="810" language="ru" pageView="?">
            <!--Optional:-->
            <returnUrl>""</returnUrl>
            <!--Zero or more repetitions:-->
            <params name="q" value="1"/>
                        <params name="1" value="2"/>
            <!--Optional:-->

         </order>
      </mer:registerOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:username>test</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="mdTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>registerOrder</con:sourceStep><con:sourcePath>//@orderId</con:sourcePath><con:targetType>orderId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:sourcePath/><con:targetType>orderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>amount</con:name><con:value>1000</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>orderId</con:name><con:value>da58e3d6-6ddd-4b44-a489-4a501af59378</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20140114014252267</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://test.paymentgate.ru/devpayment/webservices/merchant-ws</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="paymentOrder" searchProperties="true" id="af3ee0ab-177a-4791-97d5-e91645f98c82"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>paReq</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>redirect</con:name><con:value>https://test.paymentgate.ru:443/devpayment/rest/finish3ds.do</con:value></con:property><con:property><con:name>acsUrl</con:name><con:value>https://test.paymentgate.ru/acs/auth/start.do</con:value></con:property><con:property><con:name>info</con:name><con:value>Ваш платёж обработан, происходит переадресация...</con:value></con:property><con:property><con:name>errorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>MD</con:name><con:value>741dc171-ce2b-4bc1-b3f0-eef6b0c8c2e4</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pan</con:name><con:sourceType>pan</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@pan</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>cvc</con:name><con:sourceType>cvc</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@cvc</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>cardHolderName</con:name><con:sourceType>cardholderName</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@cardholderName</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>ip</con:name><con:sourceType>ip</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@ip</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>email</con:name><con:sourceType>email</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@email</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>paramsName</con:name><con:sourceType>params name</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@name</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false"><con:name>value</con:name><con:sourceType>value</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@value</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>username</con:name><con:sourceType>user</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>paymentOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>endpiont</con:name><con:sourceType>endpiont</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>month</con:name><con:sourceType>month</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@month</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>year</con:name><con:sourceType>year</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>paymentOrder</con:targetStep><con:targetPath>//@year</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="paymentOrder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>paymentOrder</con:operation><con:request name="paymentOrder" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://test.paymentgate.ru/devpayment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:paymentOrder>
         <order orderId="741dc171-ce2b-4bc1-b3f0-eef6b0c8c2e4" year="2015" month="12" pan="4111111111111111" cvc="123" cardholderName="A Moriarty" language="ru" ip="192.168.0.1" email="bloyh@mail.ru">
            <!--Zero or more repetitions:-->
            <params name="q" value="2"/>
         </order>
      </mer:paymentOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:username>test</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="dataTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>paReq</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>paymentOrder</con:sourceStep><con:sourcePath>//@paReq</con:sourcePath><con:targetType>paReq</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>acsUrl</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>paymentOrder</con:sourceStep><con:sourcePath>//@acsUrl</con:sourcePath><con:targetType>acsUrl</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>redirect</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>paymentOrder</con:sourceStep><con:sourcePath>//@redirect</con:sourcePath><con:targetType>redirect</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" transferChildNodes="false" entitize="false"><con:name>answer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>paymentOrder</con:sourceStep><con:sourcePath>//@info</con:sourcePath><con:targetType>info</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>errorCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>paymentOrder</con:sourceStep><con:sourcePath>//@errorCode</con:sourcePath><con:targetType>errorCode</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" useXQuery="false" transferChildNodes="false" ignoreEmpty="false"><con:name>MD</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType>MD</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>orderStatusRequest</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>endPoint</con:name><con:sourceType>endpiont</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType>Endpoint</con:targetType><con:targetStep>orderStatusRequest</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="splitScript"><con:settings/><con:config><script>

def properties = testRunner.testCase.getTestStepByName( "Properties");

def acsUrl	= properties.getPropertyValue( "acsUrl");

if(acsUrl == null)
testRunner.gotoStepByName( "orderStatusRequest")
else
testRunner.gotoStepByName("PaReqScript");
// do something else



</script></con:config></con:testStep><con:testStep type="groovy" name="PaReqScript"><con:settings/><con:config><script>import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import static org.hamcrest.CoreMatchers.*;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import java.util.*;
import java.text.*;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

//--------------------------------------------------
def Properties = testRunner.testCase.getTestStepByName( "Properties");
def paReq			= Properties.getPropertyValue( "PaReq" );
def termUrl			= Properties.getPropertyValue( "redirect" );
def acsUrlText			= Properties.getPropertyValue( "acsUrl" );
def mdOrder			= Properties.getPropertyValue( "MD" );


 WebDriver driver = new FirefoxDriver();
 driver.get("https://test.paymentgate.ru/testpayment/merchants/test/test_3dsec.html");

driver.findElement(By.id("acsUrlText")).clear();
driver.findElement(By.id("acsUrlText")).sendKeys(acsUrlText);
driver.findElement(By.id("termUrlText")).clear();
driver.findElement(By.id("termUrlText")).sendKeys(termUrl);
driver.findElement(By.id("mdText")).clear();
driver.findElement(By.id("mdText")).sendKeys(mdOrder);
driver.findElement(By.id("paReqText")).clear();
driver.findElement(By.id("paReqText")).sendKeys(paReq);

driver.findElement(By.id("redirectToAcs")).click();

Thread.sleep(1000);

WebElement pass = driver.findElement(By.id("password"));
pass.sendKeys("12345678");
driver.findElement(By.id("submit_id")).click();
 Properties.setPropertyValue( "PaReq",null );
driver.quit();

</script></con:config></con:testStep><con:testStep type="request" name="orderStatusRequest"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>getOrderStatus</con:operation><con:request name="orderStatusRequest" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://test.paymentgate.ru/devpayment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:getOrderStatus>
         <order orderId="741dc171-ce2b-4bc1-b3f0-eef6b0c8c2e4" language="ru"/>
      </mer:getOrderStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:username>test</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="completeTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>acd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>orderStatusRequest</con:sourceStep><con:sourcePath>//@actionCodeDescription</con:sourcePath><con:targetType>description</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" useXQuery="false" ignoreEmpty="false" entitize="false"><con:name>actionCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>orderStatusRequest</con:sourceStep><con:sourcePath>//@errorCode</con:sourcePath><con:targetType>errorCode</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>orderId</con:name><con:value>741dc171-ce2b-4bc1-b3f0-eef6b0c8c2e4</con:value></con:property><con:property><con:name>pan</con:name><con:value>4111111111111111</con:value></con:property><con:property><con:name>cvc</con:name><con:value>123</con:value></con:property><con:property><con:name>cardholderName</con:name><con:value>A Moriarty</con:value></con:property><con:property><con:name>ip</con:name><con:value>192.168.0.1</con:value></con:property><con:property><con:name>email</con:name><con:value>bloyh@mail.ru</con:value></con:property><con:property><con:name>params name</con:name><con:value>q</con:value></con:property><con:property><con:name>value</con:name><con:value>2</con:value></con:property><con:property><con:name>user</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>endpiont</con:name><con:value>https://test.paymentgate.ru/devpayment/webservices/merchant-ws</con:value></con:property><con:property><con:name>month</con:name><con:value>12</con:value></con:property><con:property><con:name>year</con:name><con:value>2015</con:value></con:property><con:property><con:name>errorCode</con:name><con:value>0</con:value></con:property><con:property><con:name>description</con:name><con:value>Попыток оплаты не было.</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="registerPreAuth" searchProperties="true"><con:settings/><con:testStep type="groovy" name="createOrderNumberScript"><con:settings/><con:config><script>import java.util.*;
import java.text.*;
import java.lang.String;
import org.codehaus.groovy.runtime.TimeCategory;
import org.apache.commons.lang.RandomStringUtils;
import org.apache.commons.lang.RandomStringUtils;
import groovy.json.JsonBuilder;
import groovy.json.JsonSlurper;
import groovy.json.JsonOutput;
import java.security.MessageDigest;

long curTime = System.currentTimeMillis();

String curStringDate = new SimpleDateFormat("yyyyMMddhhmmss").format(curTime);

curTime2 = curTime.toString();

def s4 =  curTime2.substring(curTime2.length() -3,curTime2.length());

curStringDate= curStringDate+s4;
def propertiesRegister = testRunner.testCase.getTestStepByName( "Properties");
propertiesRegister.setPropertyValue( "OrderNumber", curStringDate);</script></con:config></con:testStep><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>OrderNumber</con:name><con:value>20131127121411226</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>endPoint</con:name><con:sourceType>endPoint</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Endpoint</con:targetType><con:targetStep>registerOrder</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>registerOrder</con:targetStep><con:targetPath>//@ merchantOrderNumber</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="registerOrder"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>registerOrder</con:operation><con:request name="registerOrder" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:registerOrderPreAuth>
         <order merchantOrderNumber="20131127121411226" description="fgfb" amount="1000" currency="810" language="ru" pageView="?">
            <!--Optional:-->
            <returnUrl>""</returnUrl>
            <!--Zero or more repetitions:-->
            <params name="?" value="?"/>
            <!--Optional:-->

         </order>
      </mer:registerOrderPreAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:username>test</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="mdTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>registerOrder</con:sourceStep><con:sourcePath>//@orderId</con:sourcePath><con:targetType>orderId</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderNumber</con:name><con:sourceType>OrderNumber</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:sourcePath/><con:targetType>orderNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>test</con:value></con:property><con:property><con:name>pwd</con:name><con:value>testPwd</con:value></con:property><con:property><con:name>amount</con:name><con:value>1000</con:value></con:property><con:property><con:name>currency</con:name><con:value>810</con:value></con:property><con:property><con:name>orderId</con:name><con:value>d41e799d-e637-48bf-8402-55cf35ba0775</con:value></con:property><con:property><con:name>orderNumber</con:name><con:value>20131127121411226</con:value></con:property><con:property><con:name>endPoint</con:name><con:value>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deposite" searchProperties="true"><con:settings/><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>deposite</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false"><con:name>depAmount</con:name><con:sourceType>depositeAmount</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>deposite</con:targetStep><con:targetPath>//@depositAmount</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>username</con:name><con:sourceType>userName</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>deposite</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>deposite</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>orderIdGetStat</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>orderStatusRequest</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="deposite"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>depositOrder</con:operation><con:request name="deposite" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:depositOrder>
         <order language="?" orderId="" depositAmount="">
            <!--Zero or more repetitions:-->
            <params name="?" value="?"/>
         </order>
      </mer:depositOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:password/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="orderStatusRequest"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>getOrderStatus</con:operation><con:request name="orderStatusRequest" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:getOrderStatus>
         <order orderId="" language="ru"/>
      </mer:getOrderStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:username>test</con:username><con:password>testPwd</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>orderId</con:name><con:value/></con:property><con:property><con:name>userName</con:name><con:value/></con:property><con:property><con:name>pwd</con:name><con:value/></con:property><con:property><con:name>depositeAmount</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="reverse" searchProperties="true"><con:settings/><con:testStep type="transfer" name="PropertyTransfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>reverse</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>pwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>reverse</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>orderId</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>reverse</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>orderIdStatus</con:name><con:sourceType>orderId</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>orderStatus</con:targetStep><con:targetPath>//@orderId</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>StatusUname</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Username</con:targetType><con:targetStep>orderStatus</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferChildNodes="false"><con:name>StatusPwd</con:name><con:sourceType>pwd</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Password</con:targetType><con:targetStep>orderStatus</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="request" name="orderStatus"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>getOrderStatus</con:operation><con:request name="orderStatus" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:getOrderStatus>
         <order orderId="?" language="ru"/>
      </mer:getOrderStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="reverse"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MerchantServiceImplServiceSoapBinding</con:interface><con:operation>reverseOrder</con:operation><con:request name="reverse" wssPasswordType="PasswordText"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://3dsec.sberbank.ru/payment/webservices/merchant-ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mer="http://engine.paymentgate.ru/webservices/merchant">
   <soapenv:Header/>
   <soapenv:Body>
      <mer:reverseOrder>
         <order language="ru" orderId="">
            <!--Zero or more repetitions:-->
            <params name="?" value="?"/>
         </order>
      </mer:reverseOrder>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value/></con:property><con:property><con:name>pwd</con:name><con:value/></con:property><con:property><con:name>orderId</con:name><con:value/></con:property><con:property><con:name>errorCode</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>EndPoint</con:name><con:value>https://3dsec.sberbank.ru/testpayment/rest/</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>